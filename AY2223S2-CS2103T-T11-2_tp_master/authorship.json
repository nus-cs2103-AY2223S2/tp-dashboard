[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"![Ui](docs/images/ui_main.png)","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"\u003cp \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"  \u003ca href\u003d\"https://github.com/AY2223S2-CS2103T-T11-2/tp/actions\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"    \u003cimg src\u003d\"https://github.com/AY2223S2-CS2103T-T11-2/tp/workflows/Java%20CI/badge.svg\" alt\u003d\"CI Status\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"  \u003c/a\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"  \u003ca href\u003d\"https://codecov.io/gh/AY2223S2-CS2103T-T11-2/tp\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    \u003cimg src\u003d\"https://codecov.io/gh/AY2223S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg?token\u003d1KZTHMDDUF\" alt\u003d\"codecov\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"  \u003c/a\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"## About QuickContacts","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts (QC) is a **cross-platform desktop application** that enables you to easily manage your contacts and meetings **all in one place**! With QC, you will never miss any meetings with your friends or colleagues.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"QC is specially designed for:","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"* _Seamless_ creation and management of contacts and meetings","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"* Users who have a _large_ number of contacts and _meetings_","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"* Typists","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"For more information, check out our [developer guide](https://ay2223s2-cs2103t-t11-2.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"## Features","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"* Create and manage contacts and their details","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"* Create and manage meetings with contact(s)","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"* Autocomplete command inputs","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"* Traverse back and forth between commands","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"## Acknowledgements","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Beebeeoii":26,"KS2499":5,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"run {","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Beebeeoii":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"### Lee Jia Wei","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"\u003cimg src\u003d\"images/beebeeoii.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"[[homepage](https://jiaweilee.com)]","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"[[github](https://github.com/Beebeeoii)]","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"[[portfolio](team/beebeeoii.md)]","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"* Role: Team Member","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"* Responsibilities: To be added","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"### Kannusami Saraan","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"\u003cimg src\u003d\"images/ks2499.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"[[github](http://github.com/ks2499)]","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"[[portfolio](team/ks2499.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"* Role: Team Member","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"* Responsibilities: To be added","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"### Kelvin Chua","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"\u003cimg src\u003d\"images/chuakid.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"[[github](http://github.com/chuakid)]","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"[[portfolio](team/chuakid.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"- Role: To Be Added","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"- Responsibilities: To Be Added","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"thedesalizes"},"content":"### Ethan Tan","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"\u003cimg src\u003d\"images/thedesalizes.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"thedesalizes"},"content":"[[github](http://github.com/thedesalizes)]","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"thedesalizes"},"content":"[[portfolio](team/thedesalizes.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"thedesalizes"},"content":"- Role: To Be Added","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"thedesalizes"},"content":"- Responsibilities: To Be Added","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"### Jeremy Khoo","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"\u003cimg src\u003d\"images/jeremykhoo-nus.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"[[github](http://github.com/jeremykhoo-NUS)]","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"[[portfolio](team/jeremykhoo-nus.md)]","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"- Role: To Be Added","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"- Responsibilities: To Be Added","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"thedesalizes":5,"Beebeeoii":14,"KS2499":6,"chuakid":6,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"We would like to thank:","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"* [CS2103T AY22/23 Semester 2 teaching team](https://nus-cs2103-ay2223s2.github.io/website/admin/instructors.html) for imparting valuable knowledge, skills and guidance","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"* [SE-edu AddressBook 3](https://github.com/se-edu/addressbook-level3) which `QuickContacts` is built on","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"* Open-source libraries used in `QuickContacts`:","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"  * [JavaFX](https://openjfx.io/)","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"  * [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"  * [JUnit](https://junit.org/junit5/)","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"#### Main components of the architecture","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"#### Interaction between architecture components","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"The **_Sequence Diagram_** below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) **_class diagram_** below.","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `MeetingListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"Here\u0027s a (partial) **_class diagram_** of the `Logic` component:","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object) and `Meeting` objects (which are contained in a `UniqueMeetingList` object).","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"\u003cimg src\u003d\"images/ModelPersonDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"The `Person` model,","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"* consists of individual classes `Name`, `Phone`, `Email`, `Address` and `Tag` which are used to store the respective information of a `Person`.","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"\u003cimg src\u003d\"images/ModelMeetingDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"The `Meeting` model,","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"* consists of individual classes `Title`, `DateTime`, `Person`, `Location` and `Description` which are used to store the respective information of a `Meeting`.","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"KS2499"},"content":"### CRUD Operations of Meeting and Find Meeting","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"KS2499"},"content":"#### Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"KS2499"},"content":"##### Adding","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"KS2499"},"content":"The `AddMeetingCommand` adds a meeting to the address book. The meeting is added by creating a `Meeting` object and ","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"KS2499"},"content":"adding it to the `UniqueMeetingList` in the `Model` component. The `AddMeetingCommandParser` parses the user input and","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"KS2499"},"content":"creates an `AddMeetingCommand` object. The `AddMeetingCommand` is executed and the meeting is added to the ","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"KS2499"},"content":"address book\u0027s `UniqueMeetingList`. The input format is as follows: ","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"KS2499"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"KS2499"},"content":"// a standard addMeeting command where all arguments are compulsory where Person is minimally 1","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"KS2499"},"content":"addm t/TITLE d/DATE_TIME [p/PERSON...] l/LOCATION d/DESCRIPTION","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"KS2499"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"KS2499"},"content":"The `AddMeetingCommand` throws a `CommandException` if any of the person\u0027s names is not found in the address book (i.e. ","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"KS2499"},"content":"no person in the address book has a matching name). The name must match exactly (**case-sensitive**) or else the ","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"KS2499"},"content":"\u0027CommandException\u0027 will be thrown.","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"KS2499"},"content":"##### Editing","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"KS2499"},"content":"##### Deleting","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"KS2499"},"content":"##### Finding","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"KS2499"},"content":"The `FindMeetingCommand` finds meetings in the address book. The meeting is found by creating a ","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"KS2499"},"content":"`MeetingContainsNamesPredicate` object and passing it to the `updateFilteredMeetingList` method in the `Model` ","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"KS2499"},"content":"component. The `FindMeetingCommandParser` takes in a list of names and creates a `FindMeetingCommand` object. ","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"KS2499"},"content":"The `FindMeetingCommand` is executed and the `MeetingContainsNamesPredicate` is passed to the ","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"KS2499"},"content":"`updateFilteredMeetingList` method. The input format is as follows:","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"KS2499"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"KS2499"},"content":"// no arguments to list all meetings","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"KS2499"},"content":"findm","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"KS2499"},"content":"// arguments supplied to find meetings with matching names","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"KS2499"},"content":"findm n/NAME [n/NAME]... ","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"KS2499"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"KS2499"},"content":"The `FindMeetingCommand` throws a `CommandException` if no names are provided and there is trailing whitespace.","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"KS2499"},"content":"The names no need to match exactly (**case-INsensitive**) but the Meetings are only filtered by one of the contact\u0027s names,","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"KS2499"},"content":"as *space* is used as a delimiter. The command can be used **without arguments** to get back the original view of all meetings.","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"chuakid"},"content":"### Exporting and importing of contacts","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"chuakid"},"content":"#### Implementation","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"chuakid"},"content":"##### Exporting","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"chuakid"},"content":"Exporting generates a JSON for the contacts at the indices given.","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"chuakid"},"content":"For example, `export p/ 1 p/2` generates a JSON for the first and second contacts.","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"chuakid"},"content":"Example JSON:","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"chuakid"},"content":"```json","lastModifiedDate":"2023-03-22"},{"lineNumber":211,"author":{"gitId":"chuakid"},"content":"[ {","lastModifiedDate":"2023-03-22"},{"lineNumber":212,"author":{"gitId":"chuakid"},"content":"  \"name\" : \"Alice Pauline\",","lastModifiedDate":"2023-03-22"},{"lineNumber":213,"author":{"gitId":"chuakid"},"content":"  \"phone\" : \"94351253\",","lastModifiedDate":"2023-03-22"},{"lineNumber":214,"author":{"gitId":"chuakid"},"content":"  \"email\" : \"alice@example.com\",","lastModifiedDate":"2023-03-22"},{"lineNumber":215,"author":{"gitId":"chuakid"},"content":"  \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"chuakid"},"content":"  \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"chuakid"},"content":"}, {","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"chuakid"},"content":"  \"name\" : \"Benson Meier\",","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"chuakid"},"content":"  \"phone\" : \"98765432\",","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"chuakid"},"content":"  \"email\" : \"johnd@example.com\",","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"chuakid"},"content":"  \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2023-03-22"},{"lineNumber":222,"author":{"gitId":"chuakid"},"content":"  \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"chuakid"},"content":"} ]","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"chuakid"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"chuakid"},"content":"The JSON is generated using the Jackson library, through the use of the JsonUtil utility class.","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"chuakid"},"content":"##### Importing","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"chuakid"},"content":"Using the exported JSON, one can then import it using `import THE_JSON`.","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"chuakid"},"content":"Before importing, a check is done to make sure there are no duplicate values. This is done before the actual importing ","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"chuakid"},"content":"to ensure we do not have \"half imports\". ","lastModifiedDate":"2023-03-22"},{"lineNumber":231,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"chuakid"},"content":"Consider a situation where we have `[Person2, Person3]` in the system. If we ","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"chuakid"},"content":"import `[Person1, Person2, Person3, Person4]` without considering duplicates first, Person1 will be imported ","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"chuakid"},"content":"followed by the import of Person2 throwing a DuplicatePersonError, resulting in the command throwing a failure ","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"chuakid"},"content":"message and Person4 not being imported but the system now has `[Person1, Person2, Person3]`. ","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"chuakid"},"content":"However, if the user wishes to \"force import\", a `f/` parameter is provided. This imports for each `Person` if the ","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"chuakid"},"content":"Person does not already exist, and ignores those that do. This allows the previous situation to complete with `","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"chuakid"},"content":"[Person1, Person2, Person3, Person4]` in the system.","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"chuakid"},"content":"The JSON is parsed using the Jackson library. If the Jackson library is unable to parse the json, an error message ","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"chuakid"},"content":"is thrown.","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"chuakid"},"content":"### Exporting and importing of Meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"chuakid"},"content":"#### Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"chuakid"},"content":"Exporting and importing for meetings is similar to that of contacts, with the main difference being that meetings ","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"chuakid"},"content":"has additional functionality of returning meetings between two dates. This is implemented through the use of a ","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"chuakid"},"content":"`isBetween` function implemented in the `Meeting` class. The program will first gather all the meetings in the ","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"chuakid"},"content":"corresponding indexes provided, then search for meetings between the start and end dates. If either date is empty, then ","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"chuakid"},"content":"only the other date is considered.","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":252,"author":{"gitId":"Beebeeoii"},"content":"### Autocompletion of Argument Prefixes","lastModifiedDate":"2023-03-23"},{"lineNumber":253,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":254,"author":{"gitId":"Beebeeoii"},"content":"Autocompletion of command inputs is facilitated by the individual command parsers (`XYZCommandParser`) which are","lastModifiedDate":"2023-03-23"},{"lineNumber":255,"author":{"gitId":"Beebeeoii"},"content":"implementing the `Parser` interface in the `Logic` component. Each `XYZCommandParser` implements how autocompletion","lastModifiedDate":"2023-03-23"},{"lineNumber":256,"author":{"gitId":"Beebeeoii"},"content":"should work for that particular command by overriding `Parser#getAutocompleteSuggestion`. This action is triggered when","lastModifiedDate":"2023-03-23"},{"lineNumber":257,"author":{"gitId":"Beebeeoii"},"content":"the user presses `TAB` when the command input starts with a valid command.","lastModifiedDate":"2023-03-23"},{"lineNumber":258,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":259,"author":{"gitId":"Beebeeoii"},"content":"The `CommandBox` UI component is actively listening for `TAB` keystrokes by having a `KeyPressedHandler` which will","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"Beebeeoii"},"content":"trigger `XYZCommandParser#getAutocompleteSuggestion`. A `AutocompleteResult` would then be returned to the `CommandBox`","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"Beebeeoii"},"content":"which contains the `Prefix` to be appended to the current command input, or used to replace the last `Prefix` in the","lastModifiedDate":"2023-03-23"},{"lineNumber":262,"author":{"gitId":"Beebeeoii"},"content":"current command input.","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"Beebeeoii"},"content":"#### Design Considerations","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"Beebeeoii"},"content":"**Alternative 1**: Autocomplete by appending the next relevant `Prefix` that is missing","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"Beebeeoii"},"content":"* This will be easier to implement as all we need is to have a list of `Prefix` that is relevant for the command and ","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"Beebeeoii"},"content":"cycle through and append those that are missing from the current command input.","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"Beebeeoii"},"content":"* Checking for missing `Prefix` from the command input can be achieved with the help of `ArgumentTokenizer`.","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"Beebeeoii"},"content":"* Downside: some commands such as `edit` does not need all the `Prefix` as user might just want to modify two ","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"Beebeeoii"},"content":"attributes. Simply cycling through and appending missing `Prefix` might require users to backspace some","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"Beebeeoii"},"content":"unnecessary `Prefix`.","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"Beebeeoii"},"content":"**Alternative 2 (current choice)**: Autocomplete by custom behaviour depending on the command","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"Beebeeoii"},"content":"* This would require each `XYZCommandParser` to implement their own behaviour on how autocompletion should","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"Beebeeoii"},"content":"behave for that particular command.","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"Beebeeoii"},"content":"* Benefit: There is more flexibility in customising how to best cater autocompletion for each individual","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"Beebeeoii"},"content":"command to better the user experience.","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"Beebeeoii"},"content":"### Traverse commands","lastModifiedDate":"2023-03-22"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"Beebeeoii"},"content":"### DateTime parsing","lastModifiedDate":"2023-03-22"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"Beebeeoii"},"content":"* Users who are on their computers most of their days","lastModifiedDate":"2023-03-22"},{"lineNumber":305,"author":{"gitId":"Beebeeoii"},"content":"* has a need to manage a significant number of contacts and meetings","lastModifiedDate":"2023-03-22"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"Beebeeoii"},"content":"**Value proposition**: manage contacts and meetings faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-03-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                             | I want to …​                                                                | So that I can…​                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"jeremykhoo-NUS"},"content":"| -------- | ---------------------------------------------------------------------------| -----------------------------------------------------------------------------------|----------------------------------------------------------------------- |","lastModifiedDate":"2023-03-05"},{"lineNumber":319,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                                                   | see usage instructions                                                             | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                                       | add a new person                                                                   |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                                       | delete a person                                                                    | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                                       | find a person by name                                                              | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"| `* *`    | user                                                                       | hide private contact details                                                       | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user with many persons in the contact book                                 | sort persons by name                                                               | locate a person easily                                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":325,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | user                                                                       | Find a person by tag                                                               | I can filter the contacts by tags                                      |","lastModifiedDate":"2023-03-05"},{"lineNumber":326,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | user                                                                       | Sort by tag priority                                                               | I can find the most important contacts                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":327,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | user                                                                       | Assign tag priority                                                                |                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":328,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | user                                                                       | Retrieve deleted contacts                                                          |                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":329,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | user                                                                       | Set a date for deletion of contacts                                                | Remove the contacts automatically                                      |","lastModifiedDate":"2023-03-05"},{"lineNumber":330,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | user                                                                       | Add a contact                                                                      | Store my contact in app                                                |","lastModifiedDate":"2023-03-05"},{"lineNumber":331,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | user                                                                       | Delete a contact                                                                   | Remove unwanted contacts                                               |","lastModifiedDate":"2023-03-05"},{"lineNumber":332,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | user                                                                       | Edit a contact                                                                     | Change details of existing contacts                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":333,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | user                                                                       | Assign tag to contact                                                              | Categorise my contacts                                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":334,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | user                                                                       | Use the help command                                                               | To see available commands                                              |","lastModifiedDate":"2023-03-05"},{"lineNumber":335,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | power user                                                                 | Assign shortcuts to different actions                                              | I can cut down on the time taken to type                               |","lastModifiedDate":"2023-03-05"},{"lineNumber":336,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User with many connections                                                 | Export my contacts                                                                 | I can share my contacts easily                                         |","lastModifiedDate":"2023-03-05"},{"lineNumber":337,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User with many connections                                                 | Copy the details of my contacts                                                    | I can share my contacts easily                                         |","lastModifiedDate":"2023-03-05"},{"lineNumber":338,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User with many existing contacts                                           | Import my contacts automatically                                                   | I don\\\u0027t have to spend too much time creating contacts one by one  |","lastModifiedDate":"2023-03-05"},{"lineNumber":339,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User with many meetups with people                                         | Sort meetings based on the date and time                                           | I can prioritize my time well                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":340,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | Busy user with many meetups                                                | Receive notifications about meetups with contacts                                  | I won\\\u0027t be late for meetups                                       |","lastModifiedDate":"2023-03-05"},{"lineNumber":341,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User with many meetups with people                                         | Create a meeting                                                                   | Schedule a meeting                                                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":342,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User with many meetups with people                                         | Edit a meeting                                                                     | Change meeting details                                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":343,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User with many meetups with people                                         | Delete a meeting                                                                   | Remove cancelled or completed meetings                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":344,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User with many meetups with people                                         | View all meetings                                                                  | See in a glance the meetings that I have                               |","lastModifiedDate":"2023-03-05"},{"lineNumber":345,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User with many meetups with people                                         | View meeting details                                                               | Understand what my meeting is about                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":346,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | Users with meetings                                                        | Add a reminder to meeting                                                          | So I do not forget the meeting                                         |","lastModifiedDate":"2023-03-05"},{"lineNumber":347,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | Users with meetings                                                        | Edit reminder of meeting                                                           | Change how frequent my reminders are                                   |","lastModifiedDate":"2023-03-05"},{"lineNumber":348,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | Users with meetings                                                        | Delete a reminder                                                                  | So I am not spammed with reminders                                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":349,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | Users with many meetings                                                   | Tag meeting                                                                        | Organize they types of meetings                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":350,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User who are very familiar with the keyboard                               | Add custom keybinds | So that I am faster at organizing contacts                   |                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":351,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User with many meetings                                                    | See how many days left to a meeting                                                | I don\\\u0027t forget to attend one                                      |","lastModifiedDate":"2023-03-05"},{"lineNumber":352,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User in a hurry                                                            | Undo previous action up to 3 previous actions                                      | I can be fast and a bit sloppy without worrying                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":353,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User who use the app for a long time                                       | Set a reminder to tag people | In future I can better organize people              |                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":354,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User who forget what is in contacts                                        | Ask if person/meeting still relevant | So that the contact remain relatively clean |                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":355,"author":{"gitId":"jeremykhoo-NUS"},"content":"|`*`       | User assign name to priority tag                                           | Customise the tags                                                                 | I can remember more easily who is ranked higher                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"jeremykhoo-NUS"},"content":"(For all use cases below, the **System** is the `QuickContacts` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-05"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":361,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-03-05"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":363,"author":{"gitId":"jeremykhoo-NUS"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":365,"author":{"gitId":"jeremykhoo-NUS"},"content":"1.  User requests to add a person","lastModifiedDate":"2023-03-05"},{"lineNumber":366,"author":{"gitId":"jeremykhoo-NUS"},"content":"2.  QuickContacts adds that person","lastModifiedDate":"2023-03-05"},{"lineNumber":367,"author":{"gitId":"jeremykhoo-NUS"},"content":"3.  QuickContacts shows new person in list","lastModifiedDate":"2023-03-05"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":369,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":371,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":373,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1a. String in a field illegal.","lastModifiedDate":"2023-03-05"},{"lineNumber":374,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * 1a1. Show error message","lastModifiedDate":"2023-03-05"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":376,"author":{"gitId":"jeremykhoo-NUS"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2023-03-05"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"jeremykhoo-NUS"},"content":"2.  QuickContacts shows a list of persons","lastModifiedDate":"2023-03-05"},{"lineNumber":384,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"jeremykhoo-NUS"},"content":"4.  QuickContacts deletes the person","lastModifiedDate":"2023-03-05"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * 3a1. QuickContacts shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Use case: Find a Person**","lastModifiedDate":"2023-03-05"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":403,"author":{"gitId":"jeremykhoo-NUS"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":405,"author":{"gitId":"jeremykhoo-NUS"},"content":"1.  User requests searches person by name","lastModifiedDate":"2023-03-05"},{"lineNumber":406,"author":{"gitId":"jeremykhoo-NUS"},"content":"2.  QuickContacts shows that person","lastModifiedDate":"2023-03-05"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":408,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":410,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":412,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1a. String in a field illegal.","lastModifiedDate":"2023-03-05"},{"lineNumber":413,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * 1a1. Show error message","lastModifiedDate":"2023-03-05"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":415,"author":{"gitId":"jeremykhoo-NUS"},"content":"  Use case continues at step 1.","lastModifiedDate":"2023-03-05"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":417,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Use case: Edit an existing person\u0027s details**","lastModifiedDate":"2023-03-05"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":419,"author":{"gitId":"jeremykhoo-NUS"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":421,"author":{"gitId":"jeremykhoo-NUS"},"content":"1.  User requests to edit a person","lastModifiedDate":"2023-03-05"},{"lineNumber":422,"author":{"gitId":"jeremykhoo-NUS"},"content":"2.  QuickContacts shows the person with the updated details","lastModifiedDate":"2023-03-05"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":424,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":426,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":428,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1a. String in a field illegal.","lastModifiedDate":"2023-03-05"},{"lineNumber":429,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * 1a1. Show error message","lastModifiedDate":"2023-03-05"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":431,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1b. Person cannot be found.","lastModifiedDate":"2023-03-05"},{"lineNumber":432,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * 1b1. Show error message","lastModifiedDate":"2023-03-05"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":434,"author":{"gitId":"jeremykhoo-NUS"},"content":"  Use case continues at step 1.","lastModifiedDate":"2023-03-05"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":436,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Use case: User want to list all**","lastModifiedDate":"2023-03-05"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":438,"author":{"gitId":"jeremykhoo-NUS"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":440,"author":{"gitId":"jeremykhoo-NUS"},"content":"1.  User request list","lastModifiedDate":"2023-03-05"},{"lineNumber":441,"author":{"gitId":"jeremykhoo-NUS"},"content":"2.  QuickContacts shows all the person and meetings","lastModifiedDate":"2023-03-05"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":443,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":445,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":447,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1a. list is empty","lastModifiedDate":"2023-03-05"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":449,"author":{"gitId":"jeremykhoo-NUS"},"content":"  Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":452,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Use case: User wants to clear everything**","lastModifiedDate":"2023-03-05"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":454,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":456,"author":{"gitId":"jeremykhoo-NUS"},"content":"1.  User requests to clear","lastModifiedDate":"2023-03-05"},{"lineNumber":457,"author":{"gitId":"jeremykhoo-NUS"},"content":"2.  QuickContacts deletes everyone and all the meetings","lastModifiedDate":"2023-03-05"},{"lineNumber":458,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":459,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":460,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":461,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Use case: User wants to exit**","lastModifiedDate":"2023-03-05"},{"lineNumber":462,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":463,"author":{"gitId":"jeremykhoo-NUS"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":464,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":465,"author":{"gitId":"jeremykhoo-NUS"},"content":"1.  User requests to exit","lastModifiedDate":"2023-03-05"},{"lineNumber":466,"author":{"gitId":"jeremykhoo-NUS"},"content":"2.  QuickContacts closes","lastModifiedDate":"2023-03-05"},{"lineNumber":467,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":468,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":469,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":470,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Use case: Add a meeting**","lastModifiedDate":"2023-03-05"},{"lineNumber":471,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":472,"author":{"gitId":"jeremykhoo-NUS"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":473,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":474,"author":{"gitId":"jeremykhoo-NUS"},"content":"1.  User requests to add a meeting","lastModifiedDate":"2023-03-05"},{"lineNumber":475,"author":{"gitId":"jeremykhoo-NUS"},"content":"2.  QuickContacts adds that meeting","lastModifiedDate":"2023-03-05"},{"lineNumber":476,"author":{"gitId":"jeremykhoo-NUS"},"content":"3.  QuickContacts shows new meeting in list","lastModifiedDate":"2023-03-05"},{"lineNumber":477,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":478,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":479,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":480,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":481,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":482,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1a. String in a field illegal.","lastModifiedDate":"2023-03-05"},{"lineNumber":483,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * 1a1. Show error message","lastModifiedDate":"2023-03-05"},{"lineNumber":484,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":485,"author":{"gitId":"jeremykhoo-NUS"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2023-03-05"},{"lineNumber":486,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":487,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Use case: Delete a meeting**","lastModifiedDate":"2023-03-05"},{"lineNumber":488,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":489,"author":{"gitId":"jeremykhoo-NUS"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":490,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":491,"author":{"gitId":"jeremykhoo-NUS"},"content":"1.  User requests to list meetings","lastModifiedDate":"2023-03-05"},{"lineNumber":492,"author":{"gitId":"jeremykhoo-NUS"},"content":"2.  QuickContacts shows a list of meetings","lastModifiedDate":"2023-03-05"},{"lineNumber":493,"author":{"gitId":"jeremykhoo-NUS"},"content":"3.  User requests to delete a specific meeting in the list","lastModifiedDate":"2023-03-05"},{"lineNumber":494,"author":{"gitId":"jeremykhoo-NUS"},"content":"4.  QuickContacts deletes the meeting","lastModifiedDate":"2023-03-05"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":498,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":500,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":502,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":504,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":506,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * 3a1. QuickContacts shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":510,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Use case: Edit a meeting**","lastModifiedDate":"2023-03-05"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":512,"author":{"gitId":"jeremykhoo-NUS"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":514,"author":{"gitId":"jeremykhoo-NUS"},"content":"1.  User requests to edit a meeting","lastModifiedDate":"2023-03-05"},{"lineNumber":515,"author":{"gitId":"jeremykhoo-NUS"},"content":"2.  QuickContacts shows the meeting with the updated details","lastModifiedDate":"2023-03-05"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":517,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":518,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":519,"author":{"gitId":"jeremykhoo-NUS"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":520,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":521,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1a. String in a field illegal.","lastModifiedDate":"2023-03-05"},{"lineNumber":522,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * 1a1. Show error message","lastModifiedDate":"2023-03-05"},{"lineNumber":523,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":524,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1b. Meeting cannot be found.","lastModifiedDate":"2023-03-05"},{"lineNumber":525,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * 1b1. Show error message","lastModifiedDate":"2023-03-05"},{"lineNumber":526,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":527,"author":{"gitId":"jeremykhoo-NUS"},"content":"  Use case continues at step 1.","lastModifiedDate":"2023-03-05"},{"lineNumber":528,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":529,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"jeremykhoo-NUS"},"content":"4. Can support 1000 meetings with same amount of lag as 10 meeting","lastModifiedDate":"2023-03-05"},{"lineNumber":535,"author":{"gitId":"jeremykhoo-NUS"},"content":"5. Commands should be intuitive to not technical people","lastModifiedDate":"2023-03-05"},{"lineNumber":536,"author":{"gitId":"jeremykhoo-NUS"},"content":"6. Should be clear that meeting and people are 2 seperate things","lastModifiedDate":"2023-03-05"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Meetings**: Important dates with a duration and a place","lastModifiedDate":"2023-03-05"},{"lineNumber":543,"author":{"gitId":"Beebeeoii"},"content":"* **Find**: Searches by name field, case-insensitive, match all matching words individually","lastModifiedDate":"2023-03-20"},{"lineNumber":544,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **GUI**: Graphic User Interface","lastModifiedDate":"2023-03-05"},{"lineNumber":545,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **MSS**: Main Success Scenario","lastModifiedDate":"2023-03-05"},{"lineNumber":546,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **OS**: Operating System","lastModifiedDate":"2023-03-05"},{"lineNumber":547,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Java**: Programming Language by SUN Oracle","lastModifiedDate":"2023-03-05"},{"lineNumber":548,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2023-03-05"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":550,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"Beebeeoii"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-03-20"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"Beebeeoii"},"content":"2. Saving window preferences","lastModifiedDate":"2023-03-20"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"Beebeeoii"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":574,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"Beebeeoii"},"content":"### Deleting a contact","lastModifiedDate":"2023-03-20"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"Beebeeoii"},"content":"1. Deleting a contact while all contacts are being shown","lastModifiedDate":"2023-03-20"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"Beebeeoii"},"content":"   1. Prerequisites: List all contacts using the `list` command. Multiple contacts in the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"Beebeeoii"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"Beebeeoii"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":586,"author":{"gitId":"Beebeeoii"},"content":"      Expected: No contact is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-20"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"Beebeeoii"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"Beebeeoii"},"content":"### Creating a meeting","lastModifiedDate":"2023-03-20"},{"lineNumber":592,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":593,"author":{"gitId":"Beebeeoii"},"content":"1. Creating a meeting with a contact:","lastModifiedDate":"2023-03-20"},{"lineNumber":594,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":595,"author":{"gitId":"Beebeeoii"},"content":"    1. Prerequisites: Contact `Alex Yeo` exists in QuickContacts.","lastModifiedDate":"2023-03-20"},{"lineNumber":596,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":597,"author":{"gitId":"Beebeeoii"},"content":"    2. Test case: `addm m/Lunch with Alex dt/2003 15:00 p/Alex Yeo`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":598,"author":{"gitId":"Beebeeoii"},"content":"       Expected: New meeting with `Alex Yeo` on 20 March (of the current year) at 3PM is created, and it is displayed in the meetings list.","lastModifiedDate":"2023-03-20"},{"lineNumber":599,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":600,"author":{"gitId":"Beebeeoii"},"content":"    3. Test case: `addm m/Lunch with Alex dt/2003 25:00 p/Alex Yeo l/The Deck des/Weekly catch-up`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":601,"author":{"gitId":"Beebeeoii"},"content":"       Expected: Meeting is not created since `25:00` is an invalid time. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-20"},{"lineNumber":602,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":603,"author":{"gitId":"Beebeeoii"},"content":"2. Creating a meeting without a contact:","lastModifiedDate":"2023-03-20"},{"lineNumber":604,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":605,"author":{"gitId":"Beebeeoii"},"content":"    1. Test case: `addm m/Dinner at home dt/2003222`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":606,"author":{"gitId":"Beebeeoii"},"content":"       Expected: New meeting is created for `200322` (20 March 2022).","lastModifiedDate":"2023-03-20"},{"lineNumber":607,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":608,"author":{"gitId":"Beebeeoii"},"content":"    2. Test case: `addm m/Dinner at home`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":609,"author":{"gitId":"Beebeeoii"},"content":"       Expected: Meeting is not created as a date(and time) is required. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-20"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"Beebeeoii"},"content":"1. To simulate data file is not found:","lastModifiedDate":"2023-03-20"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"Beebeeoii"},"content":"   1. Prerequisite: `QuickContacts` is currently not running and the data files have been generated.","lastModifiedDate":"2023-03-20"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"Beebeeoii"},"content":"   2. Rename the file `quickcontacts.json` in the same directory to `quickcontacts.json.backup`.","lastModifiedDate":"2023-03-20"},{"lineNumber":618,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":619,"author":{"gitId":"Beebeeoii"},"content":"   3. Launch `QuickContacts`.","lastModifiedDate":"2023-03-20"},{"lineNumber":620,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":621,"author":{"gitId":"Beebeeoii"},"content":"   Expected: `QuickContacts` launches normally and re-generates the sample default data.","lastModifiedDate":"2023-03-20"},{"lineNumber":622,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":623,"author":{"gitId":"Beebeeoii"},"content":"2. To simulate data file is corrupted:","lastModifiedDate":"2023-03-20"},{"lineNumber":624,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":625,"author":{"gitId":"Beebeeoii"},"content":"   1. Prerequisite: `QuickContacts` is currently not running and the data files have been generated.","lastModifiedDate":"2023-03-20"},{"lineNumber":626,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":627,"author":{"gitId":"Beebeeoii"},"content":"   2. Open `quickcontacts.json` with a text editor, add a few random characters and save it.","lastModifiedDate":"2023-03-20"},{"lineNumber":628,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":629,"author":{"gitId":"Beebeeoii"},"content":"   3. Launch `QuickContacts`.","lastModifiedDate":"2023-03-20"},{"lineNumber":630,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":631,"author":{"gitId":"Beebeeoii"},"content":"   Expected: A warning message will be displayed and `QuickContacts` will start from an empty data file.","lastModifiedDate":"2023-03-20"},{"lineNumber":632,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":633,"author":{"gitId":"Beebeeoii"},"content":"3. To simulate restoring data from a backup data file:","lastModifiedDate":"2023-03-20"},{"lineNumber":634,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":635,"author":{"gitId":"Beebeeoii"},"content":"   1. Prerequisite: `QuickContacts` is currently not running and the data files have been generated and you have the backup file ready. Assume that the backup file is named `quickcontacts.json.backup`.","lastModifiedDate":"2023-03-20"},{"lineNumber":636,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":637,"author":{"gitId":"Beebeeoii"},"content":"   2. Delete `quickcontacts.json` from the directory that contains `quickcontacts.jar`.","lastModifiedDate":"2023-03-20"},{"lineNumber":638,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":639,"author":{"gitId":"Beebeeoii"},"content":"   3. Move `quickcontacts.json.backup` into the same directory as `quickcontacts.jar`.","lastModifiedDate":"2023-03-20"},{"lineNumber":640,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":641,"author":{"gitId":"Beebeeoii"},"content":"   4. Rename `quickcontacts.json.backup` to `quickcontacts.json`.","lastModifiedDate":"2023-03-20"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"Beebeeoii"},"content":"   5. Launch `QuickContacts`.","lastModifiedDate":"2023-03-20"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"Beebeeoii"},"content":"   Expected: `QuickContacts` will launch normally with the data restored from the backup.","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Beebeeoii":122,"KS2499":37,"chuakid":48,"jeremykhoo-NUS":141,"-":297}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"Quick Contacts (QC) is a **cross-platform desktop application** that enables you to easily **manage your contacts and meetings all in one place**! It is designed for users who have a large number of contacts, with many of which are only needed temporarily.","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"Equipped with both a Graphical User Interface (GUI) and Command Line Interface (CLI), users are empowered with the ability to perform tasks using QC in a second via the CLI while still enjoying the beauty of the GUI.","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"## Table of Contents","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"- [Features](#features)","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    - [`help`](#viewing-help--help)","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    - [`add`](#adding-a-person--add)","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    - [`list`](#listing-all-persons--list)","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    - [`edit`](#editing-a-person--edit)","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    - [`find`](#locating-persons-by-name--find)","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    - [`delete`](#deleting-a-person--delete)","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    - [`clear`](#clearing-all-entries--clear)","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    - [`exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    - [`addm`](#adding-a-meeting--addm)","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    - [`findm`](#finding-meetings-by-name--findm)","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    - [`export`](#exporting-of-contact--export)","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    - [`import`](#importing-of-contacts--import)","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    - [`exportm`](#export-meetings--exportm)","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    - [`importm`](#import-meetings--importm)","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    - [Saving of data](#saving-the-data)","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    - [Editing of data](#editing-the-data-file)","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    - [Archiving of data](#archiving-data-files-coming-in-v20)","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"2. Download the latest `quickcontacts.jar` from [here](https://github.com/AY2223S2-CS2103T-T11-2/tp/releases).","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your `QuickContacts`.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar quickcontacts.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"* Commands are **_italicised and bolded_** for ease of identification.","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"KS2499"},"content":"### Adding a Meeting: `addm`","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"KS2499"},"content":"Adds a meeting to the address book.","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"KS2499"},"content":"Format: `addm m/TITLE [p/PERSON]... dt/DATE_TIME l/LOCATION des/DESCRIPTION`","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"KS2499"},"content":"Examples:","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"KS2499"},"content":"* `addm m/CS2103T Tutorial p/John Doe p/Jane Doe dt/2022-02-22 10:00 l/COM1-B103 des/CS2103T Tutorial`","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"KS2499"},"content":"* `addm m/CS2103T Tutorial p/John Doe p/Mary Jane dt/2022-02-22 22:22 l/COM1-B103 des/CS2101 Tutorial`","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"KS2499"},"content":"### Finding Meetings by name: `findm`","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"KS2499"},"content":"Find meetings whose names contain any of the given keywords.","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"KS2499"},"content":"Format: `findm KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"KS2499"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"KS2499"},"content":"* Space is delimiter, so if you search `John Doe` it will list all people with either `John` or `Doe` in their name.","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"KS2499"},"content":"* Only the name of attendees in meeting are searched","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"KS2499"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"KS2499"},"content":"* Meetings matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"KS2499"},"content":"  e.g. `John Doe` will return Meetings that contain either `John Doe`, or `Doe John`","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"KS2499"},"content":"Examples:","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"KS2499"},"content":"* `findm John` returns `Meeting` that contains `attendees` whose Name contains `John`","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"KS2499"},"content":"* `findm John Mary` returns `Meeting` that contains `attendees` whose Name contains `John` or `Mary`","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":214,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts data are saved as a JSON file `[JAR file location]/data/quickcontacts.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":217,"author":{"gitId":"Beebeeoii"},"content":"If your changes to the data file makes its format invalid, QuickContacts will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"chuakid"},"content":"### Exporting of contact: `export`","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"chuakid"},"content":"* Exports the persons at the specified `INDEX`es.","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"chuakid"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"chuakid"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":229,"author":{"gitId":"chuakid"},"content":"Format: `export p/ INDEX1 p/ INDEX2`","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":231,"author":{"gitId":"chuakid"},"content":"### Importing of contacts: `import`","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"chuakid"},"content":"* Imports the persons in the provided JSON.","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"chuakid"},"content":"* The JSON **must contain a valid array of persons** ","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"chuakid"},"content":"Example:","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"chuakid"},"content":"```json","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"chuakid"},"content":"[","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"chuakid"},"content":"  {","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"chuakid"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"chuakid"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"chuakid"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"chuakid"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"chuakid"},"content":"    \"tagged\": [","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"chuakid"},"content":"      \"friends\"","lastModifiedDate":"2023-03-22"},{"lineNumber":245,"author":{"gitId":"chuakid"},"content":"    ]","lastModifiedDate":"2023-03-22"},{"lineNumber":246,"author":{"gitId":"chuakid"},"content":"  },","lastModifiedDate":"2023-03-22"},{"lineNumber":247,"author":{"gitId":"chuakid"},"content":"  {","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"chuakid"},"content":"    \"name\": \"Benson Meier\",","lastModifiedDate":"2023-03-22"},{"lineNumber":249,"author":{"gitId":"chuakid"},"content":"    \"phone\": \"98765432\",","lastModifiedDate":"2023-03-22"},{"lineNumber":250,"author":{"gitId":"chuakid"},"content":"    \"email\": \"johnd@example.com\",","lastModifiedDate":"2023-03-22"},{"lineNumber":251,"author":{"gitId":"chuakid"},"content":"    \"address\": \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2023-03-22"},{"lineNumber":252,"author":{"gitId":"chuakid"},"content":"    \"tagged\": [","lastModifiedDate":"2023-03-22"},{"lineNumber":253,"author":{"gitId":"chuakid"},"content":"      \"owesMoney\",","lastModifiedDate":"2023-03-22"},{"lineNumber":254,"author":{"gitId":"chuakid"},"content":"      \"friends\"","lastModifiedDate":"2023-03-22"},{"lineNumber":255,"author":{"gitId":"chuakid"},"content":"    ]","lastModifiedDate":"2023-03-22"},{"lineNumber":256,"author":{"gitId":"chuakid"},"content":"  }","lastModifiedDate":"2023-03-22"},{"lineNumber":257,"author":{"gitId":"chuakid"},"content":"]","lastModifiedDate":"2023-03-22"},{"lineNumber":258,"author":{"gitId":"chuakid"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":259,"author":{"gitId":"chuakid"},"content":"Optional Parameter `f/ true` that forces imports regardless of duplicate values.","lastModifiedDate":"2023-03-22"},{"lineNumber":260,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":261,"author":{"gitId":"chuakid"},"content":"Format: `import JSON f/ true`","lastModifiedDate":"2023-03-22"},{"lineNumber":262,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":263,"author":{"gitId":"chuakid"},"content":"### Export meetings: `exportm`","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"chuakid"},"content":"* Exports the meetings at the specified `INDEX`es, between `start` and `end` dates.","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"chuakid"},"content":"* The indexes refer to the index numbers shown in the displayed meetings list.","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"chuakid"},"content":"* The indexes **must be positive integers** 1, 2, 3","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"chuakid"},"content":"* The start and end dates must be valid dates in the DD/MM/YY format","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"chuakid"},"content":"Format: `exportm p/ INDEX1 p/ INDEX2 start/ START_DATE end/ END_DATE`","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"chuakid"},"content":"### Import meetings: `importm`","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"chuakid"},"content":"* Imports the meetings in the provided JSON.","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"chuakid"},"content":"* The JSON **must contain a valid array of meetings**","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"chuakid"},"content":"Example:","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"chuakid"},"content":"```json","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"chuakid"},"content":"[","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"chuakid"},"content":"  {","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"chuakid"},"content":"    \"title\": \"Dinner with Alice\",","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"chuakid"},"content":"    \"dateTime\": \"01/02/2023 19:00\",","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"chuakid"},"content":"    \"attendees\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"chuakid"},"content":"      {","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"chuakid"},"content":"        \"name\": \"Alice Pauline\",","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"chuakid"},"content":"        \"phone\": \"94351253\",","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"chuakid"},"content":"        \"email\": \"alice@example.com\",","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"chuakid"},"content":"        \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"chuakid"},"content":"        \"tagged\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"chuakid"},"content":"          \"friends\"","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"chuakid"},"content":"        ]","lastModifiedDate":"2023-03-23"},{"lineNumber":290,"author":{"gitId":"chuakid"},"content":"      }","lastModifiedDate":"2023-03-23"},{"lineNumber":291,"author":{"gitId":"chuakid"},"content":"    ],","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"chuakid"},"content":"    \"location\": \"NUS\",","lastModifiedDate":"2023-03-23"},{"lineNumber":293,"author":{"gitId":"chuakid"},"content":"    \"description\": \"Weekly catchup\"","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"chuakid"},"content":"  },","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"chuakid"},"content":"  {","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"chuakid"},"content":"    \"title\": \"Study session with Benson and Carl\",","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"chuakid"},"content":"    \"dateTime\": \"02/03/2023 15:00\",","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"chuakid"},"content":"    \"attendees\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"chuakid"},"content":"      {","lastModifiedDate":"2023-03-23"},{"lineNumber":300,"author":{"gitId":"chuakid"},"content":"        \"name\": \"Benson Meier\",","lastModifiedDate":"2023-03-23"},{"lineNumber":301,"author":{"gitId":"chuakid"},"content":"        \"phone\": \"98765432\",","lastModifiedDate":"2023-03-23"},{"lineNumber":302,"author":{"gitId":"chuakid"},"content":"        \"email\": \"johnd@example.com\",","lastModifiedDate":"2023-03-23"},{"lineNumber":303,"author":{"gitId":"chuakid"},"content":"        \"address\": \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2023-03-23"},{"lineNumber":304,"author":{"gitId":"chuakid"},"content":"        \"tagged\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":305,"author":{"gitId":"chuakid"},"content":"          \"owesMoney\",","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"chuakid"},"content":"          \"friends\"","lastModifiedDate":"2023-03-23"},{"lineNumber":307,"author":{"gitId":"chuakid"},"content":"        ]","lastModifiedDate":"2023-03-23"},{"lineNumber":308,"author":{"gitId":"chuakid"},"content":"      },","lastModifiedDate":"2023-03-23"},{"lineNumber":309,"author":{"gitId":"chuakid"},"content":"      {","lastModifiedDate":"2023-03-23"},{"lineNumber":310,"author":{"gitId":"chuakid"},"content":"        \"name\": \"Carl Kurz\",","lastModifiedDate":"2023-03-23"},{"lineNumber":311,"author":{"gitId":"chuakid"},"content":"        \"phone\": \"95352563\",","lastModifiedDate":"2023-03-23"},{"lineNumber":312,"author":{"gitId":"chuakid"},"content":"        \"email\": \"heinz@example.com\",","lastModifiedDate":"2023-03-23"},{"lineNumber":313,"author":{"gitId":"chuakid"},"content":"        \"address\": \"wall street\",","lastModifiedDate":"2023-03-23"},{"lineNumber":314,"author":{"gitId":"chuakid"},"content":"        \"tagged\": []","lastModifiedDate":"2023-03-23"},{"lineNumber":315,"author":{"gitId":"chuakid"},"content":"      }","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"chuakid"},"content":"    ],","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"chuakid"},"content":"    \"location\": \"Central Library\",","lastModifiedDate":"2023-03-23"},{"lineNumber":318,"author":{"gitId":"chuakid"},"content":"    \"description\": \"Study for finals\"","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"chuakid"},"content":"  },","lastModifiedDate":"2023-03-23"},{"lineNumber":320,"author":{"gitId":"chuakid"},"content":"  {","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"chuakid"},"content":"    \"title\": \"Zoom meeting for agenda planning\",","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"chuakid"},"content":"    \"dateTime\": \"13/03/2023 12:45\",","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"chuakid"},"content":"    \"attendees\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":324,"author":{"gitId":"chuakid"},"content":"      {","lastModifiedDate":"2023-03-23"},{"lineNumber":325,"author":{"gitId":"chuakid"},"content":"        \"name\": \"Alice Pauline\",","lastModifiedDate":"2023-03-23"},{"lineNumber":326,"author":{"gitId":"chuakid"},"content":"        \"phone\": \"94351253\",","lastModifiedDate":"2023-03-23"},{"lineNumber":327,"author":{"gitId":"chuakid"},"content":"        \"email\": \"alice@example.com\",","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"chuakid"},"content":"        \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"chuakid"},"content":"        \"tagged\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"chuakid"},"content":"          \"friends\"","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"chuakid"},"content":"        ]","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"chuakid"},"content":"      }","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"chuakid"},"content":"    ],","lastModifiedDate":"2023-03-23"},{"lineNumber":334,"author":{"gitId":"chuakid"},"content":"    \"location\": \"https://us02web.zoom.us/j/99999999999?pwd\u003dABCdEfGHiJkYkRuYW5WTLmNopQrSt12\",","lastModifiedDate":"2023-03-23"},{"lineNumber":335,"author":{"gitId":"chuakid"},"content":"    \"description\": \"Plan for project work\"","lastModifiedDate":"2023-03-23"},{"lineNumber":336,"author":{"gitId":"chuakid"},"content":"  }","lastModifiedDate":"2023-03-23"},{"lineNumber":337,"author":{"gitId":"chuakid"},"content":"]","lastModifiedDate":"2023-03-23"},{"lineNumber":338,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":339,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":340,"author":{"gitId":"chuakid"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":341,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":342,"author":{"gitId":"chuakid"},"content":"Optional Parameter `f/ true` that forces imports regardless of duplicate values.","lastModifiedDate":"2023-03-23"},{"lineNumber":343,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":344,"author":{"gitId":"chuakid"},"content":"Format: `import JSON f/ true`","lastModifiedDate":"2023-03-23"},{"lineNumber":345,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":346,"author":{"gitId":"KS2499"},"content":"### Create meetings `[Coming Soon]`","lastModifiedDate":"2023-03-02"},{"lineNumber":347,"author":{"gitId":"KS2499"},"content":"_Details coming soon ..._","lastModifiedDate":"2023-03-02"},{"lineNumber":348,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":349,"author":{"gitId":"KS2499"},"content":"### Delete meetings `[Coming Soon]`","lastModifiedDate":"2023-03-02"},{"lineNumber":350,"author":{"gitId":"KS2499"},"content":"_Details coming soon ..._","lastModifiedDate":"2023-03-02"},{"lineNumber":351,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":352,"author":{"gitId":"KS2499"},"content":"### Edit meetings `[Coming Soon]`","lastModifiedDate":"2023-03-02"},{"lineNumber":353,"author":{"gitId":"KS2499"},"content":"_Details coming soon ..._","lastModifiedDate":"2023-03-02"},{"lineNumber":354,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"Beebeeoii"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous QuickContacts home folder.","lastModifiedDate":"2023-02-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"KS2499"},"content":"| Action     | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":367,"author":{"gitId":"KS2499"},"content":"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-02"},{"lineNumber":368,"author":{"gitId":"KS2499"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-03-02"},{"lineNumber":369,"author":{"gitId":"KS2499"},"content":"| **Clear**  | `clear`                                                                                                                                                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":370,"author":{"gitId":"KS2499"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                   |","lastModifiedDate":"2023-03-02"},{"lineNumber":371,"author":{"gitId":"KS2499"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2023-03-02"},{"lineNumber":372,"author":{"gitId":"KS2499"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                            |","lastModifiedDate":"2023-03-02"},{"lineNumber":373,"author":{"gitId":"KS2499"},"content":"| **List**   | `list`                                                                                                                                                                |","lastModifiedDate":"2023-03-02"},{"lineNumber":374,"author":{"gitId":"KS2499"},"content":"| **Help**   | `help`                                                                                                                                                                |","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Beebeeoii":32,"KS2499":43,"chuakid":126,"jeremykhoo-NUS":3,"-":170}},{"path":"docs/diagrams/MeetingModelDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"!include style.puml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"Package MeetingModel \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"Class Meeting","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"Class Title","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"Class DateTime","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"Class Location","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"Class Description","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"Meeting *--\u003e Title","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"Meeting *--\u003e DateTime","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"Meeting *--\u003e \"~* attendees\\n\" Person","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"Meeting *--\u003e Location","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"Meeting *--\u003e Description","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Beebeeoii":20}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"Class UniqueMeetingList","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"Class Meeting","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"AddressBook *--\u003e \"1\" UniqueMeetingList","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"UniquePersonList --\u003e \"~*\" Person","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"UniqueMeetingList --\u003e \"~*\" Meeting","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"ModelManager --\u003e \"*\" Meeting","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Beebeeoii":6,"-":35}},{"path":"docs/diagrams/PersonModelDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"!include style.puml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"Package PersonModel \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"Class Person","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"Class Address","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"Class Email","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"Class Name","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"Class Phone","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"Class Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"Person *--\u003e Name","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"Person *--\u003e Phone","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"Person *--\u003e Email","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"Person *--\u003e Address","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Beebeeoii":21}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"Class MeetingListPanel","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"Class MeetingCard","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"MainWindow *-down-\u003e \"1\" MeetingListPanel","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"MeetingListPanel -down-\u003e \"*\" MeetingCard","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"MeetingListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"MeetingCard ..\u003e Model","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"MeetingListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Beebeeoii":7,"-":60}},{"path":"docs/team/beebeeoii.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"title: Lee Jia Wei\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"### Project: QuickContacts","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"To Be Added Soon","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbeebeeoii\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zFR\u003dfalse\u0026zA\u003dBeebeeoii\u0026zR\u003dAY2223S2-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026zACS\u003d39\u0026zS\u003d2023-02-17\u0026zFS\u003dbeebeeoii\u0026zU\u003d2023-02-28\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos)","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"* **Project management**:","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"  * Set up issues for `v1.1`","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"  * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    * Initialised user guide\u0027s base skeleton and formatting","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    * To Be Added Soon","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"* **Community**:","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"  To Be Added Soon","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"* **Tools**:","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"  To Be Added Soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Beebeeoii":26}},{"path":"docs/team/chuakid.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"title: Kelvin Chua\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"### Project: QuickContacts","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"## Code contributed:","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"[RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dchuakid\u0026tabRepo\u003dAY2223S2-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"* Export and Import of contacts","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"* Export and Import of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"* Added UI for meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"## Project management","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"* Managed the repository for the project","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"* Set up issues for `v1.1`, `v1.2`, `v1.3`","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"* Set up codecov for the repository","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"## Documentation","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"### User Guide:","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"* `import`","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"* `export`","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"* `importm`","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"* `exportm`","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"### Developer Guide:","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"* `import`","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"* `export`","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"* `importm`","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"* `exportm`","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"## Community","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"### Reviewed PRs","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"* [#84](https://github.com/AY2223S2-CS2103T-T11-2/tp/pull/84)","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"* [#47](https://github.com/AY2223S2-CS2103T-T11-2/tp/pull/67)","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"* [#45](https://github.com/AY2223S2-CS2103T-T11-2/tp/pull/45)","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"chuakid":45}},{"path":"docs/team/jeremykhoo-nus.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeremykhoo-NUS"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"jeremykhoo-NUS"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"jeremykhoo-NUS"},"content":"title: JeremyKhoo\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jeremykhoo-NUS"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jeremykhoo-NUS"},"content":"### Project: QuickContacts","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jeremykhoo-NUS"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djeremykhoo\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * Implemented Edit command scaffolding","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * Reviewed Code for Meeting Scaffolding and View meeting features","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"jeremykhoo-NUS"},"content":"      * Added preliminary information to User guide","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"jeremykhoo-NUS"},"content":"      * Added preliminary information to Developer guide","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jeremykhoo-NUS"},"content":"    To Be Added Soon","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jeremykhoo-NUS"},"content":"The following are the tools I used to contribut to the project","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jeremykhoo-NUS"},"content":"  * Git","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jeremykhoo-NUS"},"content":"  * Vim","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jeremykhoo-NUS"},"content":"  * JDB","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jeremykhoo-NUS"},"content":"  * Gradle","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jeremykhoo-NUS":30}},{"path":"docs/team/ks2499.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"title: Kannusami Saraan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"### Project: QuickContacts","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"To Be Added Soon","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dks2499\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zFR\u003dfalse\u0026zA\u003dBeebeeoii\u0026zR\u003dAY2223S2-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026zACS\u003d39\u0026zS\u003d2023-02-17\u0026zFS\u003dbeebeeoii\u0026zU\u003d2023-02-28\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos)","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    * Helped with creating issues and milestones for `v1.1`","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"        * Updated User Guide","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"        * To Be Added Soon","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    * README:","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"        * Update Contents to match own project","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"  To Be Added Soon","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"  To Be Added Soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"KS2499":28}},{"path":"docs/team/thedesalizes.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thedesalizes"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"thedesalizes"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"thedesalizes"},"content":"title: Ethan Tan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"thedesalizes"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"thedesalizes"},"content":"### Project: QuickContacts","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"thedesalizes"},"content":"To Be Added Soon","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"thedesalizes"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"thedesalizes"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"thedesalizes"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"thedesalizes"},"content":"    * To be Added Soon","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"thedesalizes"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"thedesalizes"},"content":"    * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"thedesalizes"},"content":"      * To Be Added Soon","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"thedesalizes"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"thedesalizes"},"content":"      * To Be Added Soon","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"thedesalizes"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"thedesalizes"},"content":"    To Be Added Soon","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"thedesalizes"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"thedesalizes"},"content":"  * To be Added Soon","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"thedesalizes":26}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.commons.core.Cron;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.jobs.CheckMeetingHasPassed;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    protected Cron cron;","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        cron \u003d initCron();","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"    private Cron initCron() {","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        Cron cron \u003d Cron.getInstance();","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        logger.info(\"Initialised CRON engine\");","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        cron.addTask(new CheckMeetingHasPassed(model), 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        return cron;","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"            cron.stop();","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"Beebeeoii"},"content":"            logger.info(\"CRON engine stopped\");","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":15,"-":183}},{"path":"src/main/java/seedu/address/commons/core/Cron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.util.concurrent.ThreadPoolExecutor;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * Singleton CRON engine used for jobs.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public class Cron {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    private static Cron engine;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    private static ScheduledExecutorService executorService;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    private static final int POOL_SIZE \u003d 2;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     * Prevent multiple instantiation of CRON engines in the app.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private Cron() {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"        if (executorService \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"            executorService \u003d Executors.newScheduledThreadPool(POOL_SIZE);","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a job to the CRON to be executed per time interval.","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     * @param task Job to be executed by CRON engine.","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * @param seconds Time interval in seconds between every execution.","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public void addTask(TimerTask task, long seconds) {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        addTask(task, seconds, 0);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a job to the CRON to be executed per time interval.","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     * @param task Job to be executed by CRON engine.","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     * @param seconds Time interval in seconds between every execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"     * @param initialDelay Number of seconds before executing the job.","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    public void addTask(TimerTask task, long seconds, long initialDelay) {","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        executorService.scheduleAtFixedRate(task, initialDelay, seconds, TimeUnit.SECONDS);","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     * Gets an instance of {@code Cron}.","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     * @return The {@code Cron} instance.","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    public static Cron getInstance() {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        if (engine \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"            engine \u003d new Cron();","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        return engine;","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"     * Get number of tasks blocked in the CRON queue awaiting to be executed.","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"     * @return Size of the blocked queue.","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    public int size() {","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        return ((ThreadPoolExecutor) executorService).getQueue().size();","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the state of the CRON engine.","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"     * @return True if CRON engine is running, false otherwise.","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    public boolean isRunning() {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        if (executorService \u003d\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        return !executorService.isShutdown();","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"     * Stops and kills the CRON engine.","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public void stop() {","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        executorService.shutdown();","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        engine \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        executorService \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Beebeeoii":90}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_MEETINGS_LISTED_OVERVIEW \u003d \"Listed all meetings with attendees: [%s]\";","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_MEETINGS_ALL_LISTED_OVERVIEW \u003d \"Listed all meetings!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KS2499":3,"jeremykhoo-NUS":1,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     * Suggests a {@code Prefix} to be inputted for the current command","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * input.","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     * @return The {@code AutocompleteResult} based on the command input.","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    AutocompleteResult autocomplete(String commandText);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"     * @return an unmodifiable view of the filtered list of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Beebeeoii":9,"KS2499":6,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult autocomplete(String commandText) {","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        return addressBookParser.getAutocompleteSuggestion(commandText);","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Beebeeoii":6,"KS2499":5,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import static seedu.address.model.meeting.DateTime.DATE_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import static seedu.address.model.meeting.DateTime.TIME_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":" * Adds a meeting to the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    public static final String COMMAND_WORD \u003d \"addm\";","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a meeting to the address book. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        + PREFIX_MEETING_TITLE + \"MEETING \"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        + PREFIX_PERSON + \"NAME \"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        + PREFIX_DATETIME + DATE_FORMAT + \" \" + TIME_FORMAT + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"        + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        + PREFIX_DESCRIPTION + \"DESCRIPTION\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"        + PREFIX_MEETING_TITLE + \"Meeting with John \"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"        + PREFIX_PERSON + \"John Doe \"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"        + PREFIX_DATETIME + \"02/02/2022 12:00 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"        + PREFIX_LOCATION + \"Zoom \"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        + PREFIX_DESCRIPTION + \"Discuss about the project\";","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New meeting added: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book\";","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"    private final Title meetingTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"    private final Set\u003cName\u003e attendeeNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"    private final Location location;","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"    private final Description description;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"     * A more straightforward way to create an AddMeetingCommand to add a {@code Meeting} class.","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"     * Used primarily for testing.","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"     * @param meeting to be added","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"    public AddMeetingCommand(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        this.meetingTitle \u003d meeting.getTitle();","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        this.dateTime \u003d meeting.getDateTime();","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"        this.attendeeNames.addAll(meeting.getAttendees().stream().map(Person::getName).collect(Collectors.toSet()));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        this.location \u003d meeting.getLocation();","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"        this.description \u003d meeting.getDescription();","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"     * Creates an AddMeetingCommand to add a {@code Meeting} class with the specified attributes {@code Title},","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"     * {@code attendees}, {@code DateTime}, {@code Location}, {@code Description}","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"    public AddMeetingCommand(Title meetingTitle, DateTime dateTime, Set\u003cName\u003e attendees, Location location,","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"                             Description description) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"        requireAllNonNull(meetingTitle, attendees, dateTime, location, description);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"        this.meetingTitle \u003d meetingTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"        this.attendeeNames.addAll(attendees);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"        final Set\u003cPerson\u003e attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"        for (Name name : attendeeNames) {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"            Person person \u003d model.getPersonByName(name);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"            if (person \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"                throw new CommandException(\"Person not found: \" + name);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"            attendees.add(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"        Meeting meetingToAdd \u003d new Meeting(meetingTitle, dateTime, attendees, location, description);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"        if (model.hasMeeting(meetingToAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"        model.addMeeting(meetingToAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, meetingToAdd));","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"            || (other instanceof AddMeetingCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 meetingTitle.equals(((AddMeetingCommand) other).meetingTitle)","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 dateTime.equals(((AddMeetingCommand) other).dateTime)","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 attendeeNames.equals(((AddMeetingCommand) other).attendeeNames)","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 location.equals(((AddMeetingCommand) other).location)","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 description.equals(((AddMeetingCommand) other).description));","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"KS2499":117}},{"path":"src/main/java/seedu/address/logic/commands/AutocompleteResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Represents the result from autocompletion of command inputs, which consists","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" * of the next {@code Prefix} and whether that {@code Prefix} should","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * replace the current one.","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public class AutocompleteResult {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    private final Prefix prefix;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    private final boolean isReplaceCurrent;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     * Generates an {@code AutocompleteResult} with the suggested {@code Prefix}","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     * and whether it should replace the current one.","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * @param prefix Prefix for command.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     * @param isReplaceCurrent True if suggested {@code Prefix} should replace the current, false otherwise.","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult(Prefix prefix, boolean isReplaceCurrent) {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        this.isReplaceCurrent \u003d isReplaceCurrent;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     * Retrieves the suggested {@code Prefix}.","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     * @return Empty {@code Optional} if no {@code Prefix} is suggested, else an {@code Optional} containing the","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     *          suggested {@code Prefix}.","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public Optional\u003cPrefix\u003e getPrefix() {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        return prefix \u003d\u003d null ? Optional.empty() : Optional.of(this.prefix);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     * Returns whether the autocompletion should replace the current {@code Prefix}.","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"     * @return True if autocompletion should replace the current, false otherwise.","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    public boolean isReplaceCurrent() {","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        return this.isReplaceCurrent;","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"Beebeeoii":46}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thedesalizes"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"thedesalizes"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"thedesalizes"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"thedesalizes"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"thedesalizes"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"thedesalizes"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"thedesalizes"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"thedesalizes"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"thedesalizes"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"thedesalizes"},"content":" * Deletes a meeting from the address book","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"thedesalizes"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"thedesalizes"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"thedesalizes"},"content":"    public static final String COMMAND_WORD \u003d \"delm\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"thedesalizes"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a meeting from the address book.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"thedesalizes"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"thedesalizes"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"thedesalizes"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Meeting Deleted: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"thedesalizes"},"content":"    private final Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"thedesalizes"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"thedesalizes"},"content":"     * Constructs a DeleteMeetingCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"thedesalizes"},"content":"     * @param index The one index of the meeting in the address book","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"thedesalizes"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"thedesalizes"},"content":"    public DeleteMeetingCommand(Index index) {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"thedesalizes"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"thedesalizes"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"thedesalizes"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"thedesalizes"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"thedesalizes"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"thedesalizes"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"thedesalizes"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getMeetingsList();","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"thedesalizes"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"thedesalizes"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"thedesalizes"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"thedesalizes"},"content":"        Meeting meetingToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"thedesalizes"},"content":"        model.removeMeeting(meetingToDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"thedesalizes"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, meetingToDelete));","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"thedesalizes"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"thedesalizes"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"thedesalizes"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"thedesalizes"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"thedesalizes"},"content":"                || (other instanceof DeleteMeetingCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"thedesalizes"},"content":"                \u0026\u0026 index.equals(((DeleteMeetingCommand) other).index)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"thedesalizes"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"thedesalizes"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"thedesalizes":53}},{"path":"src/main/java/seedu/address/logic/commands/EditMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremykhoo-NUS"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jeremykhoo-NUS"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jeremykhoo-NUS"},"content":" * Edits the details of an existing meeting in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jeremykhoo-NUS"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"jeremykhoo-NUS"},"content":"public class EditMeetingsCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String COMMAND_WORD \u003d \"editm\";","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the meeting identified \"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"by the index number used in the displayed meetings list. \"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            + \"[\" + PREFIX_MEETING_TITLE + \"TITLE] \"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"[\" + PREFIX_DATETIME + \"TIMEDATE] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"[\" + PREFIX_PERSON + \"ATTENDEES] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION]...\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + PREFIX_DATETIME + \"14/02/23\"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + PREFIX_LOCATION + \"Stoa Poikile\";","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_EDIT_MEETING_SUCCESS \u003d \"Edited Meeting: %1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private final Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @param index of the meeting in the filtered meeting list to edit","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @param editMeetingDescriptor details to edit the meeting with","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public EditMeetingsCommand(Index index, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"jeremykhoo-NUS"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"jeremykhoo-NUS"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"jeremykhoo-NUS"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getMeetingsList();","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Meeting meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meetingToEdit, editMeetingDescriptor, model);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (!meetingToEdit.isSameMeeting(editedMeeting) \u0026\u0026 model.hasMeeting(editedMeeting)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"jeremykhoo-NUS"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"jeremykhoo-NUS"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting));","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Creates and returns a {@code Meeting} with the details of {@code meetingToEdit}","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * edited with {@code editMeetingDescriptor}.","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private static Meeting createEditedMeeting(","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    Meeting meetingToEdit, EditMeetingDescriptor editMeetingDescriptor, Model model)","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"jeremykhoo-NUS"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Optional\u003cSet\u003cName\u003e\u003e updatedAttendees \u003d editMeetingDescriptor.getAttendees();","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Set\u003cPerson\u003e updatedPerson \u003d meetingToEdit.getAttendees();","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Title updatedTitle \u003d editMeetingDescriptor.getTitle().orElse(meetingToEdit.getTitle());","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"jeremykhoo-NUS"},"content":"        DateTime updatedDateTime \u003d editMeetingDescriptor.getDateTime().orElse(meetingToEdit.getDateTime());","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Location updatedLocation \u003d editMeetingDescriptor.getLocation().orElse(meetingToEdit.getLocation());","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Description updatedDescription \u003d editMeetingDescriptor.getDescription().orElse(meetingToEdit.getDescription());","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (updatedAttendees.isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"jeremykhoo-NUS"},"content":"            Set\u003cName\u003e gotUpdatedAttendees \u003d updatedAttendees.get();","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"jeremykhoo-NUS"},"content":"            Set\u003cPerson\u003e attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"jeremykhoo-NUS"},"content":"            for (Name name : gotUpdatedAttendees) {","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"jeremykhoo-NUS"},"content":"                Person person \u003d model.getPersonByName(name);","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"jeremykhoo-NUS"},"content":"                if (person \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    throw new CommandException(\"Person not found: \" + name);","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"jeremykhoo-NUS"},"content":"                }","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"jeremykhoo-NUS"},"content":"                attendees.add(person);","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"jeremykhoo-NUS"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return new Meeting(updatedTitle, updatedDateTime, attendees, updatedLocation, updatedDescription);","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return new Meeting(updatedTitle, updatedDateTime, updatedPerson, updatedLocation, updatedDescription);","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"jeremykhoo-NUS"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"jeremykhoo-NUS"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"        if (!(other instanceof EditMeetingsCommand)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"jeremykhoo-NUS"},"content":"        // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"jeremykhoo-NUS"},"content":"        EditMeetingsCommand e \u003d (EditMeetingsCommand) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"jeremykhoo-NUS"},"content":"                \u0026\u0026 editMeetingDescriptor.equals(e.editMeetingDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Stores the details to edit the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * corresponding field value of the meeting.","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"jeremykhoo-NUS"},"content":"        private Title title;","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"jeremykhoo-NUS"},"content":"        private DateTime dateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"        private Set\u003cName\u003e attendees;","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"jeremykhoo-NUS"},"content":"        private Location location;","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"jeremykhoo-NUS"},"content":"        private Description description;","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public EditMeetingDescriptor() {}","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"jeremykhoo-NUS"},"content":"        /**","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"jeremykhoo-NUS"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"jeremykhoo-NUS"},"content":"         */","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"jeremykhoo-NUS"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"jeremykhoo-NUS"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"            setAttendees(toCopy.attendees);","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"jeremykhoo-NUS"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"jeremykhoo-NUS"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"jeremykhoo-NUS"},"content":"        /**","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"jeremykhoo-NUS"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"jeremykhoo-NUS"},"content":"         */","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"            return CollectionUtil.isAnyNonNull(title, dateTime, attendees, location, description);","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"jeremykhoo-NUS"},"content":"            this.title \u003d title;","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setDateTime(DateTime dateTime) {","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"jeremykhoo-NUS"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public Optional\u003cDateTime\u003e getDateTime() {","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setAttendees(Set\u003cName\u003e attendees) {","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"jeremykhoo-NUS"},"content":"            this.attendees \u003d attendees;","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public Optional\u003cSet\u003cName\u003e\u003e getAttendees() {","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return Optional.ofNullable(attendees);","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"jeremykhoo-NUS"},"content":"            this.location \u003d location;","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"jeremykhoo-NUS"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"jeremykhoo-NUS"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"jeremykhoo-NUS"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"jeremykhoo-NUS"},"content":"                return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"jeremykhoo-NUS"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"jeremykhoo-NUS"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"jeremykhoo-NUS"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"jeremykhoo-NUS"},"content":"                return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"jeremykhoo-NUS"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":219,"author":{"gitId":"jeremykhoo-NUS"},"content":"            // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"jeremykhoo-NUS"},"content":"            EditMeetingDescriptor e \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":221,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":222,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return getTitle().equals(e.getTitle())","lastModifiedDate":"2023-03-12"},{"lineNumber":223,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    \u0026\u0026 getDateTime().equals(e.getDateTime())","lastModifiedDate":"2023-03-12"},{"lineNumber":224,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    \u0026\u0026 getAttendees().equals(e.getAttendees())","lastModifiedDate":"2023-03-12"},{"lineNumber":225,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2023-03-12"},{"lineNumber":226,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription());","lastModifiedDate":"2023-03-12"},{"lineNumber":227,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":228,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":229,"author":{"gitId":"jeremykhoo-NUS"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Beebeeoii":6,"jeremykhoo-NUS":223}},{"path":"src/main/java/seedu/address/logic/commands/ExportMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"import seedu.address.storage.JsonAdaptedMeeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":" * This class represents a command for exporting of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"public class ExportMeetingsCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    public static final String COMMAND_WORD \u003d \"exportm\";","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exports meetings in JSON format\\n\" + \"Parameters: m/ \"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"            + \"index of meeting start/: optional starting point of range end/: optional ending point of range\";","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    public static final String INDEX_NOT_FOUND \u003d \"One of the provided indices is not found\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    private final List\u003cIndex\u003e indexList;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    private final DateTime start;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    private final DateTime end;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"     * Creates a new export meetings command","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"     * @param indexList list of indexes to export","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"     * @param start minimum date of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"     * @param end maximum date of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"    public ExportMeetingsCommand(List\u003cIndex\u003e indexList, DateTime start, DateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"        this.indexList \u003d indexList;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"            List\u003cMeeting\u003e meetingList \u003d model.getMeetingsByIndexesAndStartEnd(indexList, this.start, this.end);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"            List\u003cJsonAdaptedMeeting\u003e adapted \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                    meetingList","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                            .stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                            .map(JsonAdaptedMeeting::new)","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"            return new CommandResult(JsonUtil.toJsonString(adapted));","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(INDEX_NOT_FOUND);","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(\"Error turning to json\");","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"chuakid":60}},{"path":"src/main/java/seedu/address/logic/commands/ExportPersonsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"import seedu.address.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":" * This class represents a command for exporting of persons","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"public class ExportPersonsCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exports persons in JSON format\\n\" + \"Parameters: p/ \"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"            + \"index of person\";","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    public static final String INDEX_NOT_FOUND \u003d \"One of the provided indices is not found\";","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    private final List\u003cIndex\u003e indexList;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    public ExportPersonsCommand(List\u003cIndex\u003e indexList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        this.indexList \u003d indexList;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"            List\u003cPerson\u003e personList \u003d model.getPersonsByIndexes(indexList);","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"            List\u003cJsonAdaptedPerson\u003e adapted \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                    personList","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"                            .stream()","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"                            .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"            return new CommandResult(JsonUtil.toJsonString(adapted));","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(INDEX_NOT_FOUND);","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(\"Error turning to json\");","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"chuakid":47}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"KS2499":1,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/FindMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.MeetingContainsNamesPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":" *  Finds and lists all meetings in address book whose attendees contains any of the argument person names.","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":" *  name matching is case-insensitive.","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"public class FindMeetingCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    public static final String COMMAND_WORD \u003d \"findm\";","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all meetings whose attendees contain any of \"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"        + \"the specified person names\\n (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"        + \"Use without arguments to list all meetings.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"        + \"Parameters: [PERSON_NAMES]...\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"        + \"Example: \" + COMMAND_WORD + \" alice bob charlie\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"        + \"or\"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    private final MeetingContainsNamesPredicate predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    public FindMeetingCommand(MeetingContainsNamesPredicate predicate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"        model.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        if (predicate.getPersonNames() \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"            return new CommandResult(\"Listed all meetings!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"            String.format(\"Listed all meetings with attendees: %s\", predicate.getPersonNames().toString())","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"            || (other instanceof FindMeetingCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 predicate.equals(((FindMeetingCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"KS2499":45}},{"path":"src/main/java/seedu/address/logic/commands/ImportMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import seedu.address.storage.JsonAdaptedMeeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":" * This class represents a command for importing of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"public class ImportMeetingsCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"    public static final String COMMAND_WORD \u003d \"importm\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    static final String MALFORMED_JSON \u003d \"JSON input malformed\";","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    static final String DUPLICATE_MEETING \u003d \"Duplicate meeting found\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    static final String SUCCESS \u003d \"Meetings imported\";","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports meetings in JSON format\\n\" + \"Parameters: f/ \"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"            + \"true: to force imports regardless of duplicates\";","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    private final String json;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    private final boolean isForced;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"     * Creates a new ImportMeetingsCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"     * @param json     meeting to be imported","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"     * @param isForced whether to force imports regardless of duplicates","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    public ImportMeetingsCommand(String json, boolean isForced) {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        this.json \u003d json;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        this.isForced \u003d isForced;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"            JsonAdaptedMeeting[] meetingList \u003d JsonUtil.fromJsonString(json, JsonAdaptedMeeting[].class);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"            if (isForced) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"                for (JsonAdaptedMeeting jsonAdaptedMeeting : meetingList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"                    if (!model.hasMeeting(jsonAdaptedMeeting.toModelType())) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"                        model.addMeeting(jsonAdaptedMeeting.toModelType());","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"                for (JsonAdaptedMeeting jsonAdaptedMeeting : meetingList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                    if (model.hasMeeting(jsonAdaptedMeeting.toModelType())) {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                        throw new DuplicateMeetingException();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"                for (JsonAdaptedMeeting p : meetingList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"                    model.addMeeting(p.toModelType());","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"            return new CommandResult(SUCCESS);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"        } catch (IOException | IllegalValueException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(MALFORMED_JSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"        } catch (DuplicateMeetingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(DUPLICATE_MEETING);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"chuakid":63}},{"path":"src/main/java/seedu/address/logic/commands/ImportPersonsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import seedu.address.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":" * This class represents a command for importing of persons","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"public class ImportPersonsCommand extends Command {","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    static final String MALFORMED_JSON \u003d \"JSON input malformed\";","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    static final String DUPLICATE_PERSON \u003d \"Duplicate person found\";","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    static final String SUCCESS \u003d \"Persons imported\";","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports persons in JSON format\\n\" + \"Parameters: f/ \"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"            + \"true: to force imports regardless of duplicates\";","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    private final String json;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    private final boolean isForced;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"     * Creates a new ImportPersonsCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"     * @param json     person to be imported","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"     * @param isForced whether to force imports regardless of duplicates","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    public ImportPersonsCommand(String json, boolean isForced) {","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        this.json \u003d json;","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        this.isForced \u003d isForced;","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"            JsonAdaptedPerson[] personList \u003d JsonUtil.fromJsonString(json, JsonAdaptedPerson[].class);","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"            if (isForced) {","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"                for (JsonAdaptedPerson jsonAdaptedPerson : personList) {","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"                    if (!model.hasPerson(jsonAdaptedPerson.toModelType())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"                        model.addPerson(jsonAdaptedPerson.toModelType());","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"                    }","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"            } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"                for (JsonAdaptedPerson jsonAdaptedPerson : personList) {","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                    if (model.hasPerson(jsonAdaptedPerson.toModelType())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                        throw new DuplicatePersonException();","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                    }","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"                for (JsonAdaptedPerson p : personList) {","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"                    model.addPerson(p.toModelType());","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"            return new CommandResult(SUCCESS);","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"        } catch (IOException | IllegalValueException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(MALFORMED_JSON);","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"        } catch (DuplicatePersonException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(DUPLICATE_PERSON);","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"chuakid":63}},{"path":"src/main/java/seedu/address/logic/commands/ViewMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":" * Lists all meetings in the address book to the user.","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"public class ViewMeetingsCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"    public static final String COMMAND_WORD \u003d \"listm\";","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"        for (Meeting m : model.getMeetingsList()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"            result.append(m.getTitle());","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"            result.append(\"Description: \").append(m.getDescription());","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"            result.append(\"At: \").append(m.getDateTime());","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"            result.append(\"Attendees: \").append(m.getAttendees());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"            result.append(\"Location: \").append(m.getLocation());","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"            result.append(\"\\n\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chuakid":33}},{"path":"src/main/java/seedu/address/logic/jobs/CheckMeetingHasPassed.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.logic.jobs;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" * Represents a job that checks whether a meeting has passed based on the current","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":" * system date/time.","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public class CheckMeetingHasPassed extends TimerTask {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    private final Model model;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    private final ObservableList\u003cMeeting\u003e meetings;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     * Generates the job to be run on CRON.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * @param model QuickContacts model.","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public CheckMeetingHasPassed(Model model) {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        meetings \u003d model.getMeetingsList();","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    public void run() {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        for (Meeting m : meetings) {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            if (!m.getHasPassed() \u0026\u0026 m.hasPassed()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"                // UI update","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                Platform.runLater(() -\u003e model.setMeeting(m, m));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":36}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG};","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        for (Prefix p : PREFIXES) {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"            if (argMultimap.getValue(p).isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"                return new AutocompleteResult(p, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Beebeeoii":16,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":" * Parses input arguments and creates a new AddMeetingCommand object.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_MEETING_TITLE, PREFIX_DATETIME, PREFIX_PERSON,","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        PREFIX_LOCATION, PREFIX_DESCRIPTION};","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    public AddMeetingCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            ArgumentTokenizer.tokenize(userInput, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MEETING_TITLE, PREFIX_DATETIME, PREFIX_PERSON, PREFIX_LOCATION,","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"            PREFIX_DESCRIPTION)","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MEETING_TITLE).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"        Set\u003cName\u003e attendeeNames \u003d ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_PERSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        DateTime dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATETIME).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"        return new AddMeetingCommand(title, dateTime, attendeeNames, location, description);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        for (Prefix p : PREFIXES) {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"            if (argMultimap.getValue(p).isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"                return new AutocompleteResult(p, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Beebeeoii":18,"KS2499":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"thedesalizes"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.logic.commands.EditMeetingsCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.ExportMeetingsCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.ExportPersonsCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.ImportMeetingsCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.ImportPersonsCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.ViewMeetingsCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.command.CommandHistory;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        CommandHistory.push(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"        case FindMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"            return new FindMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"        case ViewMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"            return new ViewMeetingsCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"jeremykhoo-NUS"},"content":"        case EditMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return new EditMeetingParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"thedesalizes"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"thedesalizes"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"chuakid"},"content":"        case ExportPersonsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"chuakid"},"content":"            return new ExportPersonsParser().parse(arguments);","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"chuakid"},"content":"        case ImportPersonsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"chuakid"},"content":"            return new ImportPersonsParser().parse(arguments);","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"chuakid"},"content":"        case ExportMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"chuakid"},"content":"            return new ExportMeetingsParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"chuakid"},"content":"        case ImportMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"chuakid"},"content":"            return new ImportMeetingsParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"     * Parses user input into command for autocomplete suggestion.","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"     * @return the {@code AutocompleteResult} based on the user input","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String userInput) {","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"            return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"            return new AddCommandParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"            return new EditCommandParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"            return new AddMeetingCommandParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"        case EditMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"            return new EditMeetingParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"chuakid"},"content":"        case ExportPersonsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"chuakid"},"content":"            return new ExportPersonsParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"chuakid"},"content":"        case ExportMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"chuakid"},"content":"            return new ExportMeetingsParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"        default:","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"            return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"thedesalizes":3,"Beebeeoii":36,"KS2499":8,"jeremykhoo-NUS":4,"chuakid":20,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public static final Prefix PREFIX_MEETING_TITLE \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"des/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    public static final Prefix PREFIX_PERSON \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    public static final Prefix PREFIX_FORCE \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"start/\");","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    public static final Prefix PREFIX_END \u003d new Prefix(\"end/\");","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"KS2499":4,"jeremykhoo-NUS":1,"chuakid":3,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Beebeeoii":6,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thedesalizes"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"thedesalizes"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"thedesalizes"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"thedesalizes"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"thedesalizes"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"thedesalizes"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"thedesalizes"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"thedesalizes"},"content":" * Parses input arguments and creates a new DeleteMeetingCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"thedesalizes"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"thedesalizes"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"thedesalizes"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"thedesalizes"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"thedesalizes"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"thedesalizes"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"thedesalizes"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"thedesalizes"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"thedesalizes"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"thedesalizes"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"thedesalizes"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"thedesalizes"},"content":"            return new DeleteMeetingCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"thedesalizes"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"thedesalizes"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"thedesalizes"},"content":"                    pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"thedesalizes"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"thedesalizes"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"thedesalizes"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"thedesalizes":30,"Beebeeoii":7}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG};","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        for (Prefix p : PREFIXES) {","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"            if (argMultimap.getValue(p).isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"                return new AutocompleteResult(p, true);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Beebeeoii":16,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/EditMeetingParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremykhoo-NUS"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.logic.commands.EditMeetingsCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.logic.commands.EditMeetingsCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"jeremykhoo-NUS"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"jeremykhoo-NUS"},"content":" * Parses input arguments and creates a new EditMeetingsCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"jeremykhoo-NUS"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jeremykhoo-NUS"},"content":"public class EditMeetingParser implements Parser\u003cEditMeetingsCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_MEETING_TITLE, PREFIX_DATETIME, PREFIX_PERSON,","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        PREFIX_LOCATION, PREFIX_DESCRIPTION};","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMeetingsCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * and returns an EditMeetingsCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public EditMeetingsCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jeremykhoo-NUS"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jeremykhoo-NUS"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"jeremykhoo-NUS"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jeremykhoo-NUS"},"content":"                                                    EditMeetingsCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"jeremykhoo-NUS"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_TITLE).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"            editMeetingDescriptor.setTitle(ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MEETING_TITLE).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jeremykhoo-NUS"},"content":"            editMeetingDescriptor.setDateTime(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATETIME).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (argMultimap.getValue(PREFIX_PERSON).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jeremykhoo-NUS"},"content":"            editMeetingDescriptor.setAttendees(ParserUtil.parseAttendees(argMultimap.getAllValues(PREFIX_PERSON)));","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"jeremykhoo-NUS"},"content":"            editMeetingDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"jeremykhoo-NUS"},"content":"            editMeetingDescriptor.setDescription(","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"jeremykhoo-NUS"},"content":"                ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new ParseException(EditMeetingsCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return new EditMeetingsCommand(index, editMeetingDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        String[] argsSplit \u003d args.split(\" \");","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        if (argsSplit.length \u003d\u003d 0) {","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"            return new AutocompleteResult(PREFIXES[0], false);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        String lastPrefix \u003d argsSplit[argsSplit.length - 1];","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(\" \" + lastPrefix, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        boolean returnNext \u003d false;","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        for (Prefix p : PREFIXES) {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"            if (returnNext) {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"                return new AutocompleteResult(p, true);","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"            if (argMultimap.getValue(p).isPresent() \u0026\u0026 p.toString().equals(lastPrefix)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"                returnNext \u003d true;","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(PREFIXES[0], true);","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"jeremykhoo-NUS"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Beebeeoii":29,"jeremykhoo-NUS":60}},{"path":"src/main/java/seedu/address/logic/parser/ExportMeetingsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.ExportMeetingsCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":" * Parser for parsing export meeting commands","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"public class ExportMeetingsParser implements Parser\u003cExportMeetingsCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_MEETING_TITLE, PREFIX_START, PREFIX_END};","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    public ExportMeetingsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIXES);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        List\u003cString\u003e indexStrings \u003d argMultimap.getAllValues(PREFIX_MEETING_TITLE);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"        for (String s : indexStrings) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"                indexes.add(ParserUtil.parseIndex(s));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"            } catch (ParseException parseException) {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"                        ExportMeetingsCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                        parseException);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"        DateTime start \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"        DateTime end \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"            if (argMultimap.getValue(PREFIX_START).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"                start \u003d new DateTime(argMultimap.getValue(PREFIX_START).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"            if (argMultimap.getValue(PREFIX_END).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"                end \u003d new DateTime(argMultimap.getValue(PREFIX_END).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                    ExportMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"        return new ExportMeetingsCommand(indexes, start, end);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String input) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"        String[] argsSplit \u003d input.split(\" \");","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"        if (argsSplit.length \u003d\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"            return new AutocompleteResult(PREFIXES[0], false);","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"        String lastPrefix \u003d argsSplit[argsSplit.length - 1];","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(\" \" + lastPrefix, PREFIXES);","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"        boolean returnNext \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"        for (Prefix p : PREFIXES) {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"            if (returnNext) {","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"chuakid"},"content":"                return new AutocompleteResult(p, true);","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"chuakid"},"content":"            if (argMultimap.getValue(p).isPresent() \u0026\u0026 p.toString().equals(lastPrefix)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"chuakid"},"content":"                returnNext \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"chuakid"},"content":"        return new AutocompleteResult(PREFIXES[0], true);","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"chuakid":80}},{"path":"src/main/java/seedu/address/logic/parser/ExportPersonsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.ExportPersonsCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":" * Parser for exporting of persons command","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"public class ExportPersonsParser implements Parser\u003cExportPersonsCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_PERSON};","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    public ExportPersonsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIXES);","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"        List\u003cString\u003e indexStrings \u003d argMultimap.getAllValues(PREFIX_PERSON);","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"        if (indexStrings.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"                    ExportPersonsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        for (String s : indexStrings) {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"            try {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"                indexes.add(ParserUtil.parseIndex(s));","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"            } catch (ParseException parseException) {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"                        ExportPersonsCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"                        parseException);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"        return new ExportPersonsCommand(indexes);","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String input) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"        return new AutocompleteResult(PREFIX_PERSON, false);","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"chuakid":49}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Beebeeoii":5,"-":33}},{"path":"src/main/java/seedu/address/logic/parser/FindMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.MeetingContainsNamesPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":" * Parses input arguments and creates a new FindMeetingCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"public class FindMeetingCommandParser implements Parser\u003cFindMeetingCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMeetingCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"     * @param args input arguments","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"     * @return FindMeetingCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    public FindMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"        // If used without arguments, return all meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"            return new FindMeetingCommand(new MeetingContainsNamesPredicate());","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"        // If used with trailing whitespace throw error on expected usage","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        return new FindMeetingCommand(new MeetingContainsNamesPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"KS2499":42}},{"path":"src/main/java/seedu/address/logic/parser/ImportMeetingsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.ImportMeetingsCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.ImportMeetingsCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":" * This class represents a parser for importing of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"public class ImportMeetingsParser implements Parser\u003cImportMeetingsCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"    static final Prefix[] PREFIXES \u003d new Prefix[]{PREFIX_FORCE};","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    public ImportMeetingsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIXES);","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"        String json \u003d argMultimap.getPreamble();","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"        boolean isForced \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"                argMultimap.getValue(PREFIX_FORCE).isPresent()","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"                        \u0026\u0026 argMultimap.getValue(PREFIX_FORCE).get().equals(\"true\");","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"        if (json.equals(\"\")) {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(MESSAGE_USAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        return new ImportMeetingsCommand(json, isForced);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String input) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"chuakid":35}},{"path":"src/main/java/seedu/address/logic/parser/ImportPersonsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.ImportPersonsCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.ImportPersonsCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":" * This class represents a parser for importing of persons","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"public class ImportPersonsParser implements Parser\u003cImportPersonsCommand\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"    static final Prefix[] PREFIXES \u003d new Prefix[]{PREFIX_FORCE};","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    public ImportPersonsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIXES);","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"        String json \u003d argMultimap.getPreamble();","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"        boolean isForced \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"                argMultimap.getValue(PREFIX_FORCE).isPresent()","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"                        \u0026\u0026 argMultimap.getValue(PREFIX_FORCE).get().equals(\"true\");","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"        if (json.equals(\"\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(MESSAGE_USAGE);","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        return new ImportPersonsCommand(json, isForced);","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String input) {","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"chuakid":35}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     * Parses {@code input} to retrieve available suggestions based","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * on the command it matches.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    AutocompleteResult getAutocompleteSuggestion(String input);","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Beebeeoii":7,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jeremykhoo-NUS"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"     * Parses a Collection of {@code String names} to a set of {@code Name}.","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"     * @param names A collection of names.","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"     * @return A set of names.","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"     * @throws ParseException if any of the given names is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"    public static Set\u003cName\u003e parseNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"            nameSet.add(parseName(name));","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"        return nameSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"jeremykhoo-NUS"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static Set\u003cName\u003e parseAttendees(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"jeremykhoo-NUS"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"jeremykhoo-NUS"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"jeremykhoo-NUS"},"content":"            nameSet.add(parseName(name));","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return nameSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"KS2499"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"KS2499"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"KS2499"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"KS2499"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"KS2499"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"KS2499"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"KS2499"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"KS2499"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"KS2499"},"content":"     * Parses a {@code String datetime} into a {@code DateTime}.","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"KS2499"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"KS2499"},"content":"     * @throws ParseException if the given {@code datetime} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"KS2499"},"content":"    public static DateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"KS2499"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"KS2499"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"KS2499"},"content":"        if (!DateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"KS2499"},"content":"        return new DateTime(trimmedDateTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"KS2499"},"content":"     * Parses a {@code String location} into a {@code Location}.","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"KS2499"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"KS2499"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"KS2499"},"content":"    public static Location parseLocation(String s) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"KS2499"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"KS2499"},"content":"        String trimmedLocation \u003d s.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"KS2499"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"KS2499"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"KS2499"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"KS2499"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"KS2499"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"KS2499"},"content":"    public static Description parseDescription(String s) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"KS2499"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"KS2499"},"content":"        String trimmedDescription \u003d s.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"KS2499"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"KS2499"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"KS2499":76,"jeremykhoo-NUS":18,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.UniqueMeetingList;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    private final UniqueMeetingList meetings;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    public AddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"     * Replaces the contents of the meeting list with {@code meetings}.","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"    public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"        requireNonNull(personName);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"        return persons.getPersonByName(personName);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"    //// meeting-level operations","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a meeting to the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"     * The meeting must not already exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"    public void addMeeting(Meeting m) {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"        meetings.add(m);","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"     * Replaces the given meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the address","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"     * book.","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"        meetings.remove(key);","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"            + meetings.asUnmodifiableObservableList().size() + \" meetings\";","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"Beebeeoii"},"content":"            \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"Beebeeoii"},"content":"            \u0026\u0026 meetings.equals(((AddressBook) other).meetings));","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"Beebeeoii"},"content":"        return Objects.hash(persons, meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":61,"KS2499":9,"-":116}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Returns true if a meeting with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"jeremykhoo-NUS"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"     * Gets persons at the corresponding indexes","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"     * @param indexList list of indexes to retrieve","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"     * @return persons at those indexes","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"chuakid"},"content":"    List\u003cPerson\u003e getPersonsByIndexes(List\u003cIndex\u003e indexList);","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"     * Gets meetings at the corresponding indexes","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"     * @param indexList list of indexes to retrieve","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"chuakid"},"content":"     * @return meetings at those indexes","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"chuakid"},"content":"    List\u003cMeeting\u003e getMeetingsByIndexesAndStartEnd(List\u003cIndex\u003e indexList, DateTime start, DateTime end);","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"jeremykhoo-NUS"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"     * Gets the Person matching the name from the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"     * @param personName name of the person to be retrieved.","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"     * @return the person with the given name.","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"KS2499"},"content":"    Person getPersonByName(Name personName);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"KS2499"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"jeremykhoo-NUS"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Returns an unmodifiable view of the meetings list","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"KS2499"},"content":"     * Adds the given meeting.","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"KS2499"},"content":"     * {@code meeting} must not already exist in the meeting list.","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"KS2499"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"thedesalizes"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"thedesalizes"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"thedesalizes"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"thedesalizes"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"thedesalizes"},"content":"    void removeMeeting(Meeting meeting);","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"KS2499"},"content":"     * Returns an unmodifiable view of the meetings list","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"chuakid"},"content":"    ObservableList\u003cMeeting\u003e getMeetingsList();","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"KS2499"},"content":"     * @return an unmodifiable view of the filtered list of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"KS2499"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"thedesalizes":6,"KS2499":38,"chuakid":19,"jeremykhoo-NUS":22,"-":80}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.addressBook.getMeetingList());","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"        return addressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"chuakid"},"content":"    public List\u003cPerson\u003e getPersonsByIndexes(List\u003cIndex\u003e indexList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"chuakid"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"chuakid"},"content":"        for (Index index : indexList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"chuakid"},"content":"            persons.add(filteredPersons.get(","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"chuakid"},"content":"                    index.getZeroBased())","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"chuakid"},"content":"            );","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"chuakid"},"content":"        return persons;","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"chuakid"},"content":"    public List\u003cMeeting\u003e getMeetingsByIndexesAndStartEnd(List\u003cIndex\u003e indexList, DateTime start, DateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"chuakid"},"content":"        List\u003cMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"chuakid"},"content":"        for (Index index : indexList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"chuakid"},"content":"            meetings.add(filteredMeetings.get(","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"chuakid"},"content":"                    index.getZeroBased())","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"chuakid"},"content":"            );","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"chuakid"},"content":"        if (start !\u003d null || end !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"chuakid"},"content":"            for (Meeting meeting : getMeetingsList()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"chuakid"},"content":"                if (!meetings.contains(meeting) \u0026\u0026 meeting.isBetween(start, end)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"chuakid"},"content":"                    meetings.add(meeting);","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"chuakid"},"content":"        return meetings;","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"KS2499"},"content":"    public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"KS2499"},"content":"        return addressBook.getPersonByName(personName);","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"jeremykhoo-NUS"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"thedesalizes"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"thedesalizes"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"thedesalizes"},"content":"        addressBook.removeMeeting(key);","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"thedesalizes"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"chuakid"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Meeting accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"KS2499"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"KS2499"},"content":"        addressBook.addMeeting(meeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"KS2499"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"KS2499"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"KS2499"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"KS2499"},"content":"        return addressBook.hasMeeting(meeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":216,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"KS2499"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"KS2499"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"KS2499"},"content":"        addressBook.setMeeting(target, editedMeeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":223,"author":{"gitId":"chuakid"},"content":"     * Returns an unmodifiable view of the list of {@code Meeting} backed by the internal list of","lastModifiedDate":"2023-03-11"},{"lineNumber":224,"author":{"gitId":"chuakid"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-03-11"},{"lineNumber":225,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":226,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":227,"author":{"gitId":"chuakid"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingsList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"chuakid"},"content":"        return filteredMeetings;","lastModifiedDate":"2023-03-11"},{"lineNumber":229,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":231,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"KS2499"},"content":"     * Returns an unmodifiable view of the list of {@code Meeting} backed by the internal list of","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"KS2499"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"KS2499"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"KS2499"},"content":"        return filteredMeetings;","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thedesalizes":4,"KS2499":38,"chuakid":47,"jeremykhoo-NUS":10,"-":141}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an unmodifiable view of the meetings list.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * This list will not contain any duplicate meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":6,"-":17}},{"path":"src/main/java/seedu/address/model/command/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.command;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.command.exceptions.OutOfBoundsCommandHistoryException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Represents a CommandHistory that consists of all the previously executed commands,","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" * regardless of their validity.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"public class CommandHistory {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     * The maximum number of commands kept in memory.","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public static final int MAXIMUM \u003d 30;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    private static final LinkedList\u003cString\u003e commands \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    private static int index \u003d -1;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a command to be the last one in the {@code CommandHistory}.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     * @param input The command input.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public static void push(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        if (commands.size() \u003e\u003d MAXIMUM) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"            commands.removeFirst();","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        commands.add(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        index \u003d commands.size() - 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the pointer such that {@code CommandHistory.prev()} will return the last command.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    public static void setLast() {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        index \u003d commands.size();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    private static boolean hasPrev() {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        return !commands.isEmpty() \u0026\u0026 index \u003e 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    private static boolean hasNext() {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        return index \u003c commands.size() - 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"     * Retrieves the previous command in the {@code CommandHistory}.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     * @return The previous command input.","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     * @throws OutOfBoundsCommandHistoryException If there are no commands before the current one.","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    public static String prev() throws OutOfBoundsCommandHistoryException {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        if (hasPrev()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"            index--;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"            return commands.get(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        throw new OutOfBoundsCommandHistoryException();","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"     * Retrieves the next command in the {@code CommandHistory}.","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"     * @return The next command input.","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"     * @throws OutOfBoundsCommandHistoryException If there are no commands after the current one.","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    public static String next() throws OutOfBoundsCommandHistoryException {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        if (hasNext()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"            index++;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"            return commands.get(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        throw new OutOfBoundsCommandHistoryException();","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"     * Clears {@code CommandHistory}","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    public static void clear() {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        commands.clear();","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        index \u003d -1;","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Beebeeoii":85}},{"path":"src/main/java/seedu/address/model/command/exceptions/OutOfBoundsCommandHistoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.command.exceptions;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Signals that the operation is unable to retrieve any commands from the history","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" * as the index is out of bounds.","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"public class OutOfBoundsCommandHistoryException extends RuntimeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Beebeeoii":8}},{"path":"src/main/java/seedu/address/model/meeting/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import java.time.Year;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":" * Represents a Meetings\u0027s date/time in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"public class DateTime implements Comparable\u003cDateTime\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    public static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    private static final String DATE_FORMAT_MESSAGE \u003d \"dd/MM/yyyy OR DD/MM/YY OR DD/MM with separators being \u0027/\u0027, \u0027\u0027, \u0027\"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"            + \".\u0027, \u0027-\u0027\";","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    private static final String TIME_FORMAT_MESSAGE \u003d \"HH:mm OR HH:mmAM/PM with separators being \u0027:\u0027,\u0027\u0027,\u0027.\u0027\";","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"            \"Dates/Times should only contain alphanumeric characters and spaces, and it should not be blank\"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"                    + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"                    + \"1. Date must comply with the format: \" + DATE_FORMAT_MESSAGE + \".\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                    + \"2. Time must comply with the format: \" + TIME_FORMAT_MESSAGE + \" in 24-hour format.\";","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     * The first character of the date/time string must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"     * Inputs in addition to formats like dd/MM/yyyy are allowed for semantics","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"     * such as \"next monday\".","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{ASCII} ]*\";","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    private static final String[] DATE_SEPARATORS \u003d {\"/\", \"\", \".\", \"-\"};","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    private static final String[] TIME_SEPARATORS \u003d {\":\", \"\", \".\"};","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    private static final String SEPARATOR_PLACEHOLDER \u003d \"{sep}\";","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    private static final String DDMMYYYY_TEMPLATE \u003d \"dd\" + SEPARATOR_PLACEHOLDER + \"MM\"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"            + SEPARATOR_PLACEHOLDER + \"yyyy\";","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    private static final String DDMMYY_TEMPLATE \u003d \"dd\" + SEPARATOR_PLACEHOLDER + \"MM\"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"            + SEPARATOR_PLACEHOLDER + \"yy\";","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    private static final String DDMM_TEMPLATE \u003d \"dd\" + SEPARATOR_PLACEHOLDER + \"MM\";","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    private static final String HHMM_TEMPLATE \u003d \"HH\" + SEPARATOR_PLACEHOLDER + \"mm\";","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    private static final String HHMM_AM_PM_TEMPLATE \u003d \"h\" + SEPARATOR_PLACEHOLDER + \"mma\";","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    private final LocalDate meetingDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"    private final Optional\u003cLocalTime\u003e meetingTime;","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"     * This is used only for inputs that include specific durations.","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"     * For example Thursday 2pm - Thursday 4pm implies duration of","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"     * 2 hours.","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    private final Duration meetingDuration;","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code DateTime} without any duration specified.","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     * @param dateTime A valid date/time.","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        String[] dtSplit \u003d dateTime.split(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        String datePortion \u003d dtSplit[0];","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        meetingDate \u003d stringToLocalDate(datePortion);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        if (dtSplit.length \u003d\u003d 2) {","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"            String timePortion \u003d dtSplit[1];","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"            meetingTime \u003d Optional.of(stringToLocalTime(timePortion));","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"            meetingTime \u003d Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        meetingDuration \u003d Duration.ZERO;","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code DateTime} with a duration specified.","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"     * @param startDateTime A valid start date/time.","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"     * @param endDateTime   A valid end date/time.","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"    public DateTime(String startDateTime, String endDateTime) {","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        requireAllNonNull(startDateTime, endDateTime);","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidDateTime(startDateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidDateTime(endDateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"        String[] startDtSplit \u003d startDateTime.split(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"        String[] endDtSplit \u003d endDateTime.split(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        String startDatePortion \u003d startDtSplit[0];","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        String endDatePortion \u003d endDtSplit[0];","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        meetingDate \u003d stringToLocalDate(startDatePortion);","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        if (startDtSplit.length \u003d\u003d 2 \u0026\u0026 endDtSplit.length \u003d\u003d 2) {","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"            String startTimePortion \u003d startDtSplit[1];","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"            String endTimePortion \u003d endDtSplit[1];","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"chuakid"},"content":"            meetingTime \u003d Optional.of(stringToLocalTime(startTimePortion));","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"chuakid"},"content":"            LocalDateTime startDT \u003d LocalDateTime.of(meetingDate, meetingTime.get());","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"            LocalDateTime endDT \u003d LocalDateTime.of(stringToLocalDate(endDatePortion),","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"                    stringToLocalTime(endTimePortion));","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"            checkArgument(isValidDuration(startDT, endDT));","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"            meetingDuration \u003d Duration.between(startDT, endDT);","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"chuakid"},"content":"            meetingTime \u003d Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"            meetingDuration \u003d Duration.between(meetingDate, stringToLocalDate(endDatePortion));","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"     * Returns a {@code string} representation of the Date and Time (if exists) stored","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"     * in this class.","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"chuakid"},"content":"        String timePortion \u003d meetingTime","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"chuakid"},"content":"                .map(localTime -\u003e \" \" + localTime.format(DateTimeFormatter.ofPattern(TIME_FORMAT)))","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"chuakid"},"content":"                .orElse(\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"chuakid"},"content":"        return meetingDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT)) + timePortion;","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid date/time.","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"        String[] dtSplit \u003d test.split(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"        if (dtSplit.length \u003e 2 || !test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"        String datePortion \u003d dtSplit[0];","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"        if (dtSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"            return isValidDate(datePortion);","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"        String timePortion \u003d dtSplit[1];","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"        return isValidDate(datePortion) \u0026\u0026 isValidTime(timePortion);","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid date/time.","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidDuration(LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"        return !Duration.between(startDateTime, endDateTime).isNegative()","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 !Duration.between(startDateTime, endDateTime).isZero();","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"    private static boolean isValidDate(String test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 stringToLocalDate(test) !\u003d LocalDate.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"Beebeeoii"},"content":"    private static boolean isValidTime(String test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"Beebeeoii"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 stringToLocalTime(test) !\u003d LocalTime.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"Beebeeoii"},"content":"    private static LocalDate stringToLocalDate(String date) {","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"Beebeeoii"},"content":"            return parseDate(date, getDateFormat(date));","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"Beebeeoii"},"content":"        } catch (InvalidDateTimeFormatException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"Beebeeoii"},"content":"            return LocalDate.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"Beebeeoii"},"content":"    private static LocalTime stringToLocalTime(String time) {","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"Beebeeoii"},"content":"            return parseTime(time, getTimeFormat(time));","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"        } catch (InvalidDateTimeFormatException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"Beebeeoii"},"content":"            return LocalTime.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"Beebeeoii"},"content":"    private static LocalDate parseDate(String date, String pattern) {","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"Beebeeoii"},"content":"            if (!pattern.equals(\"ddMM\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"Beebeeoii"},"content":"                return LocalDate.parse(date, DateTimeFormatter.ofPattern(pattern, Locale.ENGLISH));","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"Beebeeoii"},"content":"            if (date.length() !\u003d 4 \u0026\u0026 date.length() !\u003d 5) {","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"Beebeeoii"},"content":"                throw new InvalidDateTimeFormatException();","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"Beebeeoii"},"content":"            String newDate \u003d date + Year.now();","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"Beebeeoii"},"content":"            if (date.length() \u003d\u003d 5) {","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"Beebeeoii"},"content":"                newDate \u003d date + date.charAt(2) + Year.now();","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"Beebeeoii"},"content":"            return LocalDate.parse(newDate, DateTimeFormatter.ofPattern(getDateFormat(newDate), Locale.ENGLISH));","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeParseException | InvalidDateTimeFormatException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"Beebeeoii"},"content":"            return LocalDate.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"Beebeeoii"},"content":"    private static LocalTime parseTime(String time, String pattern) {","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"Beebeeoii"},"content":"            return LocalTime.parse(time, DateTimeFormatter.ofPattern(pattern, Locale.ENGLISH));","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"Beebeeoii"},"content":"            return LocalTime.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"Beebeeoii"},"content":"    private static String getDateFormat(String date) throws InvalidDateTimeFormatException {","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"Beebeeoii"},"content":"        String dateFormat \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"Beebeeoii"},"content":"        for (String separator : DATE_SEPARATORS) {","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"Beebeeoii"},"content":"            String ddmmyyyyPattern \u003d patternForSeparator(DDMMYYYY_TEMPLATE, separator);","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"Beebeeoii"},"content":"            String ddmmyyPattern \u003d patternForSeparator(DDMMYY_TEMPLATE, separator);","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"Beebeeoii"},"content":"            String ddmmPattern \u003d patternForSeparator(DDMM_TEMPLATE, separator);","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"Beebeeoii"},"content":"            if (parseDate(date, ddmmyyyyPattern) !\u003d LocalDate.MAX) {","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"Beebeeoii"},"content":"                dateFormat \u003d ddmmyyyyPattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"Beebeeoii"},"content":"            if (parseDate(date, ddmmyyPattern) !\u003d LocalDate.MAX) {","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"Beebeeoii"},"content":"                dateFormat \u003d ddmmyyPattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"Beebeeoii"},"content":"            if (parseDate(date, ddmmPattern) !\u003d LocalDate.MAX) {","lastModifiedDate":"2023-03-20"},{"lineNumber":242,"author":{"gitId":"Beebeeoii"},"content":"                dateFormat \u003d ddmmPattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":244,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":245,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"Beebeeoii"},"content":"        if (dateFormat.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2023-03-15"},{"lineNumber":248,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":249,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":250,"author":{"gitId":"Beebeeoii"},"content":"        return dateFormat;","lastModifiedDate":"2023-03-15"},{"lineNumber":251,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":252,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":253,"author":{"gitId":"Beebeeoii"},"content":"    private static String getTimeFormat(String time) throws InvalidDateTimeFormatException {","lastModifiedDate":"2023-03-15"},{"lineNumber":254,"author":{"gitId":"Beebeeoii"},"content":"        String timeFormat \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":255,"author":{"gitId":"Beebeeoii"},"content":"        for (String separator : TIME_SEPARATORS) {","lastModifiedDate":"2023-03-15"},{"lineNumber":256,"author":{"gitId":"Beebeeoii"},"content":"            String hhmmPattern \u003d patternForSeparator(HHMM_TEMPLATE, separator);","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"Beebeeoii"},"content":"            String hhmmampmPattern \u003d patternForSeparator(HHMM_AM_PM_TEMPLATE, separator);","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":259,"author":{"gitId":"Beebeeoii"},"content":"            if (parseTime(time, hhmmPattern) !\u003d LocalTime.MAX) {","lastModifiedDate":"2023-03-20"},{"lineNumber":260,"author":{"gitId":"Beebeeoii"},"content":"                timeFormat \u003d hhmmPattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":261,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":262,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":263,"author":{"gitId":"Beebeeoii"},"content":"            if (parseTime(time, hhmmampmPattern) !\u003d LocalTime.MAX) {","lastModifiedDate":"2023-03-20"},{"lineNumber":264,"author":{"gitId":"Beebeeoii"},"content":"                timeFormat \u003d hhmmampmPattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":265,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":266,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":267,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":268,"author":{"gitId":"Beebeeoii"},"content":"        if (timeFormat.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":269,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2023-03-15"},{"lineNumber":270,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":271,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":272,"author":{"gitId":"Beebeeoii"},"content":"        return timeFormat;","lastModifiedDate":"2023-03-15"},{"lineNumber":273,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":274,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":275,"author":{"gitId":"Beebeeoii"},"content":"    private static String patternForSeparator(String template, String sep) {","lastModifiedDate":"2023-03-15"},{"lineNumber":276,"author":{"gitId":"Beebeeoii"},"content":"        return template.replace(SEPARATOR_PLACEHOLDER, sep);","lastModifiedDate":"2023-03-15"},{"lineNumber":277,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":278,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":279,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":280,"author":{"gitId":"Beebeeoii"},"content":"     * Returns {@code LocalDateTime} representation of the DateTime stored.","lastModifiedDate":"2023-03-20"},{"lineNumber":281,"author":{"gitId":"Beebeeoii"},"content":"     * If time is not specified, it will default to 00:00 (12AM).","lastModifiedDate":"2023-03-20"},{"lineNumber":282,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":283,"author":{"gitId":"Beebeeoii"},"content":"     * @return {@code LocalDateTime} representation of the DateTime stored.","lastModifiedDate":"2023-03-20"},{"lineNumber":284,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":285,"author":{"gitId":"Beebeeoii"},"content":"    public LocalDateTime get() {","lastModifiedDate":"2023-03-20"},{"lineNumber":286,"author":{"gitId":"chuakid"},"content":"        return LocalDateTime.of(meetingDate, meetingTime.orElse(LocalTime.of(0, 0)));","lastModifiedDate":"2023-03-24"},{"lineNumber":287,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":288,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":289,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":290,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":291,"author":{"gitId":"chuakid"},"content":"        if (meetingDuration !\u003d null \u0026\u0026 !meetingDuration.isZero()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"chuakid"},"content":"            String start \u003d meetingTime.orElse(LocalTime.of(0, 0))","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"chuakid"},"content":"                    .format(DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"chuakid"},"content":"            String end \u003d LocalDateTime.of(meetingDate, meetingTime.orElse(LocalTime.of(0, 0))).plus(meetingDuration)","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"chuakid"},"content":"                    .format(DateTimeFormatter.ofPattern(DATE_FORMAT + \" \" + TIME_FORMAT));","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"Beebeeoii"},"content":"            return meetingDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT))","lastModifiedDate":"2023-03-15"},{"lineNumber":297,"author":{"gitId":"Beebeeoii"},"content":"                    + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":298,"author":{"gitId":"chuakid"},"content":"                    + start","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"Beebeeoii"},"content":"                    + \" to \"","lastModifiedDate":"2023-03-08"},{"lineNumber":300,"author":{"gitId":"Beebeeoii"},"content":"                    + end;","lastModifiedDate":"2023-03-08"},{"lineNumber":301,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":302,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":303,"author":{"gitId":"Beebeeoii"},"content":"        return getDateTime();","lastModifiedDate":"2023-03-15"},{"lineNumber":304,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":305,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":306,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":307,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":308,"author":{"gitId":"Beebeeoii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":309,"author":{"gitId":"Beebeeoii"},"content":"                || (other instanceof DateTime // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":310,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingDate.equals(((DateTime) other).meetingDate) // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":311,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingTime.equals(((DateTime) other).meetingTime) // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":312,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingDuration.equals(((DateTime) other).meetingDuration)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":313,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":314,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":315,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":316,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":317,"author":{"gitId":"Beebeeoii"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-07"},{"lineNumber":318,"author":{"gitId":"Beebeeoii"},"content":"        return Objects.hash(meetingDate, meetingTime, meetingDuration);","lastModifiedDate":"2023-03-15"},{"lineNumber":319,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":320,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"chuakid"},"content":"    public int compareTo(DateTime o) {","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"chuakid"},"content":"        if (meetingDate.isEqual(o.meetingDate)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":324,"author":{"gitId":"chuakid"},"content":"            return this.meetingTime","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"chuakid"},"content":"                    .orElse(LocalTime.of(0, 0))","lastModifiedDate":"2023-03-24"},{"lineNumber":326,"author":{"gitId":"chuakid"},"content":"                    .compareTo(o.meetingTime","lastModifiedDate":"2023-03-24"},{"lineNumber":327,"author":{"gitId":"chuakid"},"content":"                            .orElse(LocalTime.of(0, 0)));","lastModifiedDate":"2023-03-24"},{"lineNumber":328,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":329,"author":{"gitId":"chuakid"},"content":"        return meetingDate.compareTo(o.meetingDate);","lastModifiedDate":"2023-03-24"},{"lineNumber":330,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Beebeeoii":294,"chuakid":37}},{"path":"src/main/java/seedu/address/model/meeting/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":" * Represents a Meeting\u0027s description in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class Description {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{ASCII} ]*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private final String meetingDescription;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public Description(String description) {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        meetingDescription \u003d description;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        return meetingDescription;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingDescription.equals(((Description) other).meetingDescription)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        return meetingDescription.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Beebeeoii":56}},{"path":"src/main/java/seedu/address/model/meeting/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.net.URL;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" * Represents a Meeting\u0027s location in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public class Location {","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{ASCII} ]*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    private final String meetingLocation;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    private final boolean isVirtualLocation;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code Location}.","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * @param location A valid description.","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public Location(String location) {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        meetingLocation \u003d location;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        isVirtualLocation \u003d isValidVirtualLocation(location);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    public boolean isVirtualLocation() {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        return isVirtualLocation;","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"     * @param test A string to test for validity.","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"     * @return True if string is valid, false otherwise.","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid URL.","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"     * @param url A string to test if it is a URL.","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"     * @return True if string is a valid URL, false otherwise.","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidVirtualLocation(String url) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        if (!isValidLocation(url)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"            new URL(url).toURI();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        } catch (MalformedURLException | URISyntaxException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        return meetingLocation;","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingLocation.equals(((Location) other).meetingLocation)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        return meetingLocation.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Beebeeoii":89}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":" * Represents a Meeting in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"public class Meeting {","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    // Identity fields","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private final Title title;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private final Set\u003cPerson\u003e attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    // Data fields","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    private final Location location;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    private final Description description;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private boolean hasPassed \u003d false;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public Meeting(Title title, DateTime dateTime, Set\u003cPerson\u003e attendees, Location location, Description description) {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        requireAllNonNull(title, dateTime, attendees, location, description);","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        this.attendees.addAll(attendees);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    public Title getTitle() {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        return title;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    public DateTime getDateTime() {","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        return dateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an immutable attendee set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    public Set\u003cPerson\u003e getAttendees() {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        return Collections.unmodifiableSet(attendees);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        return location;","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        return description;","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    public boolean getHasPassed() {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        return hasPassed;","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if both meetings have the same title, dateTime and attendees.","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     * This defines a weaker notion of equality between two meetings.","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    public boolean isSameMeeting(Meeting otherMeeting) {","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        if (otherMeeting \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        return otherMeeting !\u003d null","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getTitle().equals(getTitle())","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getDateTime().equals(getDateTime())","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getAttendees().equals(getAttendees());","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if {@code Meeting} has passed based on the current DateTime.","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"    public boolean hasPassed() {","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        this.hasPassed \u003d LocalDateTime.now().isAfter(dateTime.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        return this.hasPassed;","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if both meetings have the same identity and data fields.","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"     * This defines a stronger notion of equality between two meetings.","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        return otherMeeting.getTitle().equals(getTitle())","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getDateTime().equals(getDateTime())","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getAttendees().equals(getAttendees())","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getLocation().equals(getLocation())","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getDescription().equals(getDescription());","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"chuakid"},"content":"     * Checks whether meeting is between two datetimes","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"chuakid"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"chuakid"},"content":"     * @return true if meeting is between two datetimes, else false","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"chuakid"},"content":"    public boolean isBetween(DateTime start, DateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"chuakid"},"content":"        if (end \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"chuakid"},"content":"            return this.dateTime.compareTo(start) \u003e\u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"chuakid"},"content":"        if (start \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"chuakid"},"content":"            return this.dateTime.compareTo(end) \u003c\u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"chuakid"},"content":"        return this.dateTime.compareTo(start) \u003e\u003d 0 \u0026\u0026 this.dateTime.compareTo(end) \u003c\u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"        return Objects.hash(title, dateTime, attendees, location, description);","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"        return getTitle()","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"                + \"; Date/Time: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"                + getDateTime()","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"                + \"; Attendees: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"                + getAttendees()","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"                + \"; Location: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"                + getLocation()","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"                + \"; Description: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"                + getDescription();","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Beebeeoii":132,"chuakid":15}},{"path":"src/main/java/seedu/address/model/meeting/MeetingContainsNamesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":" * Tests that a {@code Meeting}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"public class MeetingContainsNamesPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public MeetingContainsNamesPredicate(List\u003cString\u003e names) {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    public MeetingContainsNamesPredicate() {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"        this.names \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"     * @param meeting the input argument to be tested","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"     * @return True if the meeting contains any person whose name contain any of the keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"        if (this.names \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        return names.stream().anyMatch(name -\u003e meeting.getAttendees().stream().anyMatch(person -\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"            StringUtil.containsWordIgnoreCase(person.getName().fullName, name)));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        } // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        if (!(other instanceof MeetingContainsNamesPredicate)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"        } // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"        if (names \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"            return ((MeetingContainsNamesPredicate) other).names \u003d\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        return names.equals(((MeetingContainsNamesPredicate) other).names); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"    public List\u003cString\u003e getPersonNames() {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        return names;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"KS2499":52}},{"path":"src/main/java/seedu/address/model/meeting/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":" * Represents a Meeting\u0027s title in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class Title {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"            \"Titles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * The first character of the title must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private final String meetingTitle;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * @param title A valid title.","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public Title(String title) {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        meetingTitle \u003d title;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        return meetingTitle;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingTitle.equals(((Title) other).meetingTitle)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        return meetingTitle.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Beebeeoii":56}},{"path":"src/main/java/seedu/address/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" * A meeting is considered unique by comparing using {@code Meeting#isSameMeeting(Meeting)}. As such, adding and","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":" * updating of meetings uses Meeting#isSameMeeting(Meeting) for equality to ensure that the meeting being added or","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":" * updated is unique in terms of identity in the UniqueMeetingList. However, the removal of a meeting uses","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":" * Meeting#equals(Object) to ensure that the meeting with exactly the same fields is removed.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":" * @see Meeting#isSameMeeting(Meeting)","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if the list contains an equivalent meeting as the given argument.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMeeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     * The meeting must not already exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        if (!target.isSameMeeting(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings(UniqueMeetingList replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        if (!meetingsAreUnique(meetings)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"        return null;","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"                || (other instanceof UniqueMeetingList // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 internalList.equals(((UniqueMeetingList) other).internalList));","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if {@code meetings} contains only unique meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"                if (meetings.get(i).isSameMeeting(meetings.get(j))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"                    return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":138}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Signals that the operation will result in duplicate Meetings (Meetings are considered duplicates if they have the","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" * same identity).","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"        super(\"Operation would result in duplicate meetings\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":11}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/InvalidDateTimeFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Signals that the operation is unable to convert a dateTime from its","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" * string representation to a specified format.","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"public class InvalidDateTimeFormatException extends RuntimeException {","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Beebeeoii":8}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Signals that the operation is unable to find the specified meeting.","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"public class MeetingNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":7}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"     * A simpler way of getting a person by name from address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"     * @param name of the person to be found","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"     * @return the person with the given name if they are in the list, null otherwise","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"    public Person getPersonByName(Name name) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"                return person;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"        return null;","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KS2499":17,"-":136}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     * {@code Person} that are also attendees of meetings.","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    private static final Person ALEX \u003d new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            getTagSet(\"friends\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            ALEX,","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    public static Meeting[] getSampleMeetingss() {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        return new Meeting[] {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"            new Meeting(new Title(\"Lunch with Alex\"), new DateTime(\"03/03/2023 15:00\"), getAttendeeSet(ALEX),","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"                    new Location(\"The Deck\"), new Description(\"Catch-up\"))","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        };","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        for (Meeting sampleMeeting : getSampleMeetingss()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"            sampleAb.addMeeting(sampleMeeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an attendee set containing the list of Person given.","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public static Set\u003cPerson\u003e getAttendeeSet(Person... attendees) {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        return Arrays.stream(attendees)","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Beebeeoii":32,"-":57}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"public class JsonAdaptedMeeting {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meeting\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    private final String title;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private final String dateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    private final String location;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    private final String description;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    private final List\u003cJsonAdaptedPerson\u003e attendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given meeting details.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"title\") String title, @JsonProperty(\"dateTime\") String dateTime,","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                              @JsonProperty(\"attendees\") List\u003cJsonAdaptedPerson\u003e attendees,","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"                              @JsonProperty(\"location\") String location,","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"                              @JsonProperty(\"description\") String description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        if (attendees !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"            this.attendees.addAll(attendees);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        title \u003d source.getTitle().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        dateTime \u003d source.getDateTime().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        location \u003d source.getLocation().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        description \u003d source.getDescription().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        attendees.addAll(source.getAttendees().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"     * Converts this Jackson-friendly adapted meeting object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        final List\u003cPerson\u003e meetingAttendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        for (JsonAdaptedPerson attendee : attendees) {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"            meetingAttendees.add(attendee.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"                    DateTime.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        if (!DateTime.isValidDateTime(dateTime)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        final DateTime modelDateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        final Set\u003cPerson\u003e modelAttendees \u003d new HashSet\u003c\u003e(meetingAttendees);","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"        return new Meeting(modelTitle, modelDateTime, modelAttendees, modelLocation, modelDescription);","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":111}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"public class JsonAdaptedPerson {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chuakid":1,"-":108}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"Meetings list contains duplicate meeting(s).\";","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"                                       @JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"            if (addressBook.hasMeeting(meeting)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"            addressBook.addMeeting(meeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Beebeeoii":17,"-":58}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.command.CommandHistory;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.command.exceptions.OutOfBoundsCommandHistoryException;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    private final CommandInputSuggester commandInputSuggester;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public CommandBox(CommandExecutor commandExecutor, CommandInputSuggester commandInputSuggester) {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        this.commandInputSuggester \u003d commandInputSuggester;","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, new KeyPressedHandler());","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"     * Represents a function that can suggest inputs.","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"    public interface CommandInputSuggester {","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        /**","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"         * Suggest prefixes based on current text.","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"         *","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"         * @see seedu.address.logic.Logic#autocomplete(String)","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"         */","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"        AutocompleteResult suggest(String commandText);","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"     * Represents the handler for {@code KeyCode.UP} and {@code KeyCode.DOWN} key-presses.","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"    public class KeyPressedHandler implements EventHandler\u003cKeyEvent\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"        public void handle(KeyEvent event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"            KeyCode key \u003d event.getCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"            switch (key) {","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"            case UP:","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"                if (commandTextField.getText().equals(\"\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"                    CommandHistory.setLast();","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"                try {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.setStyle(\"-fx-display-caret: false;\");","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.setText(CommandHistory.prev());","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"                } catch (OutOfBoundsCommandHistoryException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"                    // Nothing to do","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"                } finally {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.end();","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.setStyle(\"-fx-display-caret: true;\");","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"            case DOWN:","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"                try {","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.setText(CommandHistory.next());","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"                } catch (OutOfBoundsCommandHistoryException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.setText(\"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"                } finally {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.end();","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"            case TAB:","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"                try {","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"                    AutocompleteResult suggestion \u003d commandInputSuggester.suggest(commandTextField.getText());","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"                    String currInput \u003d commandTextField.getText().trim();","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"                    if (suggestion.getPrefix().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"                        break;","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"                    }","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"                    String prefix \u003d suggestion.getPrefix().get().getPrefix();","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"                    if (!suggestion.isReplaceCurrent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"                        commandTextField.setText(currInput + \" \" + prefix);","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"                        break;","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"                    }","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"                    // Replaces current prefix","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"                    String[] currInputSplit \u003d currInput.split(\" \");","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"                    if (currInputSplit[currInputSplit.length - 1].endsWith(\"/\")) {","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"                        currInputSplit[currInputSplit.length - 1] \u003d prefix;","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"                        commandTextField.setText(String.join(\" \", currInputSplit));","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"                    } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"                        commandTextField.setText(currInput + \" \" + prefix);","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"                    }","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"                } finally {","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"                    event.consume();","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.end();","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"            default:","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Beebeeoii":91,"-":84}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getFilteredMeetingList());","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"chuakid"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, this::getAutocompleteSuggestion);","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":205,"author":{"gitId":"Beebeeoii"},"content":"    private AutocompleteResult getAutocompleteSuggestion(String userInput) {","lastModifiedDate":"2023-03-18"},{"lineNumber":206,"author":{"gitId":"Beebeeoii"},"content":"        return logic.autocomplete(userInput);","lastModifiedDate":"2023-03-18"},{"lineNumber":207,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Beebeeoii":6,"KS2499":1,"chuakid":6,"-":195}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":" * An UI component that displays information of a {@code Meeting}.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    public final Meeting meeting;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    private Label id;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    private Label title;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    private Label dateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    private Label attendees;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    private Label meetingLocation;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    private Label description;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"     * Creates a {@code MeetingCard} with the given {@code Meeting} and index to display.","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"        title.setText(meeting.getTitle().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"        dateTime.setText(meeting.getDateTime().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"        attendees.setText(","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"                \"Attendees: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"                        + meeting.getAttendees()","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                        .stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                        .map(person -\u003e person.getName().toString())","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                        .reduce((s, s2) -\u003e s + \",\" + s2)","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                        .get());","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"        meetingLocation.setText(\"Location: \" + meeting.getLocation().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"        description.setText(\"Description: \" + meeting.getDescription().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        formatDateTimePast();","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"     * Updates the font colour of the dateTime depending on whether the meeting is over.","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"     * If the meeting has passed based on the current system date/time, the font will be RED.","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"     * Else it will be WHITE by default.","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public void formatDateTimePast() {","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        if (meeting.hasPassed()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"            dateTime.getStyleClass().add(ERROR_STYLE_CLASS);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"            dateTime.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"chuakid"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"chuakid"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"chuakid"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"chuakid"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"chuakid"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"chuakid"},"content":"        if (!(other instanceof MeetingCard)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"chuakid"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"chuakid"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"chuakid"},"content":"        MeetingCard card \u003d (MeetingCard) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"        return meeting.equals(card.meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Beebeeoii":15,"chuakid":71}},{"path":"src/main/java/seedu/address/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":" * Panel containing the list of meetings.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"     * Creates a {@code MeetingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    public MeetingListPanel(ObservableList\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meeting} using a {@code MeetingCard}.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"    class MeetingListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"                setText(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chuakid":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/app_icon.png\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"            primaryStage.setMinWidth(primaryStage.getWidth());","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"            primaryStage.setMinHeight(primaryStage.getHeight());","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Beebeeoii":1,"chuakid":2,"-":87}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"         title\u003d\"QuickContacts\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        \u003cImage url\u003d\"@/images/app_icon.png\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                               minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                    \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                          VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"              \u003cVBox fx:id\u003d\"meetingListPanel\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"                    VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"                  \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"                \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Beebeeoii":2,"chuakid":14,"-":53}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"\u003cHBox id\u003d\"meetingCardPane\" fx:id\u003d\"meetingCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"                \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"            \u003cLabel fx:id\u003d\"attendees\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"            \u003cLabel fx:id\u003d\"meetingLocation\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chuakid":35}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"    \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chuakid":7}},{"path":"src/test/java/seedu/address/commons/core/CronTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTimeoutPreemptively;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"public class CronTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    public void singleton_test() {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(Cron.getInstance().hashCode(), Cron.getInstance().hashCode());","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public void size() {","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        int size \u003d 5;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        int delay \u003d 5;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        TimerTask t \u003d new TimerTask() {","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"            @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"            public void run() {","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        };","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertTimeoutPreemptively(Duration.ofSeconds(delay - 1), () -\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"            Cron cron \u003d Cron.getInstance();","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            for (int i \u003d 0; i \u003c size; ++i) {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"                cron.addTask(t, 1, delay);","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            assertEquals(cron.size(), size);","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public void addTask_print() {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        String p \u003d \"Task 1\";","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        int frequency \u003d 5;","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        TimerTask t \u003d new TimerTask() {","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"            @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"            public void run() {","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"                System.out.println(p);","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        };","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        // Caution: This is a time-sensitive test.","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        assertTimeoutPreemptively(Duration.ofSeconds(frequency - 1), () -\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"            Cron cron \u003d Cron.getInstance();","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"            cron.addTask(t, frequency);","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"            TimeUnit.SECONDS.sleep(frequency - 2);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"            assertEquals(p, outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public void isRunning() {","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        Cron cron \u003d Cron.getInstance();","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(cron.isRunning());","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        cron.stop();","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(cron.isRunning());","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"    public void stop() {","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        Cron cron \u003d Cron.getInstance();","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        cron.stop();","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(cron.isRunning());","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        stop();","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Beebeeoii":90}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"        assertNotNull(AppUtil.getImage(\"/images/app_icon.png\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Beebeeoii":1,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Beebeeoii":1,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"chuakid"},"content":"        public List\u003cPerson\u003e getPersonsByIndexes(List\u003cIndex\u003e indexList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"chuakid"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"chuakid"},"content":"        public List\u003cMeeting\u003e getMeetingsByIndexesAndStartEnd(List\u003cIndex\u003e indexList, DateTime start, DateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"chuakid"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":172,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"KS2499"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"KS2499"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"KS2499"},"content":"        public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":193,"author":{"gitId":"chuakid"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingsList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"chuakid"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"KS2499"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":202,"author":{"gitId":"thedesalizes"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":203,"author":{"gitId":"thedesalizes"},"content":"        public void removeMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"thedesalizes"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"thedesalizes"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"thedesalizes":5,"KS2499":25,"chuakid":21,"jeremykhoo-NUS":9,"-":190}},{"path":"src/test/java/seedu/address/logic/commands/AddMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"public class AddMeetingCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    public void constructor_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMeetingCommand(null, null, null, null, null));","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"    public void execute_meetingAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"        ModelStubWithPersons modelStub \u003d new ModelStubWithPersons(BENSON, CARL);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        Meeting validMeeting \u003d new MeetingBuilder(MEETING_B).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"        CommandResult commandResult \u003d new AddMeetingCommand(MEETING_B.getTitle(), MEETING_B.getDateTime(),","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                new HashSet\u003c\u003e(Arrays.asList(BENSON.getName(), CARL.getName())), MEETING_B.getLocation(),","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                MEETING_B.getDescription()).execute(modelStub);","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        assertEquals(String.format(AddMeetingCommand.MESSAGE_SUCCESS, validMeeting), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"    public void execute_duplicateMeeting_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(MEETING_A.getTitle(), MEETING_A.getDateTime(),","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"                new HashSet\u003c\u003e(Collections.singletonList(ALICE.getName())), MEETING_A.getLocation(),","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"                MEETING_A.getDescription());","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        ModelStub modelStub \u003d new ModelStubWithMeeting(ALICE, CARL, MEETING_A);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"        assertThrows(CommandException.class, AddMeetingCommand.MESSAGE_DUPLICATE_MEETING, () -\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"            addMeetingCommand.execute(modelStub));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e meetingPredicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"KS2499"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"chuakid"},"content":"        public List\u003cPerson\u003e getPersonsByIndexes(List\u003cIndex\u003e indexList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"chuakid"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"chuakid"},"content":"        public List\u003cMeeting\u003e getMeetingsByIndexesAndStartEnd(List\u003cIndex\u003e indexList, DateTime start, DateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"chuakid"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"KS2499"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"KS2499"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"KS2499"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"KS2499"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"KS2499"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"KS2499"},"content":"        public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"KS2499"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingsList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"KS2499"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"thedesalizes"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"thedesalizes"},"content":"        public void removeMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"thedesalizes"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"thedesalizes"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"KS2499"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"KS2499"},"content":"    private static class ModelStubWithPersons extends AddMeetingCommandTest.ModelStub {","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"KS2499"},"content":"        private final ArrayList\u003cMeeting\u003e meetingsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"KS2499"},"content":"        private final Person person1;","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"KS2499"},"content":"        private final Person person2;","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"KS2499"},"content":"        ModelStubWithPersons(Person person1, Person person2) {","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"KS2499"},"content":"            this.person1 \u003d person1;","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"KS2499"},"content":"            this.person2 \u003d person2;","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"KS2499"},"content":"        public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"KS2499"},"content":"            return person1.getName().equals(personName) ? person1 : person2;","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"KS2499"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"KS2499"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"KS2499"},"content":"            meetingsAdded.add(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"KS2499"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"KS2499"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"KS2499"},"content":"            return meetingsAdded.stream().anyMatch(meeting::isSameMeeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"KS2499"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"KS2499"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"KS2499"},"content":"            return this.person1.isSamePerson(person) || this.person2.isSamePerson(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":228,"author":{"gitId":"KS2499"},"content":"    private static class ModelStubWithMeeting extends AddMeetingCommandTest.ModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":229,"author":{"gitId":"KS2499"},"content":"        private final ArrayList\u003cMeeting\u003e meetingsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"KS2499"},"content":"        private final Person person1;","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"KS2499"},"content":"        private final Person person2;","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"KS2499"},"content":"        ModelStubWithMeeting(Person person1, Person person2, Meeting meeting) {","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"KS2499"},"content":"            this.person1 \u003d person1;","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"KS2499"},"content":"            this.person2 \u003d person2;","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"KS2499"},"content":"            meetingsAdded.add(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"KS2499"},"content":"        public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"KS2499"},"content":"            return person1.getName().equals(personName) ? person1 : person2;","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"KS2499"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"KS2499"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"KS2499"},"content":"            meetingsAdded.add(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"KS2499"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"KS2499"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":253,"author":{"gitId":"KS2499"},"content":"            return meetingsAdded.stream().anyMatch(meeting::isSameMeeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"KS2499"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":258,"author":{"gitId":"KS2499"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"KS2499"},"content":"            return this.person1.isSamePerson(person) || this.person2.isSamePerson(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":260,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":262,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"thedesalizes":4,"KS2499":229,"chuakid":18,"jeremykhoo-NUS":11}},{"path":"src/test/java/seedu/address/logic/commands/AutocompleteResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"public class AutocompleteResultTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public void getPrefix() {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"        Prefix prefix \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new AutocompleteResult(prefix, false).getPrefix(), Optional.of(prefix));","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new AutocompleteResult(null, false).getPrefix(), Optional.empty());","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void isReplaceCurrent() {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(new AutocompleteResult(null, true).isReplaceCurrent());","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(new AutocompleteResult(new Prefix(\"m/\"), false).isReplaceCurrent());","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Beebeeoii":26}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Beebeeoii":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"    public static final String NAME_DESC_ALICE \u003d \" \" + PREFIX_NAME + VALID_NAME_ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_TITLE \u003d \"Welfare call\";","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_DATETIME \u003d \"01/01/2021 11:11\";","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_LOCATION \u003d \"In school\";","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_DESCRIPTION \u003d \"Finish up school project (computer science)\";","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_TITLE_2 \u003d \"Project discussion\";","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_DATETIME_2 \u003d \"02/01/2023 12:00\";","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_LOCATION_2 \u003d \"Central Library\";","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_DESCRIPTION_2 \u003d \"URGENT\";","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_TITLE_DESC \u003d \" \" + PREFIX_MEETING_TITLE + VALID_MEETING_TITLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_PERSON_ALICE_DESC \u003d \" \" + PREFIX_PERSON + \"Alice Pauline\";","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_PERSON_BENSON_DESC \u003d \" \" + PREFIX_PERSON + \"Benson Meier\";","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_DATETIME_DESC \u003d \" \" + PREFIX_DATETIME + VALID_MEETING_DATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION + VALID_MEETING_LOCATION;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION + VALID_MEETING_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    public static final EditMeetingsCommand.EditMeetingDescriptor DESC_MEETING_A;","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"    public static final EditMeetingsCommand.EditMeetingDescriptor DESC_MEETING_B;","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        DESC_MEETING_A \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_MEETING_TITLE)","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"            .withDateTime(VALID_MEETING_DATETIME).withAttendees().withLocation(VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"            .withDescription(VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        DESC_MEETING_B \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_MEETING_TITLE_2)","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"                .withDateTime(VALID_MEETING_DATETIME_2).withAttendees().withLocation(VALID_MEETING_LOCATION_2)","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(VALID_MEETING_DESCRIPTION_2).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"KS2499"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Beebeeoii":18,"KS2499":17,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Beebeeoii":1,"-":108}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Beebeeoii":1,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/EditMeetingsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_MEETING_A;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_MEETING_B;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DESCRIPTION;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_LOCATION;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TITLE;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.EditMeetingsCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditMeetingsCommand.","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"public class EditMeetingsCommandTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(editedMeeting).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand editMeetingsCommand \u003d new EditMeetingsCommand(INDEX_FIRST_MEETING, descriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(EditMeetingsCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        expectedModel.setMeeting(model.getMeetingsList().get(0), editedMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        assertCommandSuccess(editMeetingsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        Index indexLastMeeting \u003d Index.fromOneBased(model.getMeetingsList().size());","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        Meeting lastMeeting \u003d model.getMeetingsList().get(indexLastMeeting.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        MeetingBuilder meetingInList \u003d new MeetingBuilder(lastMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeeting \u003d meetingInList.withTitle(VALID_MEETING_TITLE).withDescription(VALID_MEETING_DESCRIPTION)","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"                .withLocation(VALID_MEETING_LOCATION).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_MEETING_TITLE)","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(VALID_MEETING_DESCRIPTION).withLocation(VALID_MEETING_LOCATION).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand editedCommand \u003d new EditMeetingsCommand(indexLastMeeting, descriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(EditMeetingsCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        expectedModel.setMeeting(lastMeeting, editedMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        assertCommandSuccess(editedCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand editMeetingCommand \u003d new EditMeetingsCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"                new EditMeetingDescriptor());","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeeting \u003d model.getMeetingsList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(EditMeetingsCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_duplicateMeetingUnfilteredList_failure() {","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        Meeting firstMeeting \u003d model.getMeetingsList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(firstMeeting).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand editMeetingsCommand \u003d new EditMeetingsCommand(INDEX_SECOND_MEETING, descriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        assertCommandFailure(editMeetingsCommand, model, EditMeetingsCommand.MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_invalidMeetingIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getMeetingsList().size() + 1);","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_MEETING_TITLE).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand editMeetingsCommand \u003d new EditMeetingsCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        assertCommandFailure(editMeetingsCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"    public void equals() {","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"        final EditMeetingsCommand standardCommand \u003d new EditMeetingsCommand(INDEX_FIRST_MEETING, DESC_MEETING_A);","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor copyDescriptor \u003d new EditMeetingDescriptor(DESC_MEETING_A);","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand commandWithSameValues \u003d new EditMeetingsCommand(INDEX_FIRST_MEETING, copyDescriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(standardCommand, new EditMeetingsCommand(INDEX_SECOND_MEETING, DESC_MEETING_A));","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(standardCommand, new EditMeetingsCommand(INDEX_FIRST_MEETING, DESC_MEETING_B));","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Beebeeoii":126,"KS2499":1}},{"path":"src/test/java/seedu/address/logic/commands/ExportMeetingsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBookMeetingsOnly;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"import seedu.address.storage.JsonAdaptedMeeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"public class ExportMeetingsCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    public void index_inRange_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookMeetingsOnly(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{INDEX_FIRST_MEETING, INDEX_SECOND_MEETING});","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        ExportMeetingsCommand exportMeetingsCommand \u003d new ExportMeetingsCommand(indexList, null, null);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"        String expectedMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"            expectedMessage \u003d JsonUtil.toJsonString(new JsonAdaptedMeeting[]{","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(INDEX_FIRST_MEETING.getZeroBased())),","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(INDEX_SECOND_MEETING.getZeroBased()))","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"            });","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"        assertCommandSuccess(exportMeetingsCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"    public void index_outOfRange_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookMeetingsOnly(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{Index.fromZeroBased(meetings.size())});","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"        ExportMeetingsCommand exportMeetingsCommand \u003d new ExportMeetingsCommand(indexList, null, null);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"        String expectedMessage \u003d ExportMeetingsCommand.INDEX_NOT_FOUND;","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"        assertCommandFailure(exportMeetingsCommand, model, expectedMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"    public void date_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"01/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"02/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"03/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"04/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"chuakid"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{});","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"chuakid"},"content":"        ExportMeetingsCommand exportMeetingsCommand \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"chuakid"},"content":"                new ExportMeetingsCommand(indexList, new DateTime(\"01/01/1970\"), new DateTime(\"03/01/1970\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"chuakid"},"content":"        String expectedMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"chuakid"},"content":"            expectedMessage \u003d JsonUtil.toJsonString(new JsonAdaptedMeeting[]{","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(0)),","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(1)),","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(2))","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"chuakid"},"content":"            });","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"        assertCommandSuccess(exportMeetingsCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"chuakid"},"content":"    public void dateWithIndex_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"01/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"02/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"03/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"04/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"chuakid"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{Index.fromZeroBased(0)});","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"chuakid"},"content":"        ExportMeetingsCommand exportMeetingsCommand \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"chuakid"},"content":"                new ExportMeetingsCommand(indexList, new DateTime(\"02/01/1970\"), new DateTime(\"04/01/1970\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"chuakid"},"content":"        String expectedMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"chuakid"},"content":"            expectedMessage \u003d JsonUtil.toJsonString(new JsonAdaptedMeeting[]{","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(0)),","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(1)),","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(2)),","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(3))","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"chuakid"},"content":"            });","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"chuakid"},"content":"        assertCommandSuccess(exportMeetingsCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"chuakid":114}},{"path":"src/test/java/seedu/address/logic/commands/ExportPersonsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"import seedu.address.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"public class ExportPersonsCommandTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    public void index_inRange_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{INDEX_FIRST_PERSON, INDEX_SECOND_PERSON});","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"        ExportPersonsCommand exportPersonsCommand \u003d new ExportPersonsCommand(indexList);","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        ObservableList\u003cPerson\u003e persons \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        String expectedMessage;","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"            expectedMessage \u003d JsonUtil.toJsonString(new JsonAdaptedPerson[]{","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedPerson(persons.get(INDEX_FIRST_PERSON.getZeroBased())),","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedPerson(persons.get(INDEX_SECOND_PERSON.getZeroBased()))","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"            });","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"        assertCommandSuccess(exportPersonsCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    public void index_outOfRange_failure() {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"        ObservableList\u003cPerson\u003e persons \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{Index.fromZeroBased(persons.size())});","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"        ExportPersonsCommand exportPersonsCommand \u003d new ExportPersonsCommand(indexList);","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"        String expectedMessage \u003d ExportPersonsCommand.INDEX_NOT_FOUND;","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"        assertCommandFailure(exportPersonsCommand, model, expectedMessage);","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"chuakid":57}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Beebeeoii":1,"-":82}},{"path":"src/test/java/seedu/address/logic/commands/FindMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MEETINGS_ALL_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.MeetingContainsNamesPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"public class FindMeetingCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"            new MeetingContainsNamesPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"            new MeetingContainsNamesPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand findFirstCommand \u003d new FindMeetingCommand(firstPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand findSecondCommand \u003d new FindMeetingCommand(secondPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand findFirstCommandCopy \u003d new FindMeetingCommand(firstPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(1, findFirstCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(null, findFirstCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"    public void execute_zeroKeywords_allMeetingsListed() {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate predicate \u003d preparePredicate(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        assertCommandSuccess(command, model, MESSAGE_MEETINGS_ALL_LISTED_OVERVIEW, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"        assertEquals(3, model.getFilteredMeetingList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"    public void execute_multipleKeywords_multipleMeetingsFound() {","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        String inputString \u003d \"Alice Carl\";","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, \"Alice, Carl\");","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate predicate \u003d preparePredicate(inputString);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"        assertEquals(3, model.getFilteredMeetingList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"    private MeetingContainsNamesPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"            return new MeetingContainsNamesPredicate();","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"        return new MeetingContainsNamesPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"KS2499":83}},{"path":"src/test/java/seedu/address/logic/commands/ImportMeetingsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"import seedu.address.storage.JsonAdaptedMeeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"import seedu.address.testutil.TypicalAddressBooks;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"import seedu.address.testutil.TypicalMeetings;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"public class ImportMeetingsCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ImportExportMeetingsTest\");","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    private static final Path VALID_MEETINGS_FILE \u003d TEST_DATA_FOLDER.resolve(\"validMeetings.json\");","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    public void success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(VALID_MEETINGS_FILE);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"            String line;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"                stringBuilder.append(line);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"        ImportMeetingsCommand command \u003d new ImportMeetingsCommand(stringBuilder.toString(), false);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"        Model expectedModel \u003d new ModelManager(TypicalAddressBooks.getTypicalAddressBookMeetingsOnly(),","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"        assertCommandSuccess(command, model, ImportMeetingsCommand.SUCCESS, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"    public void duplicateForced_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(TypicalAddressBooks.getTypicalAddressBookMeetingsOnly(),","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"        JsonAdaptedMeeting firstMeeting \u003d new JsonAdaptedMeeting(TypicalMeetings.getTypicalMeetings().get(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"        JsonAdaptedMeeting secondMeeting \u003d new JsonAdaptedMeeting(TypicalMeetings.getTypicalMeetings().get(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"        String json;","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"            json \u003d JsonUtil.toJsonString(new JsonAdaptedMeeting[]{firstMeeting, secondMeeting});","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"        model.removeMeeting(TypicalMeetings.getTypicalMeetings().get(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"        ImportMeetingsCommand command \u003d new ImportMeetingsCommand(json, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"        Model expectedModel \u003d new ModelManager(TypicalAddressBooks.getTypicalAddressBookMeetingsOnly(),","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"        expectedModel.removeMeeting(TypicalMeetings.getTypicalMeetings().get(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"        expectedModel.addMeeting(TypicalMeetings.getTypicalMeetings().get(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"        assertCommandSuccess(command, model, ImportMeetingsCommand.SUCCESS, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"chuakid"},"content":"    public void duplicate_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(TypicalAddressBooks.getTypicalAddressBookMeetingsOnly(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"chuakid"},"content":"        JsonAdaptedMeeting firstMeeting \u003d new JsonAdaptedMeeting(TypicalMeetings.getTypicalMeetings().get(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"chuakid"},"content":"        String json;","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"chuakid"},"content":"            json \u003d JsonUtil.toJsonString(new JsonAdaptedMeeting[]{firstMeeting});","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"chuakid"},"content":"        ImportMeetingsCommand command \u003d new ImportMeetingsCommand(json, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"chuakid"},"content":"        assertCommandFailure(command, model, ImportMeetingsCommand.DUPLICATE_MEETING);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"    public void malformedJson_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"chuakid"},"content":"        String json \u003d \"abc\";","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"chuakid"},"content":"        ImportMeetingsCommand command \u003d new ImportMeetingsCommand(json, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"        assertCommandFailure(command, model, ImportMeetingsCommand.MALFORMED_JSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"chuakid":93}},{"path":"src/test/java/seedu/address/logic/commands/ImportPersonsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"import seedu.address.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"import seedu.address.testutil.TypicalAddressBooks;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"public class ImportPersonsCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ImportExportPersonsTest\");","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    private static final Path VALID_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"validPersons.json\");","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    public void success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(VALID_PERSONS_FILE);","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"            String line;","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"                stringBuilder.append(line);","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"        ImportPersonsCommand command \u003d new ImportPersonsCommand(stringBuilder.toString(), false);","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"        Model expectedModel \u003d new ModelManager(TypicalAddressBooks.getTypicalAddressBookPersonsOnly(), new UserPrefs());","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"        assertCommandSuccess(command, model, ImportPersonsCommand.SUCCESS, expectedModel);","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"    public void duplicateForced_success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(TypicalAddressBooks.getTypicalAddressBookPersonsOnly(),","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"        JsonAdaptedPerson firstPerson \u003d new JsonAdaptedPerson(TypicalPersons.getTypicalPersons().get(0));","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"        JsonAdaptedPerson secondPerson \u003d new JsonAdaptedPerson(TypicalPersons.getTypicalPersons().get(1));","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"        String json;","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"            json \u003d JsonUtil.toJsonString(new JsonAdaptedPerson[]{firstPerson, secondPerson});","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"        model.deletePerson(TypicalPersons.getTypicalPersons().get(1));","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"        ImportPersonsCommand command \u003d new ImportPersonsCommand(json, true);","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"        Model expectedModel \u003d new ModelManager(TypicalAddressBooks.getTypicalAddressBookPersonsOnly(), new UserPrefs());","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"        expectedModel.deletePerson(TypicalPersons.getTypicalPersons().get(1));","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"        expectedModel.addPerson(TypicalPersons.getTypicalPersons().get(1));","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"        assertCommandSuccess(command, model, ImportPersonsCommand.SUCCESS, expectedModel);","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"chuakid"},"content":"    public void duplicate_failure() {","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(TypicalAddressBooks.getTypicalAddressBookPersonsOnly(), new UserPrefs());","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"chuakid"},"content":"        JsonAdaptedPerson firstPerson \u003d new JsonAdaptedPerson(TypicalPersons.getTypicalPersons().get(0));","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"chuakid"},"content":"        String json;","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"chuakid"},"content":"            json \u003d JsonUtil.toJsonString(new JsonAdaptedPerson[]{firstPerson});","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"chuakid"},"content":"        ImportPersonsCommand command \u003d new ImportPersonsCommand(json, false);","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"chuakid"},"content":"        assertCommandFailure(command, model, ImportPersonsCommand.DUPLICATE_PERSON);","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"chuakid"},"content":"    public void malformedJson_failure() {","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"        String json \u003d \"abc\";","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"        ImportPersonsCommand command \u003d new ImportPersonsCommand(json, false);","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"chuakid"},"content":"        assertCommandFailure(command, model, ImportPersonsCommand.MALFORMED_JSON);","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"chuakid":91}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Beebeeoii":1,"-":38}},{"path":"src/test/java/seedu/address/logic/commands/ViewMeetingsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ViewMeetingsCommand.","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"public class ViewMeetingsCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    private Model model;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"        String expected \u003d \"Dinner with Alice\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"                + \"Description: Weekly catchup\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"                + \"At: 01/02/2023 19:00\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"                + \"Attendees: [Alice Pauline; Phone: 94351253; Email: alice@example.com; Address: 123, Jurong West Ave \"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"                + \"6, #08-111; Tags: [friends]]\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"                + \"Location: NUS\\n\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"                + \"\"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                + \"Study session with Benson and \"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"                + \"Carl\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"                + \"Description: Study for finals\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"                + \"At: 02/03/2023 15:00\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"                + \"Attendees: [Carl Kurz; \"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"                + \"Phone: 95352563; Email: heinz@example.com; Address: wall street, Benson Meier; Phone: 98765432; \"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"                + \"Email: johnd@example.com; Address: 311, Clementi Ave 2, #02-25; Tags: [owesMoney][friends]]\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"                + \"Location: Central Library\\n\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"                + \"Zoom meeting for agenda planning\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"                + \"Description: Plan for \"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"                + \"project work\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"                + \"At: 13/03/2023 12:45\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                + \"Attendees: [Alice Pauline; Phone: 94351253; Email: \"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                + \"alice@example.com; Address: 123, Jurong West Ave 6, #08-111; Tags: [friends]]\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                + \"Location: \"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                + \"https://us02web.zoom.us/j/99999999999?pwd\u003dABCdEfGHiJkYkRuYW5WTLmNopQrSt12\\n\\n\";","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"        assertCommandSuccess(new ViewMeetingsCommand(), model, expected, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chuakid":54}},{"path":"src/test/java/seedu/address/logic/parser/AddMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DATETIME_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESCRIPTION_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_LOCATION_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_PERSON_ALICE_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_PERSON_BENSON_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_TITLE_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_LOCATION;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TITLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"public class AddMeetingCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    private final AddMeetingCommandParser parser \u003d new AddMeetingCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        Meeting expectedMeetingWithOnePerson \u003d new MeetingBuilder().withTitle(VALID_MEETING_TITLE)","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"            .withDateTime(VALID_MEETING_DATETIME).withAttendees(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"            .withLocation(VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"            .withDescription(VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        Meeting expectedMeetingWithTwoPersons \u003d new MeetingBuilder().withTitle(VALID_MEETING_TITLE)","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"            .withDateTime(VALID_MEETING_DATETIME).withAttendees(TypicalPersons.ALICE, TypicalPersons.BENSON)","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"            .withLocation(VALID_MEETING_LOCATION).withDescription(VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + MEETING_TITLE_DESC + MEETING_DATETIME_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"                + MEETING_PERSON_ALICE_DESC + MEETING_LOCATION_DESC + MEETING_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"            new AddMeetingCommand(expectedMeetingWithOnePerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        // no whitespace preamble","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, MEETING_TITLE_DESC + MEETING_DATETIME_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"                + MEETING_PERSON_ALICE_DESC + MEETING_LOCATION_DESC + MEETING_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"            new AddMeetingCommand(expectedMeetingWithOnePerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        // whitespace only preamble and multiple persons","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + MEETING_TITLE_DESC + MEETING_DATETIME_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"                + MEETING_PERSON_ALICE_DESC + MEETING_PERSON_BENSON_DESC + MEETING_LOCATION_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"                + MEETING_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"            new AddMeetingCommand(expectedMeetingWithTwoPersons));","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        // no whitespace only preamble and multiple persons","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, MEETING_TITLE_DESC + MEETING_DATETIME_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"                + MEETING_PERSON_ALICE_DESC + MEETING_PERSON_BENSON_DESC + MEETING_LOCATION_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"                + MEETING_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"            new AddMeetingCommand(expectedMeetingWithTwoPersons));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"    public void parse_compulsoryFieldsMissing_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"        // missing title prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        assertParseFailure(parser, VALID_MEETING_TITLE + MEETING_DATETIME_DESC + MEETING_PERSON_ALICE_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"            + MEETING_LOCATION_DESC + MEETING_DESCRIPTION_DESC, expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"        // missing datetime prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"        assertParseFailure(parser, MEETING_TITLE_DESC + VALID_MEETING_DATETIME + MEETING_PERSON_ALICE_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"            + MEETING_LOCATION_DESC + MEETING_DESCRIPTION_DESC, expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"        // missing person prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"        assertParseFailure(parser, MEETING_TITLE_DESC + MEETING_DATETIME_DESC + NAME_DESC_AMY","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"            + MEETING_LOCATION_DESC + MEETING_DESCRIPTION_DESC, expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"        // missing location prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"        assertParseFailure(parser, MEETING_TITLE_DESC + MEETING_DATETIME_DESC + MEETING_PERSON_ALICE_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"            + VALID_MEETING_LOCATION + MEETING_DESCRIPTION_DESC, expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        // missing description prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"        assertParseFailure(parser, MEETING_TITLE_DESC + MEETING_DATETIME_DESC + MEETING_PERSON_ALICE_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"            + MEETING_LOCATION_DESC + VALID_MEETING_DESCRIPTION, expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"        assertParseFailure(parser, VALID_MEETING_TITLE + VALID_MEETING_DATETIME + NAME_DESC_ALICE","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"            + VALID_MEETING_LOCATION + VALID_MEETING_DESCRIPTION, expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"KS2499":91}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.EditMeetingsCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.EditMeetingsCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"import seedu.address.logic.commands.ViewMeetingsCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.MeetingContainsNamesPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"import seedu.address.testutil.MeetingUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"    public void parseCommand_findMeeting() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand command \u003d (FindMeetingCommand) parser.parseCommand(","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"            FindMeetingCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"        assertEquals(new FindMeetingCommand(new MeetingContainsNamesPredicate(keywords)), command);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"    public void parseCommand_viewMeetings() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"chuakid"},"content":"        assertTrue(parser.parseCommand(ViewMeetingsCommand.COMMAND_WORD) instanceof ViewMeetingsCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"chuakid"},"content":"        assertTrue(parser.parseCommand(ViewMeetingsCommand.COMMAND_WORD + \" 3\") instanceof ViewMeetingsCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"    public void parseCommand_addMeeting() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"        AddMeetingCommand command \u003d (AddMeetingCommand) parser.parseCommand(MeetingUtil.getAddMeetingCommand(meeting));","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new AddMeetingCommand(meeting), command);","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"    public void parseCommand_editMeeting() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meeting).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand command \u003d (EditMeetingsCommand) parser.parseCommand(","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"                EditMeetingsCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new EditMeetingsCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"    public void parseCommand_deleteMeeting() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"        DeleteMeetingCommand command \u003d (DeleteMeetingCommand) parser.parseCommand(","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"                DeleteMeetingCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DeleteMeetingCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Beebeeoii":29,"KS2499":16,"chuakid":5,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/FindMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.MeetingContainsNamesPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"public class FindMeetingCommandParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    private final FindMeetingCommandParser parser \u003d new FindMeetingCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    public void parse_noArg_returnsFindMeetingCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand expectedFindMeetingCommand \u003d new FindMeetingCommand(","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"            new MeetingContainsNamesPredicate());","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, \"\", expectedFindMeetingCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    public void parse_validArgs_returnsFindMeetingCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand expectedFindMeetingCommand \u003d new FindMeetingCommand(","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"                new MeetingContainsNamesPredicate(List.of(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindMeetingCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindMeetingCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"KS2499":43}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"    private static final String INVALID_TITLE \u003d \"ME3T!NG 1\";","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"    private static final String INVALID_DATETIME \u003d \"2020-02-30 12:00\";","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"    private static final String INVALID_LOCATION \u003d \"!@#$%^\u0026*()\";","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"()#\u0026($#)\";","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"    private static final String VALID_NAME_2 \u003d \"Jack Walker\";","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"    private static final String VALID_TITLE \u003d \"Meeting 1\";","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"    private static final String VALID_DATETIME \u003d \"29/02/2023 12:00\";","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"    private static final String VALID_LOCATION \u003d \"Singapore NUS\";","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    private static final String VALID_DESCRIPTION \u003d \"Meeting with Jack\";","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"    public void parseNames_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNames(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"    public void parseNames_collectionWithInvalidNames_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNames(Arrays.asList(VALID_NAME, INVALID_NAME)));","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"    public void parseNames_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"        assertTrue(ParserUtil.parseNames(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"    public void parseNames_collectionWithValidNames_returnsNameSet() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"        Set\u003cName\u003e actualNameSet \u003d ParserUtil.parseNames(Arrays.asList(VALID_NAME, VALID_NAME_2));","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"        Set\u003cName\u003e expectedNameSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Name(VALID_NAME), new Name(VALID_NAME_2)));","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedNameSet, actualNameSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"KS2499"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"KS2499"},"content":"    public void parseTitle_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"KS2499"},"content":"    public void parseTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"KS2499"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTitle(INVALID_TITLE));","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"KS2499"},"content":"    public void parseTitle_validValueWithoutWhitespace_returnsTitle() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"KS2499"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(VALID_TITLE));","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":249,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":250,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"KS2499"},"content":"    public void parseTitle_validValueWithWhitespace_returnsTrimmedTitle() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"KS2499"},"content":"        String titleWithWhitespace \u003d WHITESPACE + VALID_TITLE + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":253,"author":{"gitId":"KS2499"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(titleWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":258,"author":{"gitId":"KS2499"},"content":"    public void parseDateTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDateTime(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":260,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":262,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":263,"author":{"gitId":"KS2499"},"content":"    public void parseDateTime_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":264,"author":{"gitId":"KS2499"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDateTime(INVALID_DATETIME));","lastModifiedDate":"2023-03-13"},{"lineNumber":265,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":266,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":267,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":268,"author":{"gitId":"KS2499"},"content":"    public void parseDateTime_validValueWithoutWhitespace_returnsDateTime() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":269,"author":{"gitId":"KS2499"},"content":"        DateTime expectedDateTime \u003d new DateTime(VALID_DATETIME);","lastModifiedDate":"2023-03-13"},{"lineNumber":270,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedDateTime, ParserUtil.parseDateTime(VALID_DATETIME));","lastModifiedDate":"2023-03-13"},{"lineNumber":271,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":272,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":273,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":274,"author":{"gitId":"KS2499"},"content":"    public void parseDateTime_validValueWithWhitespace_returnsTrimmedDateTime() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":275,"author":{"gitId":"KS2499"},"content":"        String dateTimeWithWhitespace \u003d WHITESPACE + VALID_DATETIME + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":276,"author":{"gitId":"KS2499"},"content":"        DateTime expectedDateTime \u003d new DateTime(VALID_DATETIME);","lastModifiedDate":"2023-03-13"},{"lineNumber":277,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedDateTime, ParserUtil.parseDateTime(dateTimeWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":278,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":279,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":280,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":281,"author":{"gitId":"KS2499"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":282,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":283,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":284,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":285,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":286,"author":{"gitId":"KS2499"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":287,"author":{"gitId":"KS2499"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_LOCATION));","lastModifiedDate":"2023-03-13"},{"lineNumber":288,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":289,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":290,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":291,"author":{"gitId":"KS2499"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":292,"author":{"gitId":"KS2499"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2023-03-13"},{"lineNumber":293,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2023-03-13"},{"lineNumber":294,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":295,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":296,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":297,"author":{"gitId":"KS2499"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":298,"author":{"gitId":"KS2499"},"content":"        String locationWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":299,"author":{"gitId":"KS2499"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2023-03-13"},{"lineNumber":300,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(locationWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":301,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":302,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":303,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":304,"author":{"gitId":"KS2499"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":305,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":306,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":307,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":308,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":309,"author":{"gitId":"KS2499"},"content":"    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":310,"author":{"gitId":"KS2499"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2023-03-13"},{"lineNumber":311,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":312,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":313,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":314,"author":{"gitId":"KS2499"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":315,"author":{"gitId":"KS2499"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2023-03-13"},{"lineNumber":316,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2023-03-13"},{"lineNumber":317,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":318,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":319,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":320,"author":{"gitId":"KS2499"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":321,"author":{"gitId":"KS2499"},"content":"        String descriptionWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":322,"author":{"gitId":"KS2499"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2023-03-13"},{"lineNumber":323,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descriptionWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":324,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"KS2499":134,"-":191}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_LOCATION;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, Collections.singletonList(MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    public void resetData_withDuplicateMeetings_throwsDuplicateMeetingException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        // Two meetings with the same identity fields","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeetingA \u003d new MeetingBuilder(MEETING_A).withLocation(VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"            .withDescription(VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cMeeting\u003e newMeetings \u003d Arrays.asList(MEETING_A, editedMeetingA);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        AddressBookStub newData \u003d new AddressBookStub(Collections.singletonList(ALICE), newMeetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    public void hasMeeting_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasMeeting(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_nullName_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.getPersonByName(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_personNotInAddressBook_returnsNull() {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"        assertNull(addressBook.getPersonByName(ALICE.getName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_personInAddressBook_returnsPerson() {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"        assertEquals(ALICE, addressBook.getPersonByName(ALICE.getName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"    public void hasMeeting_meetingNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(addressBook.hasMeeting(MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"    public void hasMeeting_meetingInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"        addressBook.addMeeting(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(addressBook.hasMeeting(MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"    public void hasMeeting_meetingWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"        addressBook.addMeeting(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(MEETING_A).withLocation(VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"            .withDescription(VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(addressBook.hasMeeting(editedMeeting));","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"    public void getMeetingList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getMeetingList().remove(0));","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"     * A stub ReadOnlyAddressBook whose persons/meetings list can violate interface constraints.","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"        private final ObservableList\u003cMeeting\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"            this.meetings.setAll(meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"            return meetings;","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Beebeeoii":53,"KS2499":22,"-":98}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_nullName_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.getPersonByName(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_personNotInAddressBook_returnsNull() {","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"        assertNull(modelManager.getPersonByName(ALICE.getName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_personInAddressBook_returnsPerson() {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"        assertEquals(ALICE, modelManager.getPersonByName(ALICE.getName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"    public void addMeeting_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addMeeting(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"    public void addMeeting_meetingInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"        modelManager.addMeeting(MEETING_A);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"        assertTrue(modelManager.hasMeeting(MEETING_A));","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"KS2499"},"content":"    public void hasMeeting_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasMeeting(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"KS2499"},"content":"    public void hasMeeting_meetingNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"KS2499"},"content":"        assertFalse(modelManager.hasMeeting(MEETING_A));","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"KS2499"},"content":"    public void hasMeeting_meetingInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"KS2499"},"content":"        modelManager.addMeeting(MEETING_A);","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"KS2499"},"content":"        assertTrue(modelManager.hasMeeting(MEETING_A));","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"KS2499":45,"-":132}},{"path":"src/test/java/seedu/address/model/command/CommandHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.command;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.command.exceptions.OutOfBoundsCommandHistoryException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"public class CommandHistoryTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"        CommandHistory.clear();","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    public void traversePrevEmptyHistory_throwsOutOfBoundsCommandHistoryException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(OutOfBoundsCommandHistoryException.class, CommandHistory::prev);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public void traverseNextEmptyHistory_throwsOutOfBoundsCommandHistoryException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(OutOfBoundsCommandHistoryException.class, CommandHistory::next);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    public void moreThanMaximumNumberOfCommands_overwriteEarliestCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        String expected \u003d \"expectedCommand\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        CommandHistory.push(\"dummyCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        CommandHistory.push(expected);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        for (int i \u003d 0; i \u003c CommandHistory.MAXIMUM - 2; ++i) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            CommandHistory.push(String.valueOf(i));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        CommandHistory.push(\"testcommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        for (int i \u003d 0; i \u003c CommandHistory.MAXIMUM - 2; ++i) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            CommandHistory.prev();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(CommandHistory.prev(), expected);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Beebeeoii":46}},{"path":"src/test/java/seedu/address/model/meeting/DateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.time.Year;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"public class DateTimeTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateTime(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidDateTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"        String invalidDateTime \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(invalidDateTime));","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidDateTime_throwsDateTimeException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        // Single date/time","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"some random string\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"32/13/2022 13:22\")); // invalid day","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"22/13/2022 13:22\")); // invalid month","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"22/12/20222 13:22\")); // invalid year","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"22\\\\12/2022 13:22\")); // invalid delimiter \u0027\\\u0027","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        // Double date/time (start and end)","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"some random string\", \"some random string\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                \"12/13/2023 13:22\", \"12/12/2023 13:22\")); // invalid start","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"                \"12/12/2023 13:22\", \"12/13/2023 13:22\")); // invalid end","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidEndDateTime_throwsInvalidEndDateTimeException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"                \"12/12/2023 13:22\", \"12/11/2023 13:22\")); // negative duration","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"                \"12/12/2023 13:22\", \"12/12/2023 13:22\")); // zero duration","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidDateTime() {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        // null date/time","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDateTime(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        // invalid dates/times","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\" 22/05/2023\")); // starts with a space","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"22/05/2023 1:32am\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"22/05/2023 1:32pm\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"22/05/2023 1:32 AM\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"22/05/2023 1:32 PM\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"next thursday\")); // NLP","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"this coming friday 2:30pm\")); // NLP","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"22/05/2023 13:32PM\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        // valid dates/times","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22052023 13:22\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22-05-2023 13:22\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05/2023\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22-05-2023\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22.05.2023\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22052023\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05/23\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22-05-23\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22.05.23\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"220523\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"2205\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22.05\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22-05\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05/2023 13:22\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05/2023 1:32AM\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05/2023 12:32PM\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidDuration() {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        // null date/time","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDuration(null, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDuration(LocalDateTime.MAX, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDuration(null, LocalDateTime.MAX));","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"        // invalid dates/times","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDuration(LocalDateTime.MAX, LocalDateTime.MAX)); // zero duration","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDuration(LocalDateTime.MAX, LocalDateTime.MIN)); // negative duration","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        // valid dates/times","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDuration(LocalDateTime.MIN, LocalDateTime.MAX));","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"    public void getDateTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22/02/2022\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22-02-2022\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22.02.2022\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22/02/22\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22-02-22\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22.02.22\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"220222\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22/02\").getDateTime(), \"22/02/\" + Year.now());","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22-02\").getDateTime(), \"22/02/\" + Year.now());","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22.02\").getDateTime(), \"22/02/\" + Year.now());","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"2202\").getDateTime(), \"22/02/\" + Year.now());","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 13:00\").getDateTime(), \"22/02/2022 13:00\");","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 13.00\").getDateTime(), \"22/02/2022 13:00\");","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 1:00AM\").getDateTime(), \"22/02/2022 01:00\");","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 1:00PM\").getDateTime(), \"22/02/2022 13:00\");","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"    public void get() {","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 13:00\").get(),","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.of(2022, 2, 22, 13, 0));","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022\").get(),","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.of(2022, 2, 22, 0, 0));","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 12:00AM\").get(),","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.of(2022, 2, 22, 0, 0));","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":135}},{"path":"src/test/java/seedu/address/model/meeting/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"public class DescriptionTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidTitle() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        // null description","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        // invalid descriptions","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Description.isValidDescription(\" This is a test description\")); // starts with a space","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        // valid descriptions","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Description.isValidDescription(\"Purpose: Onboard everyone onto QuickContacts\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Description.isValidDescription(\"A\")); // one character","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Description.isValidDescription(","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"                \"This meeting is created so that everyone can be understand the workflow of \"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"                        + \"QuickContacts with ease. The meeting should last for 2 hours.\")); // long description","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":38}},{"path":"src/test/java/seedu/address/model/meeting/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"public class LocationTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidLocation() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        // null location","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        // invalid locations","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidLocation(\" City Square Mall\")); // starts with a space","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        // valid locations","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidLocation(\"https://zoom.us/\")); // url","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidLocation(\"A\")); // one character","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidLocation(\"123 Jurong West Street 52 Blk 123A #14-244\")); // long location","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidVirtualLocation() {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        // null virtual location","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidVirtualLocation(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        // invalid virtual locations","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\" City Square Mall\")); // starts with a space","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\"A\")); // one character","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\"123 Jurong West Street 52 Blk 123A #14-244\")); // address","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\"zoom.us\")); // address","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        // valid virtual locations","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidVirtualLocation(\"https://zoom.us/\")); // https url","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidVirtualLocation(\"http://zoom.us/\")); // http url","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidVirtualLocation(","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"                \"https://us02web.zoom.us/j/99999999999?pwd\u003dABCdEfGHiJkYkRuYW5WTLmNopQrSt12\")); // actual zoom url","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidVirtualLocation(","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"                \"http://us02web.zoom.us/j/99999999999?pwd\u003dABCdEfGHiJkYkRuYW5WTLmNopQrSt12\")); // http zoom url","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":58}},{"path":"src/test/java/seedu/address/model/meeting/MeetingContainsNamesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"public class MeetingContainsNamesPredicateTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate firstPredicate \u003d new MeetingContainsNamesPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate secondPredicate \u003d new MeetingContainsNamesPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate firstPredicateCopy \u003d new MeetingContainsNamesPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"    public void test_meetingContainsNames_returnsTrue() {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"        // One keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate predicate \u003d new MeetingContainsNamesPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(ALICE).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"        predicate \u003d new MeetingContainsNamesPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(ALICE, BOB).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        predicate \u003d new MeetingContainsNamesPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(ALICE, BOB).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"        predicate \u003d new MeetingContainsNamesPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(ALICE, BOB).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate predicate \u003d new MeetingContainsNamesPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withAttendees(ALICE).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"        predicate \u003d new MeetingContainsNamesPredicate(List.of(\"Carol\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withAttendees(ALICE, BOB).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"KS2499":74}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DATETIME;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DESCRIPTION;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_LOCATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TITLE;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_B;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"public class MeetingTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e meeting.getAttendees().remove(0));","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public void isSameMeeting() {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(MEETING_A.isSameMeeting(MEETING_A));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(MEETING_A.isSameMeeting(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        // same title, all other attributes different -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeetingA \u003d new MeetingBuilder(MEETING_A).withDateTime(VALID_MEETING_DATETIME)","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"                .withAttendees(BENSON).withLocation(VALID_MEETING_LOCATION).withDescription(VALID_MEETING_DESCRIPTION)","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"                .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(MEETING_A.isSameMeeting(editedMeetingA));","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        // different title, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withTitle(VALID_MEETING_TITLE).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(MEETING_A.isSameMeeting(editedMeetingA));","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        // different date/time, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withDateTime(VALID_MEETING_DATETIME).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(MEETING_A.isSameMeeting(editedMeetingA));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        // different attendees all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withAttendees(BENSON).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(MEETING_A.isSameMeeting(editedMeetingA));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        Meeting meetingACopy \u003d new MeetingBuilder(MEETING_A).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(meetingACopy, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(MEETING_A, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(null, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(1, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        // different meetings -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(MEETING_A, MEETING_B);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeetingA \u003d new MeetingBuilder(MEETING_A).withTitle(VALID_MEETING_TITLE).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(editedMeetingA, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        // different datetime -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withDateTime(VALID_MEETING_DATETIME).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(editedMeetingA, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        // different attendee -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withAttendees(BENSON).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(editedMeetingA, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withLocation(VALID_MEETING_LOCATION).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(editedMeetingA, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withDescription(VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(editedMeetingA, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"    public void hasPassed() {","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(new MeetingBuilder(MEETING_A).withDateTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.now().minus(1, ChronoUnit.HOURS)","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"                        .format(DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\"))).build().hasPassed());","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(new MeetingBuilder(MEETING_A).withDateTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.now().minus(1, ChronoUnit.MINUTES)","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"                        .format(DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\"))).build().hasPassed());","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(new MeetingBuilder(MEETING_A).withDateTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.now().plus(1, ChronoUnit.MINUTES)","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"                        .format(DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\"))).build().hasPassed());","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(new MeetingBuilder(MEETING_A).withDateTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.now().plus(1, ChronoUnit.HOURS)","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"                        .format(DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\"))).build().hasPassed());","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":112}},{"path":"src/test/java/seedu/address/model/meeting/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"public class TitleTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidTitle() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        // null title","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        // invalid titles","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Title.isValidTitle(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Title.isValidTitle(\" Meetup with Bob\")); // starts with a space","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        // valid titles","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Title.isValidTitle(\"Meetup with Bob\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Title.isValidTitle(\"A\")); // one character","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Title.isValidTitle(\"Group project meeting for CS2103T\")); // long title","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":36}},{"path":"src/test/java/seedu/address/model/meeting/UniqueMeetingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DESCRIPTION;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_LOCATION;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_B;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"public class UniqueMeetingListTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    private final UniqueMeetingList uniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public void contains_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.contains(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    public void contains_meetingNotInList_returnsFalse() {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(uniqueMeetingList.contains(MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    public void contains_meetingInList_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(uniqueMeetingList.contains(MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    public void contains_meetingWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeetingA \u003d new MeetingBuilder(MEETING_A).withLocation(VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(VALID_MEETING_DESCRIPTION)","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"                .build();","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(uniqueMeetingList.contains(editedMeetingA));","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    public void add_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.add(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    public void add_duplicateMeeting_throwsDuplicateMeetingException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.add(MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_nullTargetMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeeting(null, MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_nullEditedMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING_A, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_targetMeetingNotInList_throwsMeetingNotFoundException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(MeetingNotFoundException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING_A, MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_editedMeetingIsSameMeeting_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.setMeeting(MEETING_A, MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        expectedUniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_editedMeetingHasSameIdentity_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeetingA \u003d new MeetingBuilder(MEETING_A).withLocation(VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(VALID_MEETING_DESCRIPTION)","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"                .build();","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.setMeeting(MEETING_A, editedMeetingA);","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        expectedUniqueMeetingList.add(editedMeetingA);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_editedMeetingHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.setMeeting(MEETING_A, MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"        expectedUniqueMeetingList.add(MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_editedMeetingHasNonUniqueIdentity_throwsDuplicateMeetingException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING_A, MEETING_B));","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"    public void remove_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.remove(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"    public void remove_meetingDoesNotExist_throwsMeetingNotFoundException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(MeetingNotFoundException.class, () -\u003e uniqueMeetingList.remove(MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"    public void remove_existingMeeting_removesMeeting() {","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.remove(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings_nullUniqueMeetingList_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeetings((UniqueMeetingList) null));","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings_uniqueMeetingList_replacesOwnListWithProvidedUniqueMeetingList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"        expectedUniqueMeetingList.add(MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.setMeetings(expectedUniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeetings((List\u003cMeeting\u003e) null));","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cMeeting\u003e meetingList \u003d Collections.singletonList(MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.setMeetings(meetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"        expectedUniqueMeetingList.add(MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings_listWithDuplicateMeetings_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cMeeting\u003e listWithDuplicateMeetings \u003d Arrays.asList(MEETING_A, MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.setMeetings(listWithDuplicateMeetings));","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"                -\u003e uniqueMeetingList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":171}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_nullName_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.getPersonByName(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_personNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"        assertNull(uniquePersonList.getPersonByName(ALICE.getName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_personInList_returnsPerson() {","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"KS2499"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"KS2499"},"content":"        Person person \u003d uniquePersonList.getPersonByName(ALICE.getName());","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"        assertEquals(ALICE, person);","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"KS2499":18,"-":170}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedMeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.storage.JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"public class JsonAdaptedMeetingTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    private static final String INVALID_TITLE \u003d \"Meeting @ CLB\";","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private static final String INVALID_DATETIME \u003d \"12/13/2022 13:59\"; //13 month does not exist","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    private static final String INVALID_LOCATION \u003d \" City Square Mall\";","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" Some random description\";","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    private static final String VALID_TITLE \u003d MEETING_A.getTitle().toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    private static final String VALID_DATETIME \u003d MEETING_A.getDateTime().getDateTime();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    private static final List\u003cJsonAdaptedPerson\u003e VALID_ATTENDEES \u003d MEETING_A.getAttendees().stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    private static final String VALID_LOCATION \u003d MEETING_A.getLocation().toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    private static final String VALID_DESCRIPTION \u003d MEETING_A.getDescription().toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_validMeetingDetails_returnsMeeting() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(MEETING_A, meeting.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(INVALID_TITLE, VALID_DATETIME, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d Title.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(null, VALID_DATETIME, VALID_ATTENDEES, VALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidDateTime_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, INVALID_DATETIME, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d DateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_nullDateTime_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, null, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"                DateTime.class.getSimpleName());","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidAttendees_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cJsonAdaptedPerson\u003e invalidAttendees \u003d new ArrayList\u003c\u003e(VALID_ATTENDEES);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        invalidAttendees.add(new JsonAdaptedPerson(INVALID_NAME_DESC, VALID_PHONE_BOB, VALID_EMAIL_BOB,","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"                VALID_ADDRESS_BOB, new ArrayList\u003c\u003e(VALID_TAGS)));","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, INVALID_DATETIME, invalidAttendees,","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_DATETIME, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"                        INVALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_DATETIME, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"                        null, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"                Location.class.getSimpleName());","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_DATETIME, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, INVALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_DATETIME, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, null);","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"                Description.class.getSimpleName());","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":132}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    public void readAddressBook_invalidMeetingAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidMeetingAddressBook.json\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    public void readAddressBook_invalidAndValidMeetingAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidMeetingAddressBook.json\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Beebeeoii":11,"-":109}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.testutil.TypicalAddressBooks;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path TYPICAL_MEETINGS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalMeetingsAddressBook.json\");","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path INVALID_MEETING_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidMeetingAddressBook.json\");","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path DUPLICATE_MEETING_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateMeetingAddressBook.json\");","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalAddressBooks.getTypicalAddressBookPersonsOnly();","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_typicalMeetingsFile_success() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_MEETINGS_FILE,","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        AddressBook typicalMeetingsAddressBook \u003d TypicalAddressBooks.getTypicalAddressBookMeetingsOnly();","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(addressBookFromFile, typicalMeetingsAddressBook);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidMeetingFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_MEETING_FILE,","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_duplicateMeetings_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MEETING_FILE,","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_MEETING,","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Beebeeoii":28,"-":45}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalAddressBooks.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditMeetingDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.EditMeetingsCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":" * A utility class to help with building EditMeetingDescriptor objects.","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"public class EditMeetingDescriptorBuilder {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private EditMeetingDescriptor descriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        this.descriptor \u003d new EditMeetingDescriptor(descriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an {@code EditMeetingDescriptor} with fields containing {@code meeting}\u0027s details","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder(Meeting meeting) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setTitle(meeting.getTitle());","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setDateTime(meeting.getDateTime());","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setAttendees(meeting.getAttendees().stream().map(Person::getName).collect(Collectors.toSet()));","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setLocation(meeting.getLocation());","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setDescription(meeting.getDescription());","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Title} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setTitle(new Title(title));","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code DateTime} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder withDateTime(String dateTime) {","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setDateTime(new DateTime(dateTime));","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Location} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setLocation(new Location(location));","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Description} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"     * Parses the {@code attendees} into a {@code Set\u003cPerson\u003e} and set it to the {@code EditMeetingDescriptor}","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"     * that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder withAttendees(String... names) {","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        Set\u003cName\u003e personSet \u003d Stream.of(names).map(Name::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setAttendees(personSet);","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptor build() {","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        return descriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Beebeeoii":88}},{"path":"src/test/java/seedu/address/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.DateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"public class MeetingBuilder {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    public static final String DEFAULT_TITLE \u003d \"Meeting with Bob\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    public static final String DEFAULT_DATETIME \u003d \"01/01/2023 13:00\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    public static final String DEFAULT_LOCATION \u003d \"Plaza Singapura\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Celebrate Bob\u0027s birthday\";","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public static final Person DEFAULT_PERSON \u003d TypicalPersons.ALICE;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    private Title title;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    private DateTime dateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    private Set\u003cPerson\u003e attendees;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private Location location;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    private Description description;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        dateTime \u003d new DateTime(DEFAULT_DATETIME);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        attendees.add(DEFAULT_PERSON);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        title \u003d meetingToCopy.getTitle();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        dateTime \u003d meetingToCopy.getDateTime();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        attendees \u003d new HashSet\u003c\u003e(meetingToCopy.getAttendees());","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        location \u003d meetingToCopy.getLocation();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        description \u003d meetingToCopy.getDescription();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Title} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder withTitle(String title) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code DateTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder withDateTime(String dateTime) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"     * Parses the {@code attendees} into a {@code Set\u003cPerson\u003e} and set it to the {@code Meeting} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder withAttendees(Person... attendees) {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        this.attendees \u003d SampleDataUtil.getAttendeeSet(attendees);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Location} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder withLocation(String location) {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Description} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder withDescription(String description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"    public Meeting build() {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        return new Meeting(title, dateTime, attendees, location, description);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":96}},{"path":"src/test/java/seedu/address/testutil/MeetingUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.logic.commands.EditMeetingsCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":" * A utility class for Meeting.","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"public class MeetingUtil {","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an AddMeeting command string for adding the {@code meeting}.","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    public static String getAddMeetingCommand(Meeting meeting) {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        return AddMeetingCommand.COMMAND_WORD + \" \" + getMeetingDetails(meeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the part of command string for the given {@code meeting}\u0027s details.","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public static String getMeetingDetails(Meeting meeting) {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        sb.append(PREFIX_MEETING_TITLE).append(meeting.getTitle().toString()).append(\" \");","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        meeting.getAttendees().forEach(","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"                s -\u003e sb.append(PREFIX_PERSON).append(s.getName().fullName).append(\" \")","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        sb.append(PREFIX_DATETIME).append(meeting.getDateTime().getDateTime()).append(\" \");","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        sb.append(PREFIX_LOCATION).append(meeting.getLocation().toString()).append(\" \");","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        sb.append(PREFIX_DESCRIPTION).append(meeting.getDescription().toString()).append(\" \");","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the part of command string for the given {@code EditMeetingDescriptor}\u0027s details.","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    public static String getEditMeetingDescriptorDetails(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.getTitle().ifPresent(title -\u003e sb.append(PREFIX_MEETING_TITLE).append(title).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.getDateTime().ifPresent(","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"                dateTime -\u003e sb.append(PREFIX_DATETIME).append(dateTime.getDateTime()).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.getLocation().ifPresent(","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"                location -\u003e sb.append(PREFIX_LOCATION).append(location).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.getDescription().ifPresent(","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"                description -\u003e sb.append(PREFIX_DESCRIPTION).append(description).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        if (descriptor.getAttendees().isPresent()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"            Set\u003cName\u003e attendees \u003d descriptor.getAttendees().get();","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"            if (attendees.isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"                attendees.forEach(s -\u003e sb.append(PREFIX_PERSON).append(s.fullName).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Beebeeoii":66}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBooks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetings;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" * A utility class containing a list of {@code AddressBook} objects to be used in tests.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"public class TypicalAddressBooks {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * Prevents initialisation","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    private TypicalAddressBooks() {}","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an {@code AddressBook} with all the typical persons only.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public static AddressBook getTypicalAddressBookPersonsOnly() {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        return ab;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an {@code AddressBook} with all the typical meetings only.","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public static AddressBook getTypicalAddressBookMeetingsOnly() {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"            ab.addMeeting(meeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        return ab;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an {@code AddressBook} with all the typical persons and meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"            ab.addMeeting(meeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        return ab;","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":58}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    public static final Index INDEX_FIRST_MEETING \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    public static final Index INDEX_SECOND_MEETING \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public static final Index INDEX_THIRD_MEETING \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Beebeeoii":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * A utility class containing a list of {@code Meeting} objects to be used in tests.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public class TypicalMeetings {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    public static final Meeting MEETING_A \u003d new MeetingBuilder().withTitle(\"Dinner with Alice\")","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"            .withDateTime(\"01/02/2023 19:00\").withAttendees(TypicalPersons.ALICE).withLocation(\"NUS\")","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"            .withDescription(\"Weekly catchup\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public static final Meeting MEETING_B \u003d new MeetingBuilder().withTitle(\"Study session with Benson and Carl\")","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"            .withDateTime(\"02/03/2023 15:00\").withAttendees(TypicalPersons.BENSON, TypicalPersons.CARL)","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"            .withLocation(\"Central Library\").withDescription(\"Study for finals\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    public static final Meeting MEETING_C \u003d new MeetingBuilder().withTitle(\"Zoom meeting for agenda planning\")","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"            .withDateTime(\"13/03/2023 12:45\").withAttendees(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"            .withLocation(\"https://us02web.zoom.us/j/99999999999?pwd\u003dABCdEfGHiJkYkRuYW5WTLmNopQrSt12\")","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"            .withDescription(\"Plan for project work\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * Private constructor to prevent initialisation.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private TypicalMeetings() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING_A, MEETING_B, MEETING_C));","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":32}}]
