[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"\u003cp \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"  \u003ca href\u003d\"https://github.com/AY2223S2-CS2103T-T11-2/tp/actions\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"    \u003cimg src\u003d\"https://github.com/AY2223S2-CS2103T-T11-2/tp/workflows/Java%20CI/badge.svg\" alt\u003d\"CI Status\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"  \u003c/a\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"  \u003ca href\u003d\"https://codecov.io/gh/AY2223S2-CS2103T-T11-2/tp\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    \u003cimg src\u003d\"https://codecov.io/gh/AY2223S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg?token\u003d1KZTHMDDUF\" alt\u003d\"codecov\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"  \u003c/a\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"## About QuickContacts","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts (QC) is a **cross-platform desktop application** that enables you to easily manage your contacts and meetings **all in one place**! With QC, you will never miss any meetings with your friends or colleagues.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"QC is specially designed for:","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"* _Seamless_ creation and management of contacts and meetings","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"* Users who have a _large_ number of contacts and _meetings_","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"* Typists","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"For more information, check out our [developer guide](https://ay2223s2-cs2103t-t11-2.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"## Features","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"* Create and manage contacts and their details","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"* Create and manage meetings with contact(s)","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"* Autocomplete command inputs","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"* Traverse back and forth between commands","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"## Acknowledgements","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Beebeeoii":25,"KS2499":5,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"mainClassName \u003d \u0027seedu.quickcontacts.Main\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    archiveFileName \u003d \u0027quickcontacts.jar\u0027","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"run {","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Beebeeoii":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"### Lee Jia Wei","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"\u003cimg src\u003d\"images/beebeeoii.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"[[homepage](https://jiaweilee.com)]","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"[[github](https://github.com/Beebeeoii)]","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"[[portfolio](team/beebeeoii.md)]","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"* Role: Team Member","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"* Responsibilities: To be added","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"### Kannusami Saraan","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"\u003cimg src\u003d\"images/ks2499.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"[[github](http://github.com/ks2499)]","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"[[portfolio](team/ks2499.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"* Role: Team Member","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"* Responsibilities: To be added","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"### Kelvin Chua","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"\u003cimg src\u003d\"images/chuakid.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"[[github](http://github.com/chuakid)]","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"[[portfolio](team/chuakid.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"- Role: To Be Added","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"- Responsibilities: To Be Added","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"thedesalizes"},"content":"### Ethan Tan","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"\u003cimg src\u003d\"images/thedesalizes.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"thedesalizes"},"content":"[[github](http://github.com/thedesalizes)]","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"thedesalizes"},"content":"[[portfolio](team/thedesalizes.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"thedesalizes"},"content":"- Role: To Be Added","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"thedesalizes"},"content":"- Responsibilities: To Be Added","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"### Jeremy Khoo","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"\u003cimg src\u003d\"images/jeremykhoo-nus.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"[[github](http://github.com/jeremykhoo-NUS)]","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"[[portfolio](team/jeremykhoo-nus.md)]","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"- Role: To Be Added","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"- Responsibilities: To Be Added","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"thedesalizes":5,"Beebeeoii":14,"KS2499":6,"chuakid":6,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"We would like to thank:","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"* [CS2103T AY22/23 Semester 2 teaching team](https://nus-cs2103-ay2223s2.github.io/website/admin/instructors.html) for imparting valuable knowledge, skills and guidance","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"* [SE-edu AddressBook 3](https://github.com/se-edu/addressbook-level3) which `QuickContacts` is built on","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"* Open-source libraries used in `QuickContacts`:","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"  * [JavaFX](https://openjfx.io/)","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"  * [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"  * [JUnit](https://junit.org/junit5/)","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"* Colors from [Ayu](https://raw.githubusercontent.com/ayu-theme/ayu-colors/master/colors.svg)","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"#### Main components of the architecture","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"#### Interaction between architecture components","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"The **_Sequence Diagram_** below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) **_class diagram_** below.","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `MeetingListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"Here\u0027s a (partial) **_class diagram_** of the `Logic` component:","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object) and `Meeting` objects (which are contained in a `UniqueMeetingList` object).","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"\u003cimg src\u003d\"images/ModelPersonDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"The `Person` model,","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"* consists of individual classes `Name`, `Phone`, `Email`, `Address` and `Tag` which are used to store the respective information of a `Person`.","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"\u003cimg src\u003d\"images/ModelMeetingDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"The `Meeting` model,","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"* consists of individual classes `Title`, `DateTime`, `Person`, `Location` and `Description` which are used to store the respective information of a `Meeting`.","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"Classes used by multiple components are in the `seedu.quickcontacts.commons` package.","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"KS2499"},"content":"### CRUD Operations of Meeting and Find Meeting","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"KS2499"},"content":"#### Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"KS2499"},"content":"##### Adding","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"KS2499"},"content":"The `AddMeetingCommand` adds a meeting to the address book. The meeting is added by creating a `Meeting` object and ","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"KS2499"},"content":"adding it to the `UniqueMeetingList` in the `Model` component. The `AddMeetingCommandParser` parses the user input and","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"KS2499"},"content":"creates an `AddMeetingCommand` object. The `AddMeetingCommand` is executed and the meeting is added to the ","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"KS2499"},"content":"address book\u0027s `UniqueMeetingList`. The input format is as follows: ","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"KS2499"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"KS2499"},"content":"// a standard addMeeting command where all arguments are compulsory where Person is minimally 1","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"KS2499"},"content":"addm t/TITLE d/DATE_TIME [p/PERSON...] l/LOCATION d/DESCRIPTION","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"KS2499"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"KS2499"},"content":"The `AddMeetingCommand` throws a `CommandException` if any of the person\u0027s names is not found in the address book (i.e. ","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"KS2499"},"content":"no person in the address book has a matching name). The name must match exactly (**case-sensitive**) or else the ","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"KS2499"},"content":"\u0027CommandException\u0027 will be thrown.","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"KS2499"},"content":"##### Editing","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"jeremykhoo-NUS"},"content":"The `EditMeedingCommand`handles the editing of an existing meeting. It contains information such as the meeting\u0027s index, its new details to update, and methods to execute the command and create an edited meeting.","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"jeremykhoo-NUS"},"content":"The class extends the Command class and overrides its execute() method to update the specified meeting in the model with the edited details. If the meeting already exists in the address book or the provided index is invalid, an exception is thrown.","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"jeremykhoo-NUS"},"content":"The `EditMeetingsCommand` class also has an inner class`EditMeetingDescriptor`, which contains the new details for the meeting, such as its title, date and time, attendees, location, and description. It has a method `createEditedMeeting()` that creates a new meeting object with the edited details provided.","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"jeremykhoo-NUS"},"content":"There are also constant variables for this class that store messages to display when the command is executed or when there are errors. The `MESSAGE_USAGE` constant holds the command syntax and format, while the `MESSAGE_EDIT_MEETING_SUCCESS`, `MESSAGE_NOT_EDITED`, and `MESSAGE_DUPLICATE_MEETING` constants hold the success message, error message when no fields are provided, and error message when the edited meeting already exists in the address book, respectively.","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"This class also overrides the equals() method to check if two `EditMeetingsCommnds` are equal.","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"KS2499"},"content":"##### Deleting","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"jeremykhoo-NUS"},"content":"The `DeleteCommand` class is a command in a address book management system that deletes a person from the address book using its displayed index. The class extends the Command class and overrides its `execute()` method to delete the specified person in the model. It also contains a constant variable `MESSAGE_USAGE` that stores the syntax and format for the command, as well as `MESSAGE_DELETE_PERSON_SUCCESS` that holds the success message to display when the command is executed.","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"jeremykhoo-NUS"},"content":"The `DeleteCommand` class also has a constructor that takes in an index for the person to delete. It also overrides the `equals()` method to check if two DeleteCommand objects are equal by comparing their targetIndex fields.","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"jeremykhoo-NUS"},"content":"During execution, the `DeleteCommand` class gets the filtered person list from the model and checks if the specified index is within the range of the list. If it is not, an exception is thrown with an error message. Otherwise, it retrieves the person to delete using the index and calls the `deletePerson()` method from the model to remove the person. The `execute()` method then returns a `CommandResult` object with a success message that contains the deleted person\u0027s details.","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"KS2499"},"content":"##### Finding","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"KS2499"},"content":"The `FindMeetingCommand` finds meetings in the address book. The meeting is found by creating a ","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"KS2499"},"content":"`MeetingContainsNamesPredicate` object and passing it to the `updateFilteredMeetingList` method in the `Model` ","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"KS2499"},"content":"component. The `FindMeetingCommandParser` takes in a list of names and creates a `FindMeetingCommand` object. ","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"KS2499"},"content":"The `FindMeetingCommand` is executed and the `MeetingContainsNamesPredicate` is passed to the ","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"KS2499"},"content":"`updateFilteredMeetingList` method. The input format is as follows:","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"KS2499"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"KS2499"},"content":"// no arguments to list all meetings","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"KS2499"},"content":"findm","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"KS2499"},"content":"// arguments supplied to find meetings with matching names","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"KS2499"},"content":"findm n/NAME [n/NAME]... ","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"KS2499"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"KS2499"},"content":"The `FindMeetingCommand` throws a `CommandException` if no names are provided and there is trailing whitespace.","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"KS2499"},"content":"The names no need to match exactly (**case-INsensitive**) but the Meetings are only filtered by one of the contact\u0027s names,","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"KS2499"},"content":"as *space* is used as a delimiter. The command can be used **without arguments** to get back the original view of all meetings.","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"chuakid"},"content":"### Exporting and importing of contacts","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"chuakid"},"content":"#### Implementation","lastModifiedDate":"2023-03-22"},{"lineNumber":222,"author":{"gitId":"chuakid"},"content":"##### Exporting","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"chuakid"},"content":"Exporting generates a JSON for the contacts at the indices given.","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"chuakid"},"content":"For example, `export p/ 1 p/2` generates a JSON for the first and second contacts.","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"chuakid"},"content":"Example JSON:","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"chuakid"},"content":"```json","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"chuakid"},"content":"[ {","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"chuakid"},"content":"  \"name\" : \"Alice Pauline\",","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"chuakid"},"content":"  \"phone\" : \"94351253\",","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"chuakid"},"content":"  \"email\" : \"alice@example.com\",","lastModifiedDate":"2023-03-22"},{"lineNumber":231,"author":{"gitId":"chuakid"},"content":"  \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"chuakid"},"content":"  \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"chuakid"},"content":"}, {","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"chuakid"},"content":"  \"name\" : \"Benson Meier\",","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"chuakid"},"content":"  \"phone\" : \"98765432\",","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"chuakid"},"content":"  \"email\" : \"johnd@example.com\",","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"chuakid"},"content":"  \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"chuakid"},"content":"  \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"chuakid"},"content":"} ]","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"chuakid"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"chuakid"},"content":"The JSON is generated using the Jackson library, through the use of the JsonUtil utility class.","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"chuakid"},"content":"##### Importing","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"chuakid"},"content":"Using the exported JSON, one can then import it using `import THE_JSON`.","lastModifiedDate":"2023-03-22"},{"lineNumber":245,"author":{"gitId":"chuakid"},"content":"Before importing, a check is done to make sure there are no duplicate values. This is done before the actual importing ","lastModifiedDate":"2023-03-22"},{"lineNumber":246,"author":{"gitId":"chuakid"},"content":"to ensure we do not have \"half imports\". ","lastModifiedDate":"2023-03-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"chuakid"},"content":"Consider a situation where we have `[Person2, Person3]` in the system. If we ","lastModifiedDate":"2023-03-22"},{"lineNumber":249,"author":{"gitId":"chuakid"},"content":"import `[Person1, Person2, Person3, Person4]` without considering duplicates first, Person1 will be imported ","lastModifiedDate":"2023-03-22"},{"lineNumber":250,"author":{"gitId":"chuakid"},"content":"followed by the import of Person2 throwing a DuplicatePersonError, resulting in the command throwing a failure ","lastModifiedDate":"2023-03-22"},{"lineNumber":251,"author":{"gitId":"chuakid"},"content":"message and Person4 not being imported but the system now has `[Person1, Person2, Person3]`. ","lastModifiedDate":"2023-03-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":253,"author":{"gitId":"chuakid"},"content":"However, if the user wishes to \"force import\", a `f/` parameter is provided. This imports for each `Person` if the ","lastModifiedDate":"2023-03-22"},{"lineNumber":254,"author":{"gitId":"chuakid"},"content":"Person does not already exist, and ignores those that do. ","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"chuakid"},"content":"This allows the previous situation to complete with `[Person1, Person2, Person3, Person4]` in the system.","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":257,"author":{"gitId":"chuakid"},"content":"The JSON is parsed using the Jackson library. If the Jackson library is unable to parse the json, an error message ","lastModifiedDate":"2023-03-22"},{"lineNumber":258,"author":{"gitId":"chuakid"},"content":"is thrown.","lastModifiedDate":"2023-03-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":260,"author":{"gitId":"chuakid"},"content":"### Exporting and importing of Meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"chuakid"},"content":"#### Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":262,"author":{"gitId":"chuakid"},"content":"Exporting and importing for meetings is similar to that of contacts, with the main difference being that meetings ","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"chuakid"},"content":"has additional functionality of returning meetings between two dates. This is implemented through the use of a ","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"chuakid"},"content":"`isBetween` function implemented in the `Meeting` class. The program will first gather all the meetings in the ","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"chuakid"},"content":"corresponding indexes provided, then search for meetings between the start and end dates. If either date is empty, then ","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"chuakid"},"content":"only the other date is considered.","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":268,"author":{"gitId":"Beebeeoii"},"content":"### Autocompletion of Argument Prefixes","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"Beebeeoii"},"content":"Autocompletion of command inputs is facilitated by the individual command parsers (`XYZCommandParser`) which are","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"Beebeeoii"},"content":"implementing the `Parser` interface in the `Logic` component. Each `XYZCommandParser` implements how autocompletion","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"Beebeeoii"},"content":"should work for that particular command by overriding `Parser#getAutocompleteSuggestion`. This action is triggered when","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"Beebeeoii"},"content":"the user presses `TAB` when the command input starts with a valid command.","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"Beebeeoii"},"content":"The `CommandBox` UI component is actively listening for `TAB` keystrokes by having a `KeyPressedHandler` which will","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"Beebeeoii"},"content":"trigger `XYZCommandParser#getAutocompleteSuggestion`. A `AutocompleteResult` would then be returned to the `CommandBox`","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"Beebeeoii"},"content":"which contains the `Prefix` to be appended to the current command input, or used to replace the last `Prefix` in the","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"Beebeeoii"},"content":"current command input.","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"Beebeeoii"},"content":"#### Design Considerations","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"Beebeeoii"},"content":"**Alternative 1**: Autocomplete by appending the next relevant `Prefix` that is missing","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"Beebeeoii"},"content":"* This will be easier to implement as all we need is to have a list of `Prefix` that is relevant for the command and ","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"Beebeeoii"},"content":"cycle through and append those that are missing from the current command input.","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"Beebeeoii"},"content":"* Checking for missing `Prefix` from the command input can be achieved with the help of `ArgumentTokenizer`.","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"Beebeeoii"},"content":"* Downside: some commands such as `edit` does not need all the `Prefix` as user might just want to modify two ","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"Beebeeoii"},"content":"attributes. Simply cycling through and appending missing `Prefix` might require users to backspace some","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"Beebeeoii"},"content":"unnecessary `Prefix`.","lastModifiedDate":"2023-03-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":291,"author":{"gitId":"Beebeeoii"},"content":"**Alternative 2 (current choice)**: Autocomplete by custom behaviour depending on the command","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":293,"author":{"gitId":"Beebeeoii"},"content":"* This would require each `XYZCommandParser` to implement their own behaviour on how autocompletion should","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"Beebeeoii"},"content":"behave for that particular command.","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"Beebeeoii"},"content":"* Benefit: There is more flexibility in customising how to best cater autocompletion for each individual","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"Beebeeoii"},"content":"command to better the user experience.","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"Beebeeoii"},"content":"### Traversal of Commands","lastModifiedDate":"2023-03-27"},{"lineNumber":299,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":300,"author":{"gitId":"Beebeeoii"},"content":"Traversal of commands is facilitated by `CommandHistory` model in addition to `KeyPressedHandler` in the `CommandBox` UI component.","lastModifiedDate":"2023-03-27"},{"lineNumber":301,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":302,"author":{"gitId":"Beebeeoii"},"content":"Internally, `CommandHistory` utilises [`LinkedList`](https://docs.oracle.com/javase/7/docs/api/java/util/LinkedList.html) to store all the commands that have been executed by the user. Note that `LinkedList` is a [doubly-linked list](https://en.wikipedia.org/wiki/Doubly_linked_list) and this allows us to traverse the list of commands forward and backward in O(1) [time complexity](https://en.wikipedia.org/wiki/Time_complexity). Traversal of the list is facilitated by a `static` pointer.","lastModifiedDate":"2023-03-27"},{"lineNumber":303,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"Beebeeoii"},"content":"`CommandBox` UI component is actively listening to the `UP` and `DOWN` keys which would be handled by the `KeyPressedHandler`, which is responsible for traversing the command history using `CommandHistory`.","lastModifiedDate":"2023-03-27"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"Beebeeoii"},"content":"### DateTime parsing","lastModifiedDate":"2023-03-22"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"Beebeeoii"},"content":"Storing of `dateTime` (date and/or time) of `Meeting` is facilitated by `DateTime`. ","lastModifiedDate":"2023-03-27"},{"lineNumber":309,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":310,"author":{"gitId":"Beebeeoii"},"content":"The `dateTime` of a `Meeting` requires users to input a date, but leaves the time of the meeting to be optional. Internally, `DateTime` stores the date using [`LocalDate`](https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html) and the time using [`LocalTime`](https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html). However, since the time is an optional field, the optionality of the time is implemented by wrapping `LocalTime` with the Java [`Optional`](https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html) class.  This brings about various benefits and is further discussed below.","lastModifiedDate":"2023-03-27"},{"lineNumber":311,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":312,"author":{"gitId":"Beebeeoii"},"content":"Moreover, `DateTime` allows for various formats of parsing in a `dateTime` value (22/02 3.30PM, 2202 1530, 22.02.2023 etc). This is facilitated by first having a list of formats for dates and times separately. Moreover, separators (`.`, `:`, `/` etc) are maintained and inserted for each format dynamically. For example:","lastModifiedDate":"2023-03-27"},{"lineNumber":313,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":314,"author":{"gitId":"Beebeeoii"},"content":"* `dd{SEP}MM{SEP}yyyy` specifies the format for `dd/MM/yyyy`, `dd.MM.yyyy` and `dd-MM-yyyy` for separators `/`, `.` and `-` respectively.","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":316,"author":{"gitId":"Beebeeoii"},"content":"This way, formats are easily extensible and maintainable. The parsing of `dateTime` inputs into `LocalDate` and `LocalTime` objects are facilitated by breaking up the input into 2 parts: date and time, before using `LocalDate#parse` and `LocalTime#parse` respectively.","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":318,"author":{"gitId":"Beebeeoii"},"content":"#### Design Considerations","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":320,"author":{"gitId":"Beebeeoii"},"content":"**Aspect: How to encapsulate the time of a `Meeting` which is optional**","lastModifiedDate":"2023-03-27"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"Beebeeoii"},"content":"* **Alternative 1**: Have the time set to `null` if user does not provide the time.","lastModifiedDate":"2023-03-27"},{"lineNumber":323,"author":{"gitId":"Beebeeoii"},"content":"  * This would risk [`NullPointerException`](https://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html) being thrown if the time is not provided but there are attempts of accessing the time.","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"Beebeeoii"},"content":"  * As a result of the point above, there will be many instances of null checks, which would contribute to unnecessary code verbosity.","lastModifiedDate":"2023-03-27"},{"lineNumber":325,"author":{"gitId":"Beebeeoii"},"content":"* **Alternative 2**: Make use of `LocalTime.MAX` to represent that the time is not provided.","lastModifiedDate":"2023-03-27"},{"lineNumber":326,"author":{"gitId":"Beebeeoii"},"content":"  * This alternative removes the risk of `NullPointerException` that comes with Alternative 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":327,"author":{"gitId":"Beebeeoii"},"content":"  * However, there would still be many instances of checks whether the time equals to `LocalTime.MAX`, which would contribute to unnecessary code verbosity.","lastModifiedDate":"2023-03-27"},{"lineNumber":328,"author":{"gitId":"Beebeeoii"},"content":"* **Alternative 3 (current choice)**: Utilise Java `Optional` to wrap the time.","lastModifiedDate":"2023-03-27"},{"lineNumber":329,"author":{"gitId":"Beebeeoii"},"content":"  * By doing so, there will not be any `NullPointerException` and enables us to make use of the provided methods (`orElse` etc.) that helps to carry out the logic based on the presence of the time.","lastModifiedDate":"2023-03-27"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":331,"author":{"gitId":"jeremykhoo-NUS"},"content":"### Sort Meeting commands","lastModifiedDate":"2023-03-27"},{"lineNumber":332,"author":{"gitId":"jeremykhoo-NUS"},"content":"`SortMeetingCommand` is a Java class that sorts the meeting objects stored in a Model object based on a specified attribute. This command allows the user to sort meetings by their title, date and time, location, or description. The user can also specify whether the sorting should be done in reverse order. The sorting is done by creating a Comparator for the specified attribute and passing it to the Model object\u0027s sortFilteredMeetingList method. The execute method of this class takes a `Model` object as an argument, applies the correct `Comparator` based on the prefix given by the user, and then returns a `CommandResult` object with a success message indicating the attribute that the meetings have been sorted by. If an invalid prefix is provided, a `CommandException` is thrown.","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":334,"author":{"gitId":"chuakid"},"content":"### Light Theme","lastModifiedDate":"2023-03-28"},{"lineNumber":335,"author":{"gitId":"chuakid"},"content":"The current theme is stored as a boolean inside GuiSettings, which is stored inside UserPrefs. Clicking the button ","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"chuakid"},"content":"toggles the boolean and removes the current stylesheet (eg. LightTheme.css/DarkTheme.css) and adds the opposite ","lastModifiedDate":"2023-03-28"},{"lineNumber":337,"author":{"gitId":"chuakid"},"content":"stylesheet to the scene.","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":339,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"Beebeeoii"},"content":"This sections describes the user requirements we intend to address with `QuickContacts`.","lastModifiedDate":"2023-03-27"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"Beebeeoii"},"content":"### Target User Profile","lastModifiedDate":"2023-03-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"Beebeeoii"},"content":"`QuickContacts` is designed for users with busy schedules of meeting people.","lastModifiedDate":"2023-03-27"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":359,"author":{"gitId":"Beebeeoii"},"content":"* need to manage a large number of contacts and meetings","lastModifiedDate":"2023-03-27"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"Beebeeoii"},"content":"### Value proposition","lastModifiedDate":"2023-03-27"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":367,"author":{"gitId":"Beebeeoii"},"content":"`QuickContacts` allows users to manage contacts and meetings faster than a typical mouse/GUI-driven application.","lastModifiedDate":"2023-03-27"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"Beebeeoii"},"content":"**Priority levels**:","lastModifiedDate":"2023-03-27"},{"lineNumber":372,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":373,"author":{"gitId":"Beebeeoii"},"content":"* High (must have) - `* * *`","lastModifiedDate":"2023-03-27"},{"lineNumber":374,"author":{"gitId":"Beebeeoii"},"content":"* Medium (nice to have) - `* *`","lastModifiedDate":"2023-03-27"},{"lineNumber":375,"author":{"gitId":"Beebeeoii"},"content":"* Low (unlikely to have) - `*`","lastModifiedDate":"2023-03-27"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"| Priority | As a …​                                      | I want to …​                                      | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"Beebeeoii"},"content":"|----------|----------------------------------------------|---------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":379,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                     | see usage instructions                            | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"| `* * *`  | user                                         | add a new person                                  |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"| `* * *`  | user                                         | delete a person                                   | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"| `* * *`  | user                                         | find a person by name                             | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"| `* *`    | user                                         | hide private contact details                      | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user with many persons in the contact book   | sort persons by name                              | locate a person easily                                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":385,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user                                         | Find a person by tag                              | I can filter the contacts by tags                                      |","lastModifiedDate":"2023-03-05"},{"lineNumber":386,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user                                         | Sort by tag priority                              | I can find the most important contacts                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":387,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user                                         | Assign tag priority                               |                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":388,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user                                         | Retrieve deleted contacts                         |                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":389,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user                                         | Set a date for deletion of contacts               | Remove the contacts automatically                                      |","lastModifiedDate":"2023-03-05"},{"lineNumber":390,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user                                         | Add a contact                                     | Store my contact in app                                                |","lastModifiedDate":"2023-03-05"},{"lineNumber":391,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user                                         | Delete a contact                                  | Remove unwanted contacts                                               |","lastModifiedDate":"2023-03-05"},{"lineNumber":392,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user                                         | Edit a contact                                    | Change details of existing contacts                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":393,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user                                         | Assign tag to contact                             | Categorise my contacts                                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":394,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | user                                         | Use the help command                              | To see available commands                                              |","lastModifiedDate":"2023-03-05"},{"lineNumber":395,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | power user                                   | Assign shortcuts to different actions             | I can cut down on the time taken to type                               |","lastModifiedDate":"2023-03-05"},{"lineNumber":396,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User with many connections                   | Export my contacts                                | I can share my contacts easily                                         |","lastModifiedDate":"2023-03-05"},{"lineNumber":397,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User with many connections                   | Copy the details of my contacts                   | I can share my contacts easily                                         |","lastModifiedDate":"2023-03-05"},{"lineNumber":398,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User with many existing contacts             | Import my contacts automatically                  | I don\\\u0027t have to spend too much time creating contacts one by one      |","lastModifiedDate":"2023-03-05"},{"lineNumber":399,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User with many meetups with people           | Sort meetings based on the date and time          | I can prioritize my time well                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":400,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | Busy user with many meetups                  | Receive notifications about meetups with contacts | I won\\\u0027t be late for meetups                                           |","lastModifiedDate":"2023-03-05"},{"lineNumber":401,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User with many meetups with people           | Create a meeting                                  | Schedule a meeting                                                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":402,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User with many meetups with people           | Edit a meeting                                    | Change meeting details                                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":403,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User with many meetups with people           | Delete a meeting                                  | Remove cancelled or completed meetings                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":404,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User with many meetups with people           | View all meetings                                 | See in a glance the meetings that I have                               |","lastModifiedDate":"2023-03-05"},{"lineNumber":405,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User with many meetups with people           | View meeting details                              | Understand what my meeting is about                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":406,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | Users with meetings                          | Add a reminder to meeting                         | So I do not forget the meeting                                         |","lastModifiedDate":"2023-03-05"},{"lineNumber":407,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | Users with meetings                          | Edit reminder of meeting                          | Change how frequent my reminders are                                   |","lastModifiedDate":"2023-03-05"},{"lineNumber":408,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | Users with meetings                          | Delete a reminder                                 | So I am not spammed with reminders                                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":409,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | Users with many meetings                     | Tag meeting                                       | Organize they types of meetings                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":410,"author":{"gitId":"Beebeeoii"},"content":"| `*`      | User who are very familiar with the keyboard | Add custom keybinds                               | So that I am faster at organizing contacts                             |","lastModifiedDate":"2023-03-27"},{"lineNumber":411,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User with many meetings                      | See how many days left to a meeting               | I don\\\u0027t forget to attend one                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":412,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User in a hurry                              | Undo previous action up to 3 previous actions     | I can be fast and a bit sloppy without worrying                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":413,"author":{"gitId":"Beebeeoii"},"content":"| `*`      | User who use the app for a long time         | Set a reminder to tag people                      | In future I can better organize people                                 |","lastModifiedDate":"2023-03-27"},{"lineNumber":414,"author":{"gitId":"Beebeeoii"},"content":"| `*`      | User who forget what is in contacts          | Ask if person/meeting still relevant              | So that the contact remain relatively clean                            |","lastModifiedDate":"2023-03-27"},{"lineNumber":415,"author":{"gitId":"jeremykhoo-NUS"},"content":"| `*`      | User assign name to priority tag             | Customise the tags                                | I can remember more easily who is ranked higher                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"Beebeeoii"},"content":"For all use cases below, the **system** is `QuickContacts` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2023-03-27"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":421,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC1 - Add a contact**","lastModifiedDate":"2023-03-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":423,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":425,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to add a contact.","lastModifiedDate":"2023-03-27"},{"lineNumber":426,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` adds that contact.","lastModifiedDate":"2023-03-27"},{"lineNumber":427,"author":{"gitId":"Beebeeoii"},"content":"3. `QuickContacts` shows new contact in list.","lastModifiedDate":"2023-03-27"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":429,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":431,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":433,"author":{"gitId":"Beebeeoii"},"content":"* 1a. Input for a required field is illegal.","lastModifiedDate":"2023-03-27"},{"lineNumber":434,"author":{"gitId":"Beebeeoii"},"content":"  * 1a1. `QuickContacts` prompts user with an error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":435,"author":{"gitId":"Beebeeoii"},"content":"  * Use case resumes at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC2 - Delete a contact**","lastModifiedDate":"2023-03-27"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to list contacts.","lastModifiedDate":"2023-03-27"},{"lineNumber":442,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` shows a list of contacts.","lastModifiedDate":"2023-03-27"},{"lineNumber":443,"author":{"gitId":"Beebeeoii"},"content":"3. User requests to delete a specific contact in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":444,"author":{"gitId":"Beebeeoii"},"content":"4. `QuickContacts` deletes the contact.","lastModifiedDate":"2023-03-27"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"Beebeeoii"},"content":"  * `QuickContacts` returns an empty list.","lastModifiedDate":"2023-03-27"},{"lineNumber":452,"author":{"gitId":"Beebeeoii"},"content":"  * Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":453,"author":{"gitId":"Beebeeoii"},"content":"* 3a. Index for the contact to be deleted is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":454,"author":{"gitId":"Beebeeoii"},"content":"  * `QuickContacts` prompts user with an error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":455,"author":{"gitId":"Beebeeoii"},"content":"  * Use case resumes from step 3.","lastModifiedDate":"2023-03-27"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC3 - Find a contact**","lastModifiedDate":"2023-03-27"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"Beebeeoii"},"content":"1. User requests searches contact by name.","lastModifiedDate":"2023-03-27"},{"lineNumber":462,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` shows that person.","lastModifiedDate":"2023-03-27"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":464,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":466,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":468,"author":{"gitId":"Beebeeoii"},"content":"* 1a. Input for a required field is illegal.","lastModifiedDate":"2023-03-27"},{"lineNumber":469,"author":{"gitId":"Beebeeoii"},"content":"  * 1a1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":470,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":472,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC4 - Edit an existing contact\u0027s details**","lastModifiedDate":"2023-03-27"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":474,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":476,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to edit a contact.","lastModifiedDate":"2023-03-27"},{"lineNumber":477,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` shows the contact with the updated details.","lastModifiedDate":"2023-03-27"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":479,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":480,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":481,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":482,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":483,"author":{"gitId":"Beebeeoii"},"content":"* 1a. Input for a field is illegal.","lastModifiedDate":"2023-03-27"},{"lineNumber":484,"author":{"gitId":"Beebeeoii"},"content":"  * 1a1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":485,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":486,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":487,"author":{"gitId":"Beebeeoii"},"content":"* 1b. Contact cannot be found.","lastModifiedDate":"2023-03-27"},{"lineNumber":488,"author":{"gitId":"Beebeeoii"},"content":"  * 1b1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":489,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":490,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":491,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC5 - User want to list all**","lastModifiedDate":"2023-03-27"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":493,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":494,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":495,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to list.","lastModifiedDate":"2023-03-27"},{"lineNumber":496,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` shows all the person and meetings.","lastModifiedDate":"2023-03-27"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":500,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":502,"author":{"gitId":"Beebeeoii"},"content":"* 1a. list is empty.","lastModifiedDate":"2023-03-27"},{"lineNumber":503,"author":{"gitId":"Beebeeoii"},"content":"  * Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":504,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":505,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC6 - User wants to clear everything**","lastModifiedDate":"2023-03-27"},{"lineNumber":506,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":507,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":508,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":509,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to `clear`.","lastModifiedDate":"2023-03-27"},{"lineNumber":510,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` deletes all contacts and meetings.","lastModifiedDate":"2023-03-27"},{"lineNumber":511,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":512,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":513,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":514,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC7 - User wants to exit**","lastModifiedDate":"2023-03-27"},{"lineNumber":515,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":516,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":517,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":518,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to exit.","lastModifiedDate":"2023-03-27"},{"lineNumber":519,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` closes.","lastModifiedDate":"2023-03-27"},{"lineNumber":520,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":521,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":522,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":523,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC8 - Add a meeting**","lastModifiedDate":"2023-03-27"},{"lineNumber":524,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":525,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":526,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":527,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to add a meeting.","lastModifiedDate":"2023-03-27"},{"lineNumber":528,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` adds that meeting.","lastModifiedDate":"2023-03-27"},{"lineNumber":529,"author":{"gitId":"Beebeeoii"},"content":"3. `QuickContacts` shows new meeting in list.","lastModifiedDate":"2023-03-27"},{"lineNumber":530,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":531,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":532,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":533,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":534,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":535,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1a. String in a field illegal.","lastModifiedDate":"2023-03-05"},{"lineNumber":536,"author":{"gitId":"Beebeeoii"},"content":"  * 1a1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":537,"author":{"gitId":"Beebeeoii"},"content":"  * Use case resumes at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":538,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":539,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC9 - Delete a meeting**","lastModifiedDate":"2023-03-27"},{"lineNumber":540,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":541,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":542,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":543,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to list meetings.","lastModifiedDate":"2023-03-27"},{"lineNumber":544,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` shows a list of meetings.","lastModifiedDate":"2023-03-27"},{"lineNumber":545,"author":{"gitId":"Beebeeoii"},"content":"3. User requests to delete a specific meeting in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":546,"author":{"gitId":"Beebeeoii"},"content":"4. `QuickContacts` deletes the meeting.","lastModifiedDate":"2023-03-27"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":548,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":549,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":550,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":551,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":552,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":553,"author":{"gitId":"Beebeeoii"},"content":"  * Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":555,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":556,"author":{"gitId":"Beebeeoii"},"content":"  * 3a1. `QuickContacts` shows an error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":557,"author":{"gitId":"Beebeeoii"},"content":"  * Use case resumes at step 2.","lastModifiedDate":"2023-03-27"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":559,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC10 - Edit a meeting**","lastModifiedDate":"2023-03-27"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":561,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":563,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to edit a meeting.","lastModifiedDate":"2023-03-27"},{"lineNumber":564,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` shows the meeting with the updated details.","lastModifiedDate":"2023-03-27"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":566,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":567,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":568,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":569,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":570,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1a. String in a field illegal.","lastModifiedDate":"2023-03-05"},{"lineNumber":571,"author":{"gitId":"Beebeeoii"},"content":"  * 1a1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":572,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":573,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":574,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1b. Meeting cannot be found.","lastModifiedDate":"2023-03-05"},{"lineNumber":575,"author":{"gitId":"Beebeeoii"},"content":"  * 1b1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":576,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":577,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":578,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC11 - Sort by meeting attribute**","lastModifiedDate":"2023-03-27"},{"lineNumber":579,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":580,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":581,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":582,"author":{"gitId":"Beebeeoii"},"content":"1. User wants to sort by a meeting attribute.","lastModifiedDate":"2023-03-27"},{"lineNumber":583,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` sorts the original list by order requested by user.","lastModifiedDate":"2023-03-27"},{"lineNumber":584,"author":{"gitId":"Beebeeoii"},"content":"3. `QuickContacts` shows the sorted list.","lastModifiedDate":"2023-03-27"},{"lineNumber":585,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":586,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC12 - Export Contacts**","lastModifiedDate":"2023-03-27"},{"lineNumber":587,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":588,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":589,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":590,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to export contacts.","lastModifiedDate":"2023-03-27"},{"lineNumber":591,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` shows the exported contacts.","lastModifiedDate":"2023-03-27"},{"lineNumber":592,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":593,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":594,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":595,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":596,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":597,"author":{"gitId":"jeremykhoo-NUS"},"content":"* 1a. String in a field illegal.","lastModifiedDate":"2023-03-27"},{"lineNumber":598,"author":{"gitId":"Beebeeoii"},"content":"  * 1a1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":599,"author":{"gitId":"Beebeeoii"},"content":"  * Use case resumes at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":600,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":601,"author":{"gitId":"chuakid"},"content":"* 1a. Person index not given.","lastModifiedDate":"2023-03-27"},{"lineNumber":602,"author":{"gitId":"Beebeeoii"},"content":"  * 1a1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":603,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":604,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":605,"author":{"gitId":"chuakid"},"content":"* 1b. Person index cannot be found.","lastModifiedDate":"2023-03-27"},{"lineNumber":606,"author":{"gitId":"Beebeeoii"},"content":"  * 1b1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":607,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":608,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":609,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC13 - Import Contacts**","lastModifiedDate":"2023-03-27"},{"lineNumber":610,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":611,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":612,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":613,"author":{"gitId":"chuakid"},"content":"1. User requests to import contacts.","lastModifiedDate":"2023-03-27"},{"lineNumber":614,"author":{"gitId":"Beebeeoii"},"content":"2. `QuickContacts` imports the meetings and updates the view.","lastModifiedDate":"2023-03-27"},{"lineNumber":615,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":616,"author":{"gitId":"chuakid"},"content":"    Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":617,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":618,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":619,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":620,"author":{"gitId":"chuakid"},"content":"* 1a. Contacts format malformed.","lastModifiedDate":"2023-03-27"},{"lineNumber":621,"author":{"gitId":"chuakid"},"content":"  * 1a1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":622,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":623,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":624,"author":{"gitId":"chuakid"},"content":"* 1b. Contacts not provided.","lastModifiedDate":"2023-03-27"},{"lineNumber":625,"author":{"gitId":"chuakid"},"content":"  * 1b1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":626,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":627,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":628,"author":{"gitId":"Beebeeoii"},"content":"* 1c. Duplicate contact without user indicating force import.","lastModifiedDate":"2023-03-27"},{"lineNumber":629,"author":{"gitId":"Beebeeoii"},"content":"  * 1c1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":630,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":631,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":632,"author":{"gitId":"Beebeeoii"},"content":"* 1d. User indicates force import.","lastModifiedDate":"2023-03-27"},{"lineNumber":633,"author":{"gitId":"chuakid"},"content":"  * All contacts imported.","lastModifiedDate":"2023-03-27"},{"lineNumber":634,"author":{"gitId":"Beebeeoii"},"content":"  * Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":635,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":636,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC14 - Export Meetings**","lastModifiedDate":"2023-03-27"},{"lineNumber":637,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":638,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":639,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":640,"author":{"gitId":"Beebeeoii"},"content":"1. User requests to export meetings.","lastModifiedDate":"2023-03-27"},{"lineNumber":641,"author":{"gitId":"Beebeeoii"},"content":"2. QuickContacts shows the exported meetings.","lastModifiedDate":"2023-03-27"},{"lineNumber":642,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":643,"author":{"gitId":"chuakid"},"content":"    Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":645,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":647,"author":{"gitId":"chuakid"},"content":"* 1a. Meeting index not given.","lastModifiedDate":"2023-03-27"},{"lineNumber":648,"author":{"gitId":"Beebeeoii"},"content":"  * 1a1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":649,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":650,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":651,"author":{"gitId":"chuakid"},"content":"* 1b. Meeting index cannot be found.","lastModifiedDate":"2023-03-27"},{"lineNumber":652,"author":{"gitId":"Beebeeoii"},"content":"  * 1b1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":653,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":654,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":655,"author":{"gitId":"Beebeeoii"},"content":"**Use case: UC15 - Import Meetings**","lastModifiedDate":"2023-03-27"},{"lineNumber":656,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":657,"author":{"gitId":"Beebeeoii"},"content":"MSS:","lastModifiedDate":"2023-03-27"},{"lineNumber":658,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":659,"author":{"gitId":"chuakid"},"content":"1. User requests to import meetings.","lastModifiedDate":"2023-03-27"},{"lineNumber":660,"author":{"gitId":"chuakid"},"content":"2. QuickContacts imports the meetings and updates the view.","lastModifiedDate":"2023-03-27"},{"lineNumber":661,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":662,"author":{"gitId":"chuakid"},"content":"    Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":663,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":664,"author":{"gitId":"Beebeeoii"},"content":"Extensions:","lastModifiedDate":"2023-03-27"},{"lineNumber":665,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":666,"author":{"gitId":"chuakid"},"content":"* 1a. Meetings format malformed.","lastModifiedDate":"2023-03-27"},{"lineNumber":667,"author":{"gitId":"chuakid"},"content":"  * 1a1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":668,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":669,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":670,"author":{"gitId":"chuakid"},"content":"* 1b. Meetings not provided.","lastModifiedDate":"2023-03-27"},{"lineNumber":671,"author":{"gitId":"chuakid"},"content":"  * 1b1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":672,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":673,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":674,"author":{"gitId":"Beebeeoii"},"content":"* 1c. Duplicate meeting without user indicating force import.","lastModifiedDate":"2023-03-27"},{"lineNumber":675,"author":{"gitId":"Beebeeoii"},"content":"  * 1c1. Show error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":676,"author":{"gitId":"Beebeeoii"},"content":"  * Use case continues at step 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":677,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":678,"author":{"gitId":"Beebeeoii"},"content":"* 1d. User indicates force import.","lastModifiedDate":"2023-03-27"},{"lineNumber":679,"author":{"gitId":"chuakid"},"content":"  * All meetings imported.","lastModifiedDate":"2023-03-27"},{"lineNumber":680,"author":{"gitId":"Beebeeoii"},"content":"  * Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":681,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":682,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"Beebeeoii"},"content":"4. Can support 1000 meetings with same amount of lag as 10 meeting.","lastModifiedDate":"2023-03-27"},{"lineNumber":688,"author":{"gitId":"Beebeeoii"},"content":"5. Commands should be intuitive to not technical people.","lastModifiedDate":"2023-03-27"},{"lineNumber":689,"author":{"gitId":"Beebeeoii"},"content":"6. Should be clear that meeting and people are 2 separate things.","lastModifiedDate":"2023-03-27"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Meetings**: Important dates with a duration and a place","lastModifiedDate":"2023-03-05"},{"lineNumber":695,"author":{"gitId":"Beebeeoii"},"content":"* **Find**: Searches by name field, case-insensitive, match all matching words individually","lastModifiedDate":"2023-03-20"},{"lineNumber":696,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **GUI**: Graphic User Interface","lastModifiedDate":"2023-03-05"},{"lineNumber":697,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **MSS**: Main Success Scenario","lastModifiedDate":"2023-03-05"},{"lineNumber":698,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **OS**: Operating System","lastModifiedDate":"2023-03-05"},{"lineNumber":699,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Java**: Programming Language by SUN Oracle","lastModifiedDate":"2023-03-05"},{"lineNumber":700,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2023-03-05"},{"lineNumber":701,"author":{"gitId":"Beebeeoii"},"content":"* **LinkedList**: Data structure that consists of nodes that contain data and a reference to the next node","lastModifiedDate":"2023-03-27"},{"lineNumber":702,"author":{"gitId":"Beebeeoii"},"content":"* **Time complexity**: Amount of time taken by an algorithm to run, as a function of the length of the input","lastModifiedDate":"2023-03-27"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":704,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"Beebeeoii"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-03-20"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"Beebeeoii"},"content":"2. Saving window preferences","lastModifiedDate":"2023-03-20"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"Beebeeoii"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":728,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"Beebeeoii"},"content":"### Deleting a contact","lastModifiedDate":"2023-03-20"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"Beebeeoii"},"content":"1. Deleting a contact while all contacts are being shown","lastModifiedDate":"2023-03-20"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"Beebeeoii"},"content":"   1. Prerequisites: List all contacts using the `list` command. Multiple contacts in the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"Beebeeoii"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":737,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"Beebeeoii"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":740,"author":{"gitId":"Beebeeoii"},"content":"      Expected: No contact is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-20"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"Beebeeoii"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":743,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"Beebeeoii"},"content":"### Creating a meeting","lastModifiedDate":"2023-03-20"},{"lineNumber":746,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":747,"author":{"gitId":"Beebeeoii"},"content":"1. Creating a meeting with a contact:","lastModifiedDate":"2023-03-20"},{"lineNumber":748,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":749,"author":{"gitId":"Beebeeoii"},"content":"    1. Prerequisites: Contact `Alex Yeo` exists in QuickContacts.","lastModifiedDate":"2023-03-20"},{"lineNumber":750,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":751,"author":{"gitId":"Beebeeoii"},"content":"    2. Test case: `addm m/Lunch with Alex dt/2003 15:00 p/Alex Yeo`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":752,"author":{"gitId":"Beebeeoii"},"content":"       Expected: New meeting with `Alex Yeo` on 20 March (of the current year) at 3PM is created, and it is displayed in the meetings list.","lastModifiedDate":"2023-03-20"},{"lineNumber":753,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":754,"author":{"gitId":"Beebeeoii"},"content":"    3. Test case: `addm m/Lunch with Alex dt/2003 25:00 p/Alex Yeo l/The Deck des/Weekly catch-up`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":755,"author":{"gitId":"Beebeeoii"},"content":"       Expected: Meeting is not created since `25:00` is an invalid time. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-20"},{"lineNumber":756,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":757,"author":{"gitId":"Beebeeoii"},"content":"2. Creating a meeting without a contact:","lastModifiedDate":"2023-03-20"},{"lineNumber":758,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":759,"author":{"gitId":"Beebeeoii"},"content":"    1. Test case: `addm m/Dinner at home dt/2003222`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":760,"author":{"gitId":"Beebeeoii"},"content":"       Expected: New meeting is created for `200322` (20 March 2022).","lastModifiedDate":"2023-03-20"},{"lineNumber":761,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":762,"author":{"gitId":"Beebeeoii"},"content":"    2. Test case: `addm m/Dinner at home`\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":763,"author":{"gitId":"Beebeeoii"},"content":"       Expected: Meeting is not created as a date(and time) is required. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-20"},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"Beebeeoii"},"content":"1. To simulate data file is not found:","lastModifiedDate":"2023-03-20"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"Beebeeoii"},"content":"   1. Prerequisite: `QuickContacts` is currently not running and the data files have been generated.","lastModifiedDate":"2023-03-20"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"Beebeeoii"},"content":"   2. Rename the file `quickcontacts.json` in the same directory to `quickcontacts.json.backup`.","lastModifiedDate":"2023-03-20"},{"lineNumber":772,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":773,"author":{"gitId":"Beebeeoii"},"content":"   3. Launch `QuickContacts`.","lastModifiedDate":"2023-03-20"},{"lineNumber":774,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":775,"author":{"gitId":"Beebeeoii"},"content":"   Expected: `QuickContacts` launches normally and re-generates the sample default data.","lastModifiedDate":"2023-03-20"},{"lineNumber":776,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":777,"author":{"gitId":"Beebeeoii"},"content":"2. To simulate data file is corrupted:","lastModifiedDate":"2023-03-20"},{"lineNumber":778,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":779,"author":{"gitId":"Beebeeoii"},"content":"   1. Prerequisite: `QuickContacts` is currently not running and the data files have been generated.","lastModifiedDate":"2023-03-20"},{"lineNumber":780,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":781,"author":{"gitId":"Beebeeoii"},"content":"   2. Open `quickcontacts.json` with a text editor, add a few random characters and save it.","lastModifiedDate":"2023-03-20"},{"lineNumber":782,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":783,"author":{"gitId":"Beebeeoii"},"content":"   3. Launch `QuickContacts`.","lastModifiedDate":"2023-03-20"},{"lineNumber":784,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":785,"author":{"gitId":"Beebeeoii"},"content":"   Expected: A warning message will be displayed and `QuickContacts` will start from an empty data file.","lastModifiedDate":"2023-03-20"},{"lineNumber":786,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":787,"author":{"gitId":"Beebeeoii"},"content":"3. To simulate restoring data from a backup data file:","lastModifiedDate":"2023-03-20"},{"lineNumber":788,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":789,"author":{"gitId":"Beebeeoii"},"content":"   1. Prerequisite: `QuickContacts` is currently not running and the data files have been generated and you have the backup file ready. Assume that the backup file is named `quickcontacts.json.backup`.","lastModifiedDate":"2023-03-20"},{"lineNumber":790,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":791,"author":{"gitId":"Beebeeoii"},"content":"   2. Delete `quickcontacts.json` from the directory that contains `quickcontacts.jar`.","lastModifiedDate":"2023-03-20"},{"lineNumber":792,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":793,"author":{"gitId":"Beebeeoii"},"content":"   3. Move `quickcontacts.json.backup` into the same directory as `quickcontacts.jar`.","lastModifiedDate":"2023-03-20"},{"lineNumber":794,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":795,"author":{"gitId":"Beebeeoii"},"content":"   4. Rename `quickcontacts.json.backup` to `quickcontacts.json`.","lastModifiedDate":"2023-03-20"},{"lineNumber":796,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"Beebeeoii"},"content":"   5. Launch `QuickContacts`.","lastModifiedDate":"2023-03-20"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"Beebeeoii"},"content":"   Expected: `QuickContacts` will launch normally with the data restored from the backup.","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Beebeeoii":288,"KS2499":36,"chuakid":94,"jeremykhoo-NUS":100,"-":281}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"  * :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `QuickContacts` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2020-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"Beebeeoii":1,"-":28}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"   1. Run the `seedu.quickcontacts.Main` and try a few commands.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Beebeeoii":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"   e.g. `seedu.quickcontacts.commons.StringUtilTest`","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"   e.g. `seedu.quickcontacts.storage.StorageManagerTest`","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"   e.g. `seedu.quickcontacts.logic.LogicManagerTest`","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Beebeeoii":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"\u003c!---","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"Overall structure of this user guide is adapted from https://ay2223s1-cs2103t-t12-2.github.io/tp/UserGuide.html","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"---\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"## About QuickContacts","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts is a **contacts and schedule management system** that enables you to track your contacts and manage your","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"schedule with ease! As a busy individual with a considerable number of contacts and meetings to attend, you can","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"**seamlessly save contact and meeting information** with QuickContacts. QuickContacts provides you with a **bird\u0027s eye","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"view of all your meetings**, making sure that you will never miss any of them again.","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"We, the developers at QuickContacts, understand the amount of time required to manage many contacts and maintaining a","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"schedule with many meetings with them. Perfect for individuals that are looking for efficiency, QuickContacts can be","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"used without having you to ever reach for your mouse. Complete with an **autocomplete assistance**, you can be assured","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"that your time spent managing your contacts and schedule is minimised!","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"**:bulb: Tip**\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"For more details about QuickContacts\u0027 features, you may head over to the [Features](#features) section below!","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts is specially designed for:","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"* Seamless creation and management of contacts and meetings","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"* Users who have a large number of contacts and meetings","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"* Typists","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"This user guide provides a detailed documentation on QuickContacts and serves as an introduction on how to incorporate","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts into your daily workflow. From having QuickContacts installed to making the best use out of QuickContacts,","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"this user guide has everything you need. Head over to the [Getting started](#getting-started) section to get onboard!","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"## Table of Contents","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"## Using this User Guide","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"Welcome to QuickContacts!","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"If you have yet to install QuickContacts, head over to the [Installation](#installation) section to install","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts.","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"### Icon Coloured Boxes","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"Throughout this user guide, you may observe coloured boxes that provide useful information with an icon on its top-left","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"indicating the type of information present.","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"**:bulb: Tip**\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"Tips empower you to make full use of QuickContacts.","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"**:information_source: Note**\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"Notes are general information that gives you a better understand of QuickContacts.","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"**:warning: Caution**\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"Cautions are warnings for you to note when using QuickContacts.","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"## Installation","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"1. Ensure you have [Java 11](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html) or above","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"installed in your computer","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"2. Download the latest version of `quickcontacts.jar` from [here](https://github.com/AY2223S2-CS2103T-T11-2/tp/releases)","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"3. Copy the file to an empty folder you want to use as the _home folder_ for QuickContacts","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"4. Double-click on the downloaded `.jar` file to launch QuickContacts","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"And that\u0027s it! You are good to go with QuickContacts.","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"**:bulb: Tip**\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts is packaged with sample contacts and meetings. To delete the default data, simply execute the `clear`","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"command.","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"**:warning: Caution**\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts will generate default files in the same directory it is installed in on its first launch. Avoid","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"editing or deleting such files unless you know what you are doing!","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"## Quick Reference Guide","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"This section will walk you through the essential parts of understanding and using QuickContacts in detail.","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"### User Interface Layout","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"Upon launching QuickContacts, you will be greeted by the following Graphical User Interface (GUI).","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"![Annotated UI Layout](images/UiLayoutAnnotated.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"We can break the GUI into several parts:","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"1. **Menu Bar**: This is where you find auxiliary features","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"2. **Result Display Box**: This is where you get feedback from the command executed","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"3. **Meetings List**: This is where you view all your meetings","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"4. **Contacts List**: This is where you view all your contacts","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"5. **Command Box**: This is where you input commands to interact with QuickContacts","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"### Command Format","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts provides a powerful Command Line Interface (CLI) which rely heavily on commands. In this","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"subsection, we will discover how the commands are designed.","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"#### Prefix","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"Prefixes are placeholders in a command that uniquely identify different input parameters. Each prefix is","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"_typically_ followed by the corresponding input data.","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"**:information_source: Note**\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"* There are some input parameters that do not require any corresponding input data.","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"* There are some input data that share the same prefix. For example: `CONTACT_PHONE_NUMBER` and `MEETING_ATTENDEE`","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"  share the same prefix `p/`.","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"| Prefix   | Corresponding Input Data                     |","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"|----------|----------------------------------------------|","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"| `a/`     | `CONTACT_ADDRESS`                            |","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"| `des/`   | `MEETING_DESCRIPTION`                        |","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"| `dt/`    | `MEETING_DATE_TIME`                          |","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"| `e/`     | `CONTACT_EMAIL`                              |","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"| `end/`   | `MEETING_EXPORT_END_DATE`                    |","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"| `f/`     | -                                            |","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"| `l/`     | `MEETING_LOCATION`                           |","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"| `m/`     | `MEETING_TITLE`                              |","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"| `n/`     | `CONTACT_NAME`                               |","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"| `p/`     | `CONTACT_PHONE_NUMBER` or `MEETING_ATTENDEE` |","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"| `start/` | `MEETING_EXPORT_START_DATE`                  |","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"| `t/`     | `CONTACT_TAG`                                |","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"#### Understanding Commands","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"Now that we are familiar with the prefixes and corresponding input data, let us put them together and see how","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"a command works. Take the following as an example:","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"Command: `add n/CONTACT_NAME [p/CONTACT_PHONE_NUMBER] [e/CONTACT_EMAIL] [a/CONTACT_ADDRESS] [t/CONTACT_TAG]...`","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"| Command Component                                                                                     | Component Type  | Description                                                     |","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"|-------------------------------------------------------------------------------------------------------|-----------------|-----------------------------------------------------------------|","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"Beebeeoii"},"content":"| `add`                                                                                                 | Command Keyword | Represents the action executed by QuickContacts                 |","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"Beebeeoii"},"content":"| `n/`, `p/`, `e/`, `a/`, `t/`                                                                          | Prefix          | Uniquely identifies the corresponding input data                |","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"Beebeeoii"},"content":"| `CONTACT_NAME`\u003cbr/\u003e`CONTACT_PHONE_NUMBER`\u003cbr/\u003e`CONTACT_EMAIL`\u003cbr/\u003e`CONTACT_ADDRESS`\u003cbr/\u003e`CONTACT_TAG` | Input Data      | Placeholders for the actual data to be supplied for the command |","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"Beebeeoii"},"content":"**:information_source: Note**","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"Beebeeoii"},"content":"* `[]` means that the parameter is **optional**.","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"Beebeeoii"},"content":"* `...` means that the parameter can be **supplied multiple times** in the same command input. ","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"Beebeeoii"},"content":"A valid executable command of this example form is:","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"Beebeeoii"},"content":"`add n/Noah t/friend t/nus t/cs2103t`","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"Beebeeoii"},"content":"The above command would create a new contact with the name `Noah` and tags `friend`, `nus` and `cs2103t`.","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"Beebeeoii"},"content":"The phone number, email address and address of `Noah` will be left empty as they are not provided.","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"Beebeeoii"},"content":"**:bulb: Tip**\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"Beebeeoii"},"content":"Command prefixes can be specified in any order. For example: `add t/friend t/nus n/Noah t/cs2103t` is equivalent to our","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"Beebeeoii"},"content":"example above.","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"Beebeeoii"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"Beebeeoii"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"Beebeeoii"},"content":"**:information_source: Note:**","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":204,"author":{"gitId":"Beebeeoii"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"Beebeeoii"},"content":"the parameter will be taken.\u003cbr\u003ee.g. if you specify `n/Noah n/Peter`, only `n/Peter` will be taken.","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"Beebeeoii"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"Beebeeoii"},"content":"be ignored.\u003cbr\u003ee.g. `help 123` will be interpreted as `help`.","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"Beebeeoii"},"content":"## Features","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"chuakid"},"content":"### Theme toggling","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"chuakid"},"content":"Toggles the theme from dark to light or vice versa.","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"chuakid"},"content":"![toggle theme](images/toggleTheme.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"Beebeeoii"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-02-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"jeremykhoo-NUS"},"content":"### Sorting Meetings: `sortm`","lastModifiedDate":"2023-03-27"},{"lineNumber":298,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":299,"author":{"gitId":"jeremykhoo-NUS"},"content":"Sorts meetings in the address book by a specified attribute.","lastModifiedDate":"2023-03-27"},{"lineNumber":300,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":301,"author":{"gitId":"jeremykhoo-NUS"},"content":"Format: `sortm ATTRIBUTE [r]`","lastModifiedDate":"2023-03-27"},{"lineNumber":302,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":303,"author":{"gitId":"jeremykhoo-NUS"},"content":"* Sorts the meetings in the address book by the specified `ATTRIBUTE`, which can be one of the following: `m/` (meeting title), `dt/` (date/time), `l/` (location), or `des/` (description).","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"jeremykhoo-NUS"},"content":"* If the `r` option is included, the meetings will be sorted in reverse order.","lastModifiedDate":"2023-03-27"},{"lineNumber":305,"author":{"gitId":"jeremykhoo-NUS"},"content":"* Meetings with the same value for the specified attribute will be sorted by date/time in ascending order.","lastModifiedDate":"2023-03-27"},{"lineNumber":306,"author":{"gitId":"jeremykhoo-NUS"},"content":"* Example: `sortm m/` sorts meetings by title in ascending order.","lastModifiedDate":"2023-03-27"},{"lineNumber":307,"author":{"gitId":"jeremykhoo-NUS"},"content":"* Example: `sortm dt/r` sorts meetings by date/time in descending order.","lastModifiedDate":"2023-03-27"},{"lineNumber":308,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":309,"author":{"gitId":"jeremykhoo-NUS"},"content":"### Editing a meeting: `editm`","lastModifiedDate":"2023-03-27"},{"lineNumber":310,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":311,"author":{"gitId":"jeremykhoo-NUS"},"content":"Edits an existing meeting in the meeting book.","lastModifiedDate":"2023-03-27"},{"lineNumber":312,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":313,"author":{"gitId":"jeremykhoo-NUS"},"content":"Format: `editm INDEX [t/TITLE] [dt/DATE] [l/LOCATION] [des/DESCRIPTION]`","lastModifiedDate":"2023-03-27"},{"lineNumber":314,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"jeremykhoo-NUS"},"content":"* Edits the meeting at the specified `INDEX`. The index refers to the index number shown in the displayed meeting list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-27"},{"lineNumber":316,"author":{"gitId":"jeremykhoo-NUS"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"jeremykhoo-NUS"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-03-27"},{"lineNumber":318,"author":{"gitId":"jeremykhoo-NUS"},"content":"* The `DATE`, `START_TIME` and `END_TIME` must be provided in the format `YYYY-MM-DD`, `HH:MM` (24-hour) respectively.","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":320,"author":{"gitId":"jeremykhoo-NUS"},"content":"Examples:","lastModifiedDate":"2023-03-27"},{"lineNumber":321,"author":{"gitId":"jeremykhoo-NUS"},"content":"* `editm 1 t/Project Update dt/2023-04-01 10:00`  Edits the date first meeting to be on `2023-04-01`, and change its title to \"Project Update\".","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"KS2499"},"content":"### Adding a Meeting : `addm`","lastModifiedDate":"2023-03-24"},{"lineNumber":336,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":337,"author":{"gitId":"KS2499"},"content":"Adds a meeting to the address book.","lastModifiedDate":"2023-03-24"},{"lineNumber":338,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":339,"author":{"gitId":"KS2499"},"content":"Format: `addm m/TITLE [p/PERSON]... dt/DATE_TIME l/LOCATION des/DESCRIPTION`","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":341,"author":{"gitId":"KS2499"},"content":"Examples:","lastModifiedDate":"2023-03-24"},{"lineNumber":342,"author":{"gitId":"KS2499"},"content":"* `addm m/CS2103T Tutorial p/John Doe p/Jane Doe dt/2022-02-22 10:00 l/COM1-B103 des/CS2103T Tutorial`","lastModifiedDate":"2023-03-24"},{"lineNumber":343,"author":{"gitId":"KS2499"},"content":"* `addm m/CS2103T Tutorial p/John Doe p/Mary Jane dt/2022-02-22 22:22 l/COM1-B103 des/CS2101 Tutorial`","lastModifiedDate":"2023-03-24"},{"lineNumber":344,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":345,"author":{"gitId":"KS2499"},"content":"### Finding Meetings by name : `findm`","lastModifiedDate":"2023-03-24"},{"lineNumber":346,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":347,"author":{"gitId":"KS2499"},"content":"Find meetings whose names contain any of the given keywords.","lastModifiedDate":"2023-03-24"},{"lineNumber":348,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":349,"author":{"gitId":"KS2499"},"content":"Format: `findm KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-24"},{"lineNumber":350,"author":{"gitId":"KS2499"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2023-03-24"},{"lineNumber":351,"author":{"gitId":"KS2499"},"content":"* Space is delimiter, so if you search `John Doe` it will list all people with either `John` or `Doe` in their name.","lastModifiedDate":"2023-03-24"},{"lineNumber":352,"author":{"gitId":"KS2499"},"content":"* Only the name of attendees in meeting are searched","lastModifiedDate":"2023-03-24"},{"lineNumber":353,"author":{"gitId":"KS2499"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-03-24"},{"lineNumber":354,"author":{"gitId":"KS2499"},"content":"* Meetings matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-24"},{"lineNumber":355,"author":{"gitId":"KS2499"},"content":"  e.g. `John Doe` will return Meetings that contain either `John Doe`, or `Doe John`","lastModifiedDate":"2023-03-24"},{"lineNumber":356,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":357,"author":{"gitId":"KS2499"},"content":"Examples:","lastModifiedDate":"2023-03-24"},{"lineNumber":358,"author":{"gitId":"KS2499"},"content":"* `findm John` returns `Meeting` that contains `attendees` whose Name contains `John`","lastModifiedDate":"2023-03-24"},{"lineNumber":359,"author":{"gitId":"KS2499"},"content":"* `findm John Mary` returns `Meeting` that contains `attendees` whose Name contains `John` or `Mary`","lastModifiedDate":"2023-03-24"},{"lineNumber":360,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":361,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-26"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":367,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts data are saved as a JSON file `[JAR file location]/data/quickcontacts.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-26"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":369,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":370,"author":{"gitId":"Beebeeoii"},"content":"If your changes to the data file makes its format invalid, QuickContacts will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-26"},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"chuakid"},"content":"### Exporting of contact : `export`","lastModifiedDate":"2023-03-22"},{"lineNumber":378,"author":{"gitId":"chuakid"},"content":"* Exports the persons at the specified `INDEX`es.","lastModifiedDate":"2023-03-22"},{"lineNumber":379,"author":{"gitId":"chuakid"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-22"},{"lineNumber":380,"author":{"gitId":"chuakid"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-22"},{"lineNumber":381,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":382,"author":{"gitId":"chuakid"},"content":"Format: `export p/ INDEX1 p/ INDEX2`","lastModifiedDate":"2023-03-22"},{"lineNumber":383,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":384,"author":{"gitId":"chuakid"},"content":"### Importing of contacts : `import`","lastModifiedDate":"2023-03-22"},{"lineNumber":385,"author":{"gitId":"chuakid"},"content":"* Imports the persons in the provided JSON.","lastModifiedDate":"2023-03-22"},{"lineNumber":386,"author":{"gitId":"chuakid"},"content":"* The JSON **must contain a valid array of persons** ","lastModifiedDate":"2023-03-22"},{"lineNumber":387,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":388,"author":{"gitId":"chuakid"},"content":"Example:","lastModifiedDate":"2023-03-22"},{"lineNumber":389,"author":{"gitId":"chuakid"},"content":"```json","lastModifiedDate":"2023-03-22"},{"lineNumber":390,"author":{"gitId":"chuakid"},"content":"[","lastModifiedDate":"2023-03-22"},{"lineNumber":391,"author":{"gitId":"chuakid"},"content":"  {","lastModifiedDate":"2023-03-22"},{"lineNumber":392,"author":{"gitId":"chuakid"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2023-03-22"},{"lineNumber":393,"author":{"gitId":"chuakid"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2023-03-22"},{"lineNumber":394,"author":{"gitId":"chuakid"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2023-03-22"},{"lineNumber":395,"author":{"gitId":"chuakid"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2023-03-22"},{"lineNumber":396,"author":{"gitId":"chuakid"},"content":"    \"tagged\": [","lastModifiedDate":"2023-03-22"},{"lineNumber":397,"author":{"gitId":"chuakid"},"content":"      \"friends\"","lastModifiedDate":"2023-03-22"},{"lineNumber":398,"author":{"gitId":"chuakid"},"content":"    ]","lastModifiedDate":"2023-03-22"},{"lineNumber":399,"author":{"gitId":"chuakid"},"content":"  },","lastModifiedDate":"2023-03-22"},{"lineNumber":400,"author":{"gitId":"chuakid"},"content":"  {","lastModifiedDate":"2023-03-22"},{"lineNumber":401,"author":{"gitId":"chuakid"},"content":"    \"name\": \"Benson Meier\",","lastModifiedDate":"2023-03-22"},{"lineNumber":402,"author":{"gitId":"chuakid"},"content":"    \"phone\": \"98765432\",","lastModifiedDate":"2023-03-22"},{"lineNumber":403,"author":{"gitId":"chuakid"},"content":"    \"email\": \"johnd@example.com\",","lastModifiedDate":"2023-03-22"},{"lineNumber":404,"author":{"gitId":"chuakid"},"content":"    \"address\": \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2023-03-22"},{"lineNumber":405,"author":{"gitId":"chuakid"},"content":"    \"tagged\": [","lastModifiedDate":"2023-03-22"},{"lineNumber":406,"author":{"gitId":"chuakid"},"content":"      \"owesMoney\",","lastModifiedDate":"2023-03-22"},{"lineNumber":407,"author":{"gitId":"chuakid"},"content":"      \"friends\"","lastModifiedDate":"2023-03-22"},{"lineNumber":408,"author":{"gitId":"chuakid"},"content":"    ]","lastModifiedDate":"2023-03-22"},{"lineNumber":409,"author":{"gitId":"chuakid"},"content":"  }","lastModifiedDate":"2023-03-22"},{"lineNumber":410,"author":{"gitId":"chuakid"},"content":"]","lastModifiedDate":"2023-03-22"},{"lineNumber":411,"author":{"gitId":"chuakid"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":412,"author":{"gitId":"chuakid"},"content":"Optional Parameter `f/` that forces imports regardless of duplicate values.","lastModifiedDate":"2023-03-27"},{"lineNumber":413,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":414,"author":{"gitId":"chuakid"},"content":"Format: `import JSON f/`","lastModifiedDate":"2023-03-27"},{"lineNumber":415,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":416,"author":{"gitId":"chuakid"},"content":"### Export meetings : `exportm`","lastModifiedDate":"2023-03-23"},{"lineNumber":417,"author":{"gitId":"chuakid"},"content":"* Exports the meetings at the specified `INDEX`es, between `start` and `end` dates.","lastModifiedDate":"2023-03-23"},{"lineNumber":418,"author":{"gitId":"chuakid"},"content":"* The indexes refer to the index numbers shown in the displayed meetings list.","lastModifiedDate":"2023-03-23"},{"lineNumber":419,"author":{"gitId":"chuakid"},"content":"* The indexes **must be positive integers** 1, 2, 3","lastModifiedDate":"2023-03-23"},{"lineNumber":420,"author":{"gitId":"chuakid"},"content":"* The start and end dates must be valid dates in the DD/MM/YY format","lastModifiedDate":"2023-03-23"},{"lineNumber":421,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":422,"author":{"gitId":"chuakid"},"content":"Format: `exportm p/ INDEX1 p/ INDEX2 start/ START_DATE end/ END_DATE`","lastModifiedDate":"2023-03-23"},{"lineNumber":423,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":424,"author":{"gitId":"chuakid"},"content":"### Import meetings : `importm`","lastModifiedDate":"2023-03-23"},{"lineNumber":425,"author":{"gitId":"chuakid"},"content":"* Imports the meetings in the provided JSON.","lastModifiedDate":"2023-03-23"},{"lineNumber":426,"author":{"gitId":"chuakid"},"content":"* The JSON **must contain a valid array of meetings**","lastModifiedDate":"2023-03-23"},{"lineNumber":427,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":428,"author":{"gitId":"chuakid"},"content":"Example:","lastModifiedDate":"2023-03-23"},{"lineNumber":429,"author":{"gitId":"chuakid"},"content":"```json","lastModifiedDate":"2023-03-23"},{"lineNumber":430,"author":{"gitId":"chuakid"},"content":"[","lastModifiedDate":"2023-03-23"},{"lineNumber":431,"author":{"gitId":"chuakid"},"content":"  {","lastModifiedDate":"2023-03-23"},{"lineNumber":432,"author":{"gitId":"chuakid"},"content":"    \"title\": \"Dinner with Alice\",","lastModifiedDate":"2023-03-23"},{"lineNumber":433,"author":{"gitId":"chuakid"},"content":"    \"dateTime\": \"01/02/2023 19:00\",","lastModifiedDate":"2023-03-23"},{"lineNumber":434,"author":{"gitId":"chuakid"},"content":"    \"attendees\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":435,"author":{"gitId":"chuakid"},"content":"      {","lastModifiedDate":"2023-03-23"},{"lineNumber":436,"author":{"gitId":"chuakid"},"content":"        \"name\": \"Alice Pauline\",","lastModifiedDate":"2023-03-23"},{"lineNumber":437,"author":{"gitId":"chuakid"},"content":"        \"phone\": \"94351253\",","lastModifiedDate":"2023-03-23"},{"lineNumber":438,"author":{"gitId":"chuakid"},"content":"        \"email\": \"alice@example.com\",","lastModifiedDate":"2023-03-23"},{"lineNumber":439,"author":{"gitId":"chuakid"},"content":"        \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2023-03-23"},{"lineNumber":440,"author":{"gitId":"chuakid"},"content":"        \"tagged\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":441,"author":{"gitId":"chuakid"},"content":"          \"friends\"","lastModifiedDate":"2023-03-23"},{"lineNumber":442,"author":{"gitId":"chuakid"},"content":"        ]","lastModifiedDate":"2023-03-23"},{"lineNumber":443,"author":{"gitId":"chuakid"},"content":"      }","lastModifiedDate":"2023-03-23"},{"lineNumber":444,"author":{"gitId":"chuakid"},"content":"    ],","lastModifiedDate":"2023-03-23"},{"lineNumber":445,"author":{"gitId":"chuakid"},"content":"    \"location\": \"NUS\",","lastModifiedDate":"2023-03-23"},{"lineNumber":446,"author":{"gitId":"chuakid"},"content":"    \"description\": \"Weekly catchup\"","lastModifiedDate":"2023-03-23"},{"lineNumber":447,"author":{"gitId":"chuakid"},"content":"  },","lastModifiedDate":"2023-03-23"},{"lineNumber":448,"author":{"gitId":"chuakid"},"content":"  {","lastModifiedDate":"2023-03-23"},{"lineNumber":449,"author":{"gitId":"chuakid"},"content":"    \"title\": \"Study session with Benson and Carl\",","lastModifiedDate":"2023-03-23"},{"lineNumber":450,"author":{"gitId":"chuakid"},"content":"    \"dateTime\": \"02/03/2023 15:00\",","lastModifiedDate":"2023-03-23"},{"lineNumber":451,"author":{"gitId":"chuakid"},"content":"    \"attendees\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":452,"author":{"gitId":"chuakid"},"content":"      {","lastModifiedDate":"2023-03-23"},{"lineNumber":453,"author":{"gitId":"chuakid"},"content":"        \"name\": \"Benson Meier\",","lastModifiedDate":"2023-03-23"},{"lineNumber":454,"author":{"gitId":"chuakid"},"content":"        \"phone\": \"98765432\",","lastModifiedDate":"2023-03-23"},{"lineNumber":455,"author":{"gitId":"chuakid"},"content":"        \"email\": \"johnd@example.com\",","lastModifiedDate":"2023-03-23"},{"lineNumber":456,"author":{"gitId":"chuakid"},"content":"        \"address\": \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2023-03-23"},{"lineNumber":457,"author":{"gitId":"chuakid"},"content":"        \"tagged\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":458,"author":{"gitId":"chuakid"},"content":"          \"owesMoney\",","lastModifiedDate":"2023-03-23"},{"lineNumber":459,"author":{"gitId":"chuakid"},"content":"          \"friends\"","lastModifiedDate":"2023-03-23"},{"lineNumber":460,"author":{"gitId":"chuakid"},"content":"        ]","lastModifiedDate":"2023-03-23"},{"lineNumber":461,"author":{"gitId":"chuakid"},"content":"      },","lastModifiedDate":"2023-03-23"},{"lineNumber":462,"author":{"gitId":"chuakid"},"content":"      {","lastModifiedDate":"2023-03-23"},{"lineNumber":463,"author":{"gitId":"chuakid"},"content":"        \"name\": \"Carl Kurz\",","lastModifiedDate":"2023-03-23"},{"lineNumber":464,"author":{"gitId":"chuakid"},"content":"        \"phone\": \"95352563\",","lastModifiedDate":"2023-03-23"},{"lineNumber":465,"author":{"gitId":"chuakid"},"content":"        \"email\": \"heinz@example.com\",","lastModifiedDate":"2023-03-23"},{"lineNumber":466,"author":{"gitId":"chuakid"},"content":"        \"address\": \"wall street\",","lastModifiedDate":"2023-03-23"},{"lineNumber":467,"author":{"gitId":"chuakid"},"content":"        \"tagged\": []","lastModifiedDate":"2023-03-23"},{"lineNumber":468,"author":{"gitId":"chuakid"},"content":"      }","lastModifiedDate":"2023-03-23"},{"lineNumber":469,"author":{"gitId":"chuakid"},"content":"    ],","lastModifiedDate":"2023-03-23"},{"lineNumber":470,"author":{"gitId":"chuakid"},"content":"    \"location\": \"Central Library\",","lastModifiedDate":"2023-03-23"},{"lineNumber":471,"author":{"gitId":"chuakid"},"content":"    \"description\": \"Study for finals\"","lastModifiedDate":"2023-03-23"},{"lineNumber":472,"author":{"gitId":"chuakid"},"content":"  },","lastModifiedDate":"2023-03-23"},{"lineNumber":473,"author":{"gitId":"chuakid"},"content":"  {","lastModifiedDate":"2023-03-23"},{"lineNumber":474,"author":{"gitId":"chuakid"},"content":"    \"title\": \"Zoom meeting for agenda planning\",","lastModifiedDate":"2023-03-23"},{"lineNumber":475,"author":{"gitId":"chuakid"},"content":"    \"dateTime\": \"13/03/2023 12:45\",","lastModifiedDate":"2023-03-23"},{"lineNumber":476,"author":{"gitId":"chuakid"},"content":"    \"attendees\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":477,"author":{"gitId":"chuakid"},"content":"      {","lastModifiedDate":"2023-03-23"},{"lineNumber":478,"author":{"gitId":"chuakid"},"content":"        \"name\": \"Alice Pauline\",","lastModifiedDate":"2023-03-23"},{"lineNumber":479,"author":{"gitId":"chuakid"},"content":"        \"phone\": \"94351253\",","lastModifiedDate":"2023-03-23"},{"lineNumber":480,"author":{"gitId":"chuakid"},"content":"        \"email\": \"alice@example.com\",","lastModifiedDate":"2023-03-23"},{"lineNumber":481,"author":{"gitId":"chuakid"},"content":"        \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2023-03-23"},{"lineNumber":482,"author":{"gitId":"chuakid"},"content":"        \"tagged\": [","lastModifiedDate":"2023-03-23"},{"lineNumber":483,"author":{"gitId":"chuakid"},"content":"          \"friends\"","lastModifiedDate":"2023-03-23"},{"lineNumber":484,"author":{"gitId":"chuakid"},"content":"        ]","lastModifiedDate":"2023-03-23"},{"lineNumber":485,"author":{"gitId":"chuakid"},"content":"      }","lastModifiedDate":"2023-03-23"},{"lineNumber":486,"author":{"gitId":"chuakid"},"content":"    ],","lastModifiedDate":"2023-03-23"},{"lineNumber":487,"author":{"gitId":"chuakid"},"content":"    \"location\": \"https://us02web.zoom.us/j/99999999999?pwd\u003dABCdEfGHiJkYkRuYW5WTLmNopQrSt12\",","lastModifiedDate":"2023-03-23"},{"lineNumber":488,"author":{"gitId":"chuakid"},"content":"    \"description\": \"Plan for project work\"","lastModifiedDate":"2023-03-23"},{"lineNumber":489,"author":{"gitId":"chuakid"},"content":"  }","lastModifiedDate":"2023-03-23"},{"lineNumber":490,"author":{"gitId":"chuakid"},"content":"]","lastModifiedDate":"2023-03-23"},{"lineNumber":491,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":492,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":493,"author":{"gitId":"chuakid"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":494,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":495,"author":{"gitId":"chuakid"},"content":"Optional Parameter `f/` that forces imports regardless of duplicate values.","lastModifiedDate":"2023-03-27"},{"lineNumber":496,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":497,"author":{"gitId":"chuakid"},"content":"Format: `import JSON f/`","lastModifiedDate":"2023-03-27"},{"lineNumber":498,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":499,"author":{"gitId":"Beebeeoii"},"content":"### Delete meetings : `delm`","lastModifiedDate":"2023-03-27"},{"lineNumber":500,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":501,"author":{"gitId":"Beebeeoii"},"content":"Deletes the specified meeting.","lastModifiedDate":"2023-03-27"},{"lineNumber":502,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":503,"author":{"gitId":"Beebeeoii"},"content":"Format: `delm INDEX`","lastModifiedDate":"2023-03-27"},{"lineNumber":504,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":505,"author":{"gitId":"Beebeeoii"},"content":"* Deletes the meeting at the specified `INDEX`.","lastModifiedDate":"2023-03-27"},{"lineNumber":506,"author":{"gitId":"Beebeeoii"},"content":"* The index refers to the index number shown in the displayed meetings list.","lastModifiedDate":"2023-03-27"},{"lineNumber":507,"author":{"gitId":"Beebeeoii"},"content":"* The index must be a positive integer 1, 2, 3...","lastModifiedDate":"2023-03-27"},{"lineNumber":508,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":509,"author":{"gitId":"Beebeeoii"},"content":"Examples:","lastModifiedDate":"2023-03-27"},{"lineNumber":510,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":511,"author":{"gitId":"Beebeeoii"},"content":"* `listm` followed by `delm 2` deletes the 2nd meeting.","lastModifiedDate":"2023-03-27"},{"lineNumber":512,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":513,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"Beebeeoii"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous QuickContacts home folder.","lastModifiedDate":"2023-02-26"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"KS2499"},"content":"| Action                | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":525,"author":{"gitId":"Beebeeoii"},"content":"|-----------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":526,"author":{"gitId":"Beebeeoii"},"content":"| **Create a contact**  | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-03-27"},{"lineNumber":527,"author":{"gitId":"Beebeeoii"},"content":"| **Reset all data**    | `clear`                                                                                                                                                               |","lastModifiedDate":"2023-03-27"},{"lineNumber":528,"author":{"gitId":"Beebeeoii"},"content":"| **Delete a contact**  | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":529,"author":{"gitId":"Beebeeoii"},"content":"| **Edit a contact**    | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2023-03-27"},{"lineNumber":530,"author":{"gitId":"Beebeeoii"},"content":"| **Find a contact**    | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                            |","lastModifiedDate":"2023-03-27"},{"lineNumber":531,"author":{"gitId":"Beebeeoii"},"content":"| **List all contacts** | `list`                                                                                                                                                                |","lastModifiedDate":"2023-03-27"},{"lineNumber":532,"author":{"gitId":"KS2499"},"content":"| **Help**              | `help`                                                                                                                                                                |","lastModifiedDate":"2023-03-02"},{"lineNumber":533,"author":{"gitId":"Beebeeoii"},"content":"| **List all meetings** | `listm`                                                                                                                                                               |","lastModifiedDate":"2023-03-27"},{"lineNumber":534,"author":{"gitId":"Beebeeoii"},"content":"| **Create a meeting**  | `addm m/TITLE dt/DATE_TIME p/CONTACT_NAME... l/LOCATION des/DESCRIPTION`                                                                                              |","lastModifiedDate":"2023-03-27"},{"lineNumber":535,"author":{"gitId":"Beebeeoii"},"content":"| **Edit a meeting**    | `editm INDEX [m/TITLE] [dt/DATE_TIME] [p/CONTACT_NAME]... [l/LOCATION] [des/DESCRIPTION]`                                                                             |","lastModifiedDate":"2023-03-27"},{"lineNumber":536,"author":{"gitId":"Beebeeoii"},"content":"| **Delete a meeting**  | `delm INDEX` \u003cbr\u003e e.g., `deletem 3`                                                                                                                                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":537,"author":{"gitId":"Beebeeoii"},"content":"| **Export a contact**  | `export p/INDEX...` \u003cbr\u003e e.g., `export p/1 p/2 p/3`                                                                                                                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":538,"author":{"gitId":"Beebeeoii"},"content":"| **Export a meeting**  | `exportm m/INDEX...` \u003cbr\u003e e.g., `exportm m/1 m/2 m/3`                                                                                                                 |","lastModifiedDate":"2023-03-27"},{"lineNumber":539,"author":{"gitId":"Beebeeoii"},"content":"| **Import a contact**  | `import VALID_JSON`                                                                                                                                                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":540,"author":{"gitId":"Beebeeoii"},"content":"| **Import a meeting**  | `importm VALID_JSON`                                                                                                                                                  |","lastModifiedDate":"2023-03-27"},{"lineNumber":541,"author":{"gitId":"Beebeeoii"},"content":"| **Sort meetings**     | `sortm SORT_FIELD` \u003cbr\u003e e.g., `sortm dt/`                                                                                                                             |","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Beebeeoii":196,"KS2499":28,"chuakid":128,"jeremykhoo-NUS":29,"-":160}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Beebeeoii"},"content":"    content: \"QuickContacts\";","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Beebeeoii":1,"-":294}},{"path":"docs/diagrams/MeetingModelDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"!include style.puml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"Package MeetingModel \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"Class Meeting","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"Class Title","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"Class DateTime","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"Class Location","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"Class Description","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"Meeting *--\u003e Title","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"Meeting *--\u003e DateTime","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"Meeting *--\u003e \"~* attendees\\n\" Person","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"Meeting *--\u003e Location","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"Meeting *--\u003e Description","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Beebeeoii":20}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"Class UniqueMeetingList","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"Class Meeting","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"AddressBook *--\u003e \"1\" UniqueMeetingList","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"UniquePersonList --\u003e \"~*\" Person","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"UniqueMeetingList --\u003e \"~*\" Meeting","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"ModelManager --\u003e \"*\" Meeting","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Beebeeoii":6,"-":35}},{"path":"docs/diagrams/PersonModelDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"!include style.puml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"Package PersonModel \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"Class Person","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"Class Address","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"Class Email","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"Class Name","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"Class Phone","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"Class Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"Person *--\u003e Name","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"Person *--\u003e Phone","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"Person *--\u003e Email","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"Person *--\u003e Address","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Beebeeoii":21}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"Class MeetingListPanel","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"Class MeetingCard","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"MainWindow *-down-\u003e \"1\" MeetingListPanel","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"MeetingListPanel -down-\u003e \"*\" MeetingCard","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"MeetingListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"MeetingCard ..\u003e Model","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"MeetingListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Beebeeoii":7,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"title: QuickContacts","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"QuickContacts (QC) is a **cross-platform desktop application** that enables you to easily manage your contacts and meetings **all in one place**! With QC, you will never miss any meetings with your friends or colleagues.","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"QC is specially designed for:","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"* _Seamless_ creation and management of contacts and meetings","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"* Users who have a _large_ number of contacts and _meetings_","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"* Typists","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"If you are interested in using QuickContacts, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"If you are interested about developing QuickContacts, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Beebeeoii":11,"-":15}},{"path":"docs/team/beebeeoii.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"title: Lee Jia Wei\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"### Project: QuickContacts","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"To Be Added Soon","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbeebeeoii\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zFR\u003dfalse\u0026zA\u003dBeebeeoii\u0026zR\u003dAY2223S2-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026zACS\u003d39\u0026zS\u003d2023-02-17\u0026zFS\u003dbeebeeoii\u0026zU\u003d2023-02-28\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos)","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"* **Project management**:","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"  * Set up issues for `v1.1`","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"  * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    * Initialised user guide\u0027s base skeleton and formatting","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    * To Be Added Soon","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"* **Community**:","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"  To Be Added Soon","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"* **Tools**:","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"  To Be Added Soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Beebeeoii":26}},{"path":"docs/team/chuakid.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"title: Kelvin Chua\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"### Project: QuickContacts","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"## Code contributed:","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"[RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dchuakid\u0026tabRepo\u003dAY2223S2-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"* Export and Import of contacts","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"* Export and Import of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"* Modified DateTime to use an Optional for time and added the comparison logic","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"* Added UI for meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"* Improved UI with different color scheme and scaling panels","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"## Project management","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"* Managed the repository for the project","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"* Set up issues for `v1.1`, `v1.2`, `v1.3`","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"* Set up codecov for the repository","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"## Documentation","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"### User Guide:","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"* `import`","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"* `export`","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"* `importm`","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"* `exportm`","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"### Developer Guide:","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"* `import`","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"* `export`","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"* `importm`","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"* `exportm`","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"## Community","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"### Reviewed PRs","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"* [#84](https://github.com/AY2223S2-CS2103T-T11-2/tp/pull/84)","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"* [#47](https://github.com/AY2223S2-CS2103T-T11-2/tp/pull/67)","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"* [#45](https://github.com/AY2223S2-CS2103T-T11-2/tp/pull/45)","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"chuakid":47}},{"path":"docs/team/jeremykhoo-nus.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeremykhoo-NUS"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"jeremykhoo-NUS"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"jeremykhoo-NUS"},"content":"title: JeremyKhoo\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jeremykhoo-NUS"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jeremykhoo-NUS"},"content":"### Project: QuickContacts","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jeremykhoo-NUS"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djeremykhoo\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * Implemented Edit command scaffolding","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * Reviewed Code for Meeting Scaffolding and View meeting features","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"jeremykhoo-NUS"},"content":"      * Added preliminary information to User guide","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jeremykhoo-NUS"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"jeremykhoo-NUS"},"content":"      * Added preliminary information to Developer guide","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jeremykhoo-NUS"},"content":"    To Be Added Soon","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"jeremykhoo-NUS"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jeremykhoo-NUS"},"content":"The following are the tools I used to contribut to the project","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jeremykhoo-NUS"},"content":"  * Git","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jeremykhoo-NUS"},"content":"  * Vim","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jeremykhoo-NUS"},"content":"  * JDB","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jeremykhoo-NUS"},"content":"  * Gradle","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jeremykhoo-NUS":30}},{"path":"docs/team/ks2499.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"title: Kannusami Saraan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"### Project: QuickContacts","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"To Be Added Soon","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dks2499\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zFR\u003dfalse\u0026zA\u003dBeebeeoii\u0026zR\u003dAY2223S2-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026zACS\u003d39\u0026zS\u003d2023-02-17\u0026zFS\u003dbeebeeoii\u0026zU\u003d2023-02-28\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos)","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    * Helped with creating issues and milestones for `v1.1`","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"        * Updated User Guide","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"        * To Be Added Soon","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    * README:","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"        * Update Contents to match own project","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"  To Be Added Soon","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"  To Be Added Soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"KS2499":28}},{"path":"docs/team/thedesalizes.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thedesalizes"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"thedesalizes"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"thedesalizes"},"content":"title: Ethan Tan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"thedesalizes"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"thedesalizes"},"content":"### Project: QuickContacts","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"thedesalizes"},"content":"To Be Added Soon","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"thedesalizes"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"thedesalizes"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"thedesalizes"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"thedesalizes"},"content":"    * To be Added Soon","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"thedesalizes"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"thedesalizes"},"content":"    * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"thedesalizes"},"content":"      * To Be Added Soon","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"thedesalizes"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"thedesalizes"},"content":"      * To Be Added Soon","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"thedesalizes"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"thedesalizes"},"content":"    To Be Added Soon","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"thedesalizes"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"thedesalizes"},"content":"  * To be Added Soon","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"thedesalizes":26}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"Create a `RemarkCommandParser` class in the `seedu.quickcontacts.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Beebeeoii"},"content":"Create a new `Remark` in `seedu.quickcontacts.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Beebeeoii"},"content":"Simply add the following to [`seedu.quickcontacts.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Beebeeoii":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"The `address` field in `Person` is actually an instance of the `seedu.quickcontacts.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Beebeeoii":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.quickcontacts.logic.Logic`.","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"A quick look at the `seedu.quickcontacts.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Beebeeoii":2,"-":299}},{"path":"src/main/java/seedu/quickcontacts/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.FileUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Beebeeoii":3,"-":61}},{"path":"src/main/java/seedu/quickcontacts/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Beebeeoii":1,"-":24}},{"path":"src/main/java/seedu/quickcontacts/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Config;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Cron;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Version;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.StringUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.Logic;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.LogicManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.jobs.CheckMeetingHasPassed;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.JsonQuickBookStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.QuickBookStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.Storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.StorageManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.ui.Ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.ui.UiManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    protected Cron cron;","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing QuickContacts ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        QuickBookStorage quickBookStorage \u003d new JsonQuickBookStorage(userPrefs.getQuickBookFilePath());","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        storage \u003d new StorageManager(quickBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        cron \u003d initCron();","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s quick book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"     * The data from the sample quick book will be used instead if {@code storage}\u0027s quick book is not found,","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"     * or an empty quick book will be used instead if errors occur when reading {@code storage}\u0027s quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        Optional\u003cReadOnlyQuickBook\u003e quickBookOptional;","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        ReadOnlyQuickBook initialData;","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"            quickBookOptional \u003d storage.readQuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"            if (!quickBookOptional.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"                logger.info(\"Data file not found. Will be starting with a sample QuickBook\");","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"            initialData \u003d quickBookOptional.orElseGet(SampleDataUtil::getSampleQuickBook);","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty QuickBook\");","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"            initialData \u003d new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty QuickBook\");","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"            initialData \u003d new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"    private Cron initCron() {","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        Cron cron \u003d Cron.getInstance();","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        logger.info(\"Initialised CRON engine\");","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        cron.addTask(new CheckMeetingHasPassed(model), 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        return cron;","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty QuickBook\");","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"Beebeeoii"},"content":"        logger.info(\"Starting QuickContacts \" + MainApp.VERSION);","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"Beebeeoii"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping QuickContacts ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"            cron.stop();","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"Beebeeoii"},"content":"            logger.info(\"CRON engine stopped\");","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":58,"-":140}},{"path":"src/main/java/seedu/quickcontacts/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":1,"-":62}},{"path":"src/main/java/seedu/quickcontacts/commons/core/Cron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.util.concurrent.ThreadPoolExecutor;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * Singleton CRON engine used for jobs.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public class Cron {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    private static Cron engine;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    private static ScheduledExecutorService executorService;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    private static final int POOL_SIZE \u003d 2;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     * Prevent multiple instantiation of CRON engines in the app.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private Cron() {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"        if (executorService \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"            executorService \u003d Executors.newScheduledThreadPool(POOL_SIZE);","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a job to the CRON to be executed per time interval.","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     * @param task Job to be executed by CRON engine.","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * @param seconds Time interval in seconds between every execution.","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public void addTask(TimerTask task, long seconds) {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        addTask(task, seconds, 0);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a job to the CRON to be executed per time interval.","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     * @param task Job to be executed by CRON engine.","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     * @param seconds Time interval in seconds between every execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"     * @param initialDelay Number of seconds before executing the job.","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    public void addTask(TimerTask task, long seconds, long initialDelay) {","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        executorService.scheduleAtFixedRate(task, initialDelay, seconds, TimeUnit.SECONDS);","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     * Gets an instance of {@code Cron}.","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     * @return The {@code Cron} instance.","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    public static Cron getInstance() {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        if (engine \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"            engine \u003d new Cron();","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        return engine;","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"     * Get number of tasks blocked in the CRON queue awaiting to be executed.","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"     * @return Size of the blocked queue.","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    public int size() {","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        return ((ThreadPoolExecutor) executorService).getQueue().size();","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the state of the CRON engine.","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"     * @return True if CRON engine is running, false otherwise.","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    public boolean isRunning() {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        if (executorService \u003d\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        return !executorService.isShutdown();","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"     * Stops and kills the CRON engine.","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public void stop() {","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        executorService.shutdown();","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        engine \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        executorService \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Beebeeoii":90}},{"path":"src/main/java/seedu/quickcontacts/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    private final boolean isDarkTheme;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        isDarkTheme \u003d true;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition, boolean isDarkTheme) {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"        this.isDarkTheme \u003d isDarkTheme;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"    public boolean isDarkTheme() {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"        return this.isDarkTheme;","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":1,"chuakid":9,"-":77}},{"path":"src/main/java/seedu/quickcontacts/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private static final String LOG_FILE \u003d \"quickcontacts.log\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":2,"-":110}},{"path":"src/main/java/seedu/quickcontacts/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_MEETINGS_LISTED_OVERVIEW \u003d \"Listed all meetings with attendees: [%s]\";","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_MEETINGS_ALL_LISTED_OVERVIEW \u003d \"Listed all meetings!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":1,"KS2499":3,"jeremykhoo-NUS":1,"-":12}},{"path":"src/main/java/seedu/quickcontacts/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":1,"-":115}},{"path":"src/main/java/seedu/quickcontacts/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core.index;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Beebeeoii":1,"-":53}},{"path":"src/main/java/seedu/quickcontacts/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":1,"-":10}},{"path":"src/main/java/seedu/quickcontacts/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":1,"-":20}},{"path":"src/main/java/seedu/quickcontacts/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.MainApp;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Beebeeoii":2,"-":40}},{"path":"src/main/java/seedu/quickcontacts/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":1,"-":34}},{"path":"src/main/java/seedu/quickcontacts/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Config;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Beebeeoii":3,"-":20}},{"path":"src/main/java/seedu/quickcontacts/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String...)},","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":2,"-":81}},{"path":"src/main/java/seedu/quickcontacts/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":3,"-":140}},{"path":"src/main/java/seedu/quickcontacts/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":2,"-":66}},{"path":"src/main/java/seedu/quickcontacts/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     * Suggests a {@code Prefix} to be inputted for the current command","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * input.","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     * @return The {@code AutocompleteResult} based on the command input.","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    AutocompleteResult autocomplete(String commandText);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the QuickBook.","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     * @see seedu.quickcontacts.model.Model#getQuickBook()","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    ReadOnlyQuickBook getQuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"     * @return an unmodifiable view of the filtered list of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the user prefs\u0027 quick book file path.","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    Path getQuickBookFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Beebeeoii":22,"KS2499":5,"-":38}},{"path":"src/main/java/seedu/quickcontacts/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.QuickContactsParser;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.Storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    private final QuickContactsParser quickContactsParser;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        quickContactsParser \u003d new QuickContactsParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        Command command \u003d quickContactsParser.parseCommand(commandText);","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"            storage.saveQuickBook(model.getQuickBook());","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult autocomplete(String commandText) {","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        return quickContactsParser.getAutocompleteSuggestion(commandText);","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    public ReadOnlyQuickBook getQuickBook() {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        return model.getQuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"    public Path getQuickBookFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        return model.getQuickBookFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Beebeeoii":26,"KS2499":4,"-":62}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":9,"-":58}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.model.meeting.DateTime.DATE_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.model.meeting.DateTime.TIME_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Description;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Title;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":" * Adds a meeting to the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    public static final String COMMAND_WORD \u003d \"addm\";","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a meeting to the address book. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        + PREFIX_MEETING_TITLE + \"MEETING \"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        + PREFIX_PERSON + \"NAME \"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        + PREFIX_DATETIME + DATE_FORMAT + \" \" + TIME_FORMAT + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"        + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        + PREFIX_DESCRIPTION + \"DESCRIPTION\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"        + PREFIX_MEETING_TITLE + \"Meeting with John \"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"        + PREFIX_PERSON + \"John Doe \"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"        + PREFIX_DATETIME + \"02/02/2022 12:00 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"        + PREFIX_LOCATION + \"Zoom \"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        + PREFIX_DESCRIPTION + \"Discuss about the project\";","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New meeting added: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book\";","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"    private final Title meetingTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"    private final Set\u003cName\u003e attendeeNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"    private final Location location;","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"    private final Description description;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"     * A more straightforward way to create an AddMeetingCommand to add a {@code Meeting} class.","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"     * Used primarily for testing.","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"     * @param meeting to be added","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"    public AddMeetingCommand(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        this.meetingTitle \u003d meeting.getTitle();","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        this.dateTime \u003d meeting.getDateTime();","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"        this.attendeeNames.addAll(meeting.getAttendees().stream().map(Person::getName).collect(Collectors.toSet()));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        this.location \u003d meeting.getLocation();","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"        this.description \u003d meeting.getDescription();","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"     * Creates an AddMeetingCommand to add a {@code Meeting} class with the specified attributes {@code Title},","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"     * {@code attendees}, {@code DateTime}, {@code Location}, {@code Description}","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"    public AddMeetingCommand(Title meetingTitle, DateTime dateTime, Set\u003cName\u003e attendees, Location location,","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"                             Description description) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"        requireAllNonNull(meetingTitle, attendees, dateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"        this.meetingTitle \u003d meetingTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"        this.attendeeNames.addAll(attendees);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"        final Set\u003cPerson\u003e attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"        for (Name name : attendeeNames) {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"            Person person \u003d model.getPersonByName(name);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"            if (person \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"                throw new CommandException(\"Person not found: \" + name);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"            attendees.add(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"        Meeting meetingToAdd \u003d new Meeting(meetingTitle, dateTime, attendees, location, description);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"        if (model.hasMeeting(meetingToAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"        model.addMeeting(meetingToAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, meetingToAdd));","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"            || (other instanceof AddMeetingCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 meetingTitle.equals(((AddMeetingCommand) other).meetingTitle)","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 dateTime.equals(((AddMeetingCommand) other).dateTime)","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 attendeeNames.equals(((AddMeetingCommand) other).attendeeNames)","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 location.equals(((AddMeetingCommand) other).location)","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 description.equals(((AddMeetingCommand) other).description));","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Beebeeoii":18,"KS2499":99}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/AutocompleteResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Represents the result from autocompletion of command inputs, which consists","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" * of the next {@code Prefix} and whether that {@code Prefix} should","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * replace the current one.","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public class AutocompleteResult {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    private final Prefix prefix;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    private final boolean isReplaceCurrent;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     * Generates an {@code AutocompleteResult} with the suggested {@code Prefix}","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     * and whether it should replace the current one.","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * @param prefix Prefix for command.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     * @param isReplaceCurrent True if suggested {@code Prefix} should replace the current, false otherwise.","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult(Prefix prefix, boolean isReplaceCurrent) {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        this.isReplaceCurrent \u003d isReplaceCurrent;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     * Retrieves the suggested {@code Prefix}.","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     * @return Empty {@code Optional} if no {@code Prefix} is suggested, else an {@code Optional} containing the","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     *          suggested {@code Prefix}.","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public Optional\u003cPrefix\u003e getPrefix() {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        return prefix \u003d\u003d null ? Optional.empty() : Optional.of(this.prefix);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     * Returns whether the autocompletion should replace the current {@code Prefix}.","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"     * @return True if autocompletion should replace the current, false otherwise.","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    public boolean isReplaceCurrent() {","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        return this.isReplaceCurrent;","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"Beebeeoii":46}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" * Clears the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        model.setQuickBook(new QuickBook());","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":5,"-":18}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":3,"-":17}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":1,"-":70}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":6,"-":47}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"thedesalizes"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"thedesalizes"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"thedesalizes"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"thedesalizes"},"content":" * Deletes a meeting from the address book","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"thedesalizes"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"thedesalizes"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"thedesalizes"},"content":"    public static final String COMMAND_WORD \u003d \"delm\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"thedesalizes"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a meeting from the address book.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"thedesalizes"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"thedesalizes"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"thedesalizes"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Meeting Deleted: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"thedesalizes"},"content":"    private final Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"thedesalizes"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"thedesalizes"},"content":"     * Constructs a DeleteMeetingCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"thedesalizes"},"content":"     * @param index The one index of the meeting in the address book","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"thedesalizes"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"thedesalizes"},"content":"    public DeleteMeetingCommand(Index index) {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"thedesalizes"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"thedesalizes"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"thedesalizes"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"thedesalizes"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"thedesalizes"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"thedesalizes"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"thedesalizes"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getMeetingsList();","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"thedesalizes"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"thedesalizes"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"thedesalizes"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"thedesalizes"},"content":"        Meeting meetingToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"thedesalizes"},"content":"        model.removeMeeting(meetingToDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"thedesalizes"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, meetingToDelete));","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"thedesalizes"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"thedesalizes"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"thedesalizes"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"thedesalizes"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"thedesalizes"},"content":"                || (other instanceof DeleteMeetingCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"thedesalizes"},"content":"                \u0026\u0026 index.equals(((DeleteMeetingCommand) other).index)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"thedesalizes"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"thedesalizes"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"thedesalizes":47,"Beebeeoii":6}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Beebeeoii":18,"-":208}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/EditMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Description;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Title;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jeremykhoo-NUS"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jeremykhoo-NUS"},"content":" * Edits the details of an existing meeting in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jeremykhoo-NUS"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"jeremykhoo-NUS"},"content":"public class EditMeetingsCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String COMMAND_WORD \u003d \"editm\";","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the meeting identified \"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"by the index number used in the displayed meetings list. \"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            + \"[\" + PREFIX_MEETING_TITLE + \"TITLE] \"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"[\" + PREFIX_DATETIME + \"TIMEDATE] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"[\" + PREFIX_PERSON + \"ATTENDEES] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION]...\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + PREFIX_DATETIME + \"14/02/23\"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + PREFIX_LOCATION + \"Stoa Poikile\";","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_EDIT_MEETING_SUCCESS \u003d \"Edited Meeting: %1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private final Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @param index of the meeting in the filtered meeting list to edit","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @param editMeetingDescriptor details to edit the meeting with","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public EditMeetingsCommand(Index index, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"jeremykhoo-NUS"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"jeremykhoo-NUS"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"jeremykhoo-NUS"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getMeetingsList();","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Meeting meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meetingToEdit, editMeetingDescriptor, model);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (!meetingToEdit.isSameMeeting(editedMeeting) \u0026\u0026 model.hasMeeting(editedMeeting)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"jeremykhoo-NUS"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"jeremykhoo-NUS"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting));","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Creates and returns a {@code Meeting} with the details of {@code meetingToEdit}","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * edited with {@code editMeetingDescriptor}.","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private static Meeting createEditedMeeting(","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    Meeting meetingToEdit, EditMeetingDescriptor editMeetingDescriptor, Model model)","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"jeremykhoo-NUS"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Optional\u003cSet\u003cName\u003e\u003e updatedAttendees \u003d editMeetingDescriptor.getAttendees();","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Set\u003cPerson\u003e updatedPerson \u003d meetingToEdit.getAttendees();","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Title updatedTitle \u003d editMeetingDescriptor.getTitle().orElse(meetingToEdit.getTitle());","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"jeremykhoo-NUS"},"content":"        DateTime updatedDateTime \u003d editMeetingDescriptor.getDateTime().orElse(meetingToEdit.getDateTime());","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Location updatedLocation \u003d editMeetingDescriptor.getLocation().orElse(meetingToEdit.getLocation());","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Description updatedDescription \u003d editMeetingDescriptor.getDescription().orElse(meetingToEdit.getDescription());","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (updatedAttendees.isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"jeremykhoo-NUS"},"content":"            Set\u003cName\u003e gotUpdatedAttendees \u003d updatedAttendees.get();","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"jeremykhoo-NUS"},"content":"            Set\u003cPerson\u003e attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"jeremykhoo-NUS"},"content":"            for (Name name : gotUpdatedAttendees) {","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"jeremykhoo-NUS"},"content":"                Person person \u003d model.getPersonByName(name);","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"jeremykhoo-NUS"},"content":"                if (person \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    throw new CommandException(\"Person not found: \" + name);","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"jeremykhoo-NUS"},"content":"                }","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"jeremykhoo-NUS"},"content":"                attendees.add(person);","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"jeremykhoo-NUS"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return new Meeting(updatedTitle, updatedDateTime, attendees, updatedLocation, updatedDescription);","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return new Meeting(updatedTitle, updatedDateTime, updatedPerson, updatedLocation, updatedDescription);","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"jeremykhoo-NUS"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"jeremykhoo-NUS"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"        if (!(other instanceof EditMeetingsCommand)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"jeremykhoo-NUS"},"content":"        // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"jeremykhoo-NUS"},"content":"        EditMeetingsCommand e \u003d (EditMeetingsCommand) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"jeremykhoo-NUS"},"content":"                \u0026\u0026 editMeetingDescriptor.equals(e.editMeetingDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Stores the details to edit the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * corresponding field value of the meeting.","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"jeremykhoo-NUS"},"content":"        private Title title;","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"jeremykhoo-NUS"},"content":"        private DateTime dateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"        private Set\u003cName\u003e attendees;","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"jeremykhoo-NUS"},"content":"        private Location location;","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"jeremykhoo-NUS"},"content":"        private Description description;","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public EditMeetingDescriptor() {}","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"jeremykhoo-NUS"},"content":"        /**","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"jeremykhoo-NUS"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"jeremykhoo-NUS"},"content":"         */","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"jeremykhoo-NUS"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"jeremykhoo-NUS"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"            setAttendees(toCopy.attendees);","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"jeremykhoo-NUS"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"jeremykhoo-NUS"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"jeremykhoo-NUS"},"content":"        /**","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"jeremykhoo-NUS"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"jeremykhoo-NUS"},"content":"         */","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"            return CollectionUtil.isAnyNonNull(title, dateTime, attendees, location, description);","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"jeremykhoo-NUS"},"content":"            this.title \u003d title;","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setDateTime(DateTime dateTime) {","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"jeremykhoo-NUS"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public Optional\u003cDateTime\u003e getDateTime() {","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setAttendees(Set\u003cName\u003e attendees) {","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"jeremykhoo-NUS"},"content":"            this.attendees \u003d attendees;","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public Optional\u003cSet\u003cName\u003e\u003e getAttendees() {","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return Optional.ofNullable(attendees);","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"jeremykhoo-NUS"},"content":"            this.location \u003d location;","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"jeremykhoo-NUS"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"jeremykhoo-NUS"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"jeremykhoo-NUS"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"jeremykhoo-NUS"},"content":"                return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"jeremykhoo-NUS"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"jeremykhoo-NUS"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"jeremykhoo-NUS"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"jeremykhoo-NUS"},"content":"                return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"jeremykhoo-NUS"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":219,"author":{"gitId":"jeremykhoo-NUS"},"content":"            // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"jeremykhoo-NUS"},"content":"            EditMeetingDescriptor e \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":221,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":222,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return getTitle().equals(e.getTitle())","lastModifiedDate":"2023-03-12"},{"lineNumber":223,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    \u0026\u0026 getDateTime().equals(e.getDateTime())","lastModifiedDate":"2023-03-12"},{"lineNumber":224,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    \u0026\u0026 getAttendees().equals(e.getAttendees())","lastModifiedDate":"2023-03-12"},{"lineNumber":225,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2023-03-12"},{"lineNumber":226,"author":{"gitId":"jeremykhoo-NUS"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription());","lastModifiedDate":"2023-03-12"},{"lineNumber":227,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":228,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":229,"author":{"gitId":"jeremykhoo-NUS"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Beebeeoii":24,"jeremykhoo-NUS":205}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Beebeeoii":2,"-":17}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/ExportMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.JsonUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.JsonAdaptedMeeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":" * This class represents a command for exporting of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"public class ExportMeetingsCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    public static final String COMMAND_WORD \u003d \"exportm\";","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exports meetings in JSON format\\n\" + \"Parameters: m/ \"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"            + \"index of meeting start/: optional starting point of range end/: optional ending point of range\";","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    public static final String INDEX_NOT_FOUND \u003d \"One of the provided indices is not found\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    private final List\u003cIndex\u003e indexList;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    private final DateTime start;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    private final DateTime end;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"     * Creates a new export meetings command","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"     * @param indexList list of indexes to export","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"     * @param start     minimum date of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"     * @param end       maximum date of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"    public ExportMeetingsCommand(List\u003cIndex\u003e indexList, DateTime start, DateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"        this.indexList \u003d indexList;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"            List\u003cMeeting\u003e meetingList \u003d model.getMeetingsByIndexesAndStartEnd(indexList, this.start, this.end);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"            List\u003cJsonAdaptedMeeting\u003e adapted \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                    meetingList","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                            .stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"                            .map(JsonAdaptedMeeting::new)","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"            return new CommandResult(JsonUtil.toJsonString(adapted));","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(INDEX_NOT_FOUND);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(\"Error turning to json\");","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"                || (other instanceof ExportMeetingsCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"                \u0026\u0026 indexList.equals(((ExportMeetingsCommand) other).indexList));","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":8,"chuakid":60}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/ExportPersonsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.JsonUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":" * This class represents a command for exporting of persons","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"public class ExportPersonsCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exports persons in JSON format\\n\" + \"Parameters: p/ \"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"            + \"index of person\";","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    public static final String INDEX_NOT_FOUND \u003d \"One of the provided indices is not found\";","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    private final List\u003cIndex\u003e indexList;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    public ExportPersonsCommand(List\u003cIndex\u003e indexList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        this.indexList \u003d indexList;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"            List\u003cPerson\u003e personList \u003d model.getPersonsByIndexes(indexList);","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"            List\u003cJsonAdaptedPerson\u003e adapted \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                    personList","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"                            .stream()","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"                            .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"            return new CommandResult(JsonUtil.toJsonString(adapted));","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(INDEX_NOT_FOUND);","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(\"Error turning to json\");","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                || (other instanceof ExportPersonsCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                \u0026\u0026 indexList.equals(((ExportPersonsCommand) other).indexList));","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Beebeeoii":7,"chuakid":47}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Beebeeoii":4,"KS2499":1,"-":37}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/FindMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.MeetingContainsNamesPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":" *  Finds and lists all meetings in address book whose attendees contains any of the argument person names.","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":" *  name matching is case-insensitive.","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"public class FindMeetingCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    public static final String COMMAND_WORD \u003d \"findm\";","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all meetings whose attendees contain any of \"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"        + \"the specified person names\\n (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"        + \"Use without arguments to list all meetings.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"        + \"Parameters: [PERSON_NAMES]...\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"        + \"Example: \" + COMMAND_WORD + \" alice bob charlie\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"        + \"or\"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    private final MeetingContainsNamesPredicate predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    public FindMeetingCommand(MeetingContainsNamesPredicate predicate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"        model.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        if (predicate.getPersonNames() \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"            return new CommandResult(\"Listed all meetings!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"            String.format(\"Listed all meetings with attendees: %s\", predicate.getPersonNames().toString())","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"            || (other instanceof FindMeetingCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"            \u0026\u0026 predicate.equals(((FindMeetingCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":4,"KS2499":41}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":2,"-":19}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/ImportMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":" * This class represents a command for importing of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"public class ImportMeetingsCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"    public static final String COMMAND_WORD \u003d \"importm\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    static final String DUPLICATE_MEETING \u003d \"Duplicate meeting found\";","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    static final String SUCCESS \u003d \"Meetings imported\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports meetings in JSON format\\n\" + \"Parameters: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"            + PREFIX_FORCE","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"            + \" to force imports regardless of duplicates\";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    private final List\u003cMeeting\u003e meetings;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    private final boolean isForced;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"     * Creates a new ImportMeetingsCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"     * @param meetings meetings to be imported","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"     * @param isForced whether to force imports regardless of duplicates","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    public ImportMeetingsCommand(List\u003cMeeting\u003e meetings, boolean isForced) {","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        this.isForced \u003d isForced;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        this.meetings \u003d meetings;","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"            if (isForced) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"                for (Meeting meeting : meetings) {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"                    if (!model.hasMeeting(meeting)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"                        model.addMeeting(meeting);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"                for (Meeting meeting : meetings) {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"                    if (model.hasMeeting(meeting)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                        throw new DuplicateMeetingException();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                for (Meeting p : meetings) {","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"                    model.addMeeting(p);","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"            return new CommandResult(SUCCESS);","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"        } catch (DuplicateMeetingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(DUPLICATE_MEETING);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"        return o \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"                || (o instanceof ImportMeetingsCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"                \u0026\u0026 meetings.equals(((ImportMeetingsCommand) o).meetings));","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":6,"chuakid":61}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/ImportPersonsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":" * This class represents a command for importing of persons","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"public class ImportPersonsCommand extends Command {","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    static final String DUPLICATE_PERSON \u003d \"Duplicate person found\";","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    static final String SUCCESS \u003d \"Persons imported\";","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports persons in JSON format\\n\" + \"Parameters: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"            + PREFIX_FORCE","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"            + \" to force imports regardless of duplicates\";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    private final List\u003cPerson\u003e people;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    private final boolean isForced;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"     * Creates a new ImportPersonsCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"     * @param people   people to import","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"     * @param isForced whether to force imports regardless of duplicates","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    public ImportPersonsCommand(List\u003cPerson\u003e people, boolean isForced) {","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        this.people \u003d people;","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        this.isForced \u003d isForced;","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"            if (isForced) {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"                for (Person person : people) {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"                    if (!model.hasPerson(person)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"                        model.addPerson(person);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"                    }","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"            } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"                for (Person person : people) {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"                    if (model.hasPerson(person)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                        throw new DuplicatePersonException();","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                    }","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                for (Person person : people) {","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"                    model.addPerson(person);","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"            return new CommandResult(SUCCESS);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"        } catch (DuplicatePersonException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"            throw new CommandException(DUPLICATE_PERSON);","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"        return o \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"                || (o instanceof ImportPersonsCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"                \u0026\u0026 people.equals(((ImportPersonsCommand) o).people));","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Beebeeoii":6,"chuakid":61}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" * Lists all persons in the quick book to the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":4,"-":20}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/SortMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"jeremykhoo-NUS"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"jeremykhoo-NUS"},"content":" * Creates an SortMeetingCommand to get {@code ModelManage} class to sort with a specified attributes {@code Title},","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"jeremykhoo-NUS"},"content":" * {@code DateTime}, {@code Location}, {@code Description}","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"jeremykhoo-NUS"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"jeremykhoo-NUS"},"content":"public class SortMeetingCommand extends Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String COMMAND_WORD \u003d \"sortm\";","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String MESSAGE_USAGE \u003d \"Sort meetings by their attributes: \"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"title (m/), dateTime (dt/), location (l/), description (des/). \\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"Example: `sortm m/`.i \\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"For reverse sorting, append an `r` after the prefix.\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"Example: `sortm m/r`\";","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private static Prefix sortByPrefix;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private static String prefix;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private static boolean isReverse;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    private static final Comparator\u003cMeeting\u003e titleComparator \u003d Comparator.comparing(m -\u003e m.getTitle().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    private static final Comparator\u003cMeeting\u003e descriptorComparator \u003d Comparator.comparing(m -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        if (m.getDescription() \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"            return \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        return m.getDescription().toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    });","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"    private static final Comparator\u003cMeeting\u003e locationComparator \u003d Comparator.comparing(m -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        if (m.getLocation() \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"            return \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"        return m.getLocation().toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"    });","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"    private static final Comparator\u003cMeeting\u003e dateTimeComparator \u003d Comparator.comparing((Meeting m) -\u003e m.getDateTime()","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"                                                                .get());","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Sorted by %1$s\";","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Creates an SortMeetingCommand to get {@code ModelManage} class to sort with a specified attributes {@code Title},","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * {@code DateTime}, {@code Location}, {@code Description}","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public SortMeetingCommand(Prefix sortByPrefix, boolean isReverse) {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"        SortMeetingCommand.sortByPrefix \u003d sortByPrefix;","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"        SortMeetingCommand.isReverse \u003d isReverse;","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * executes the sort command, by the prefix given pass the correct comparator","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * {@code DateTime}, {@code Location}, {@code Description}, {@code Title}","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"jeremykhoo-NUS"},"content":"        prefix \u003d sortByPrefix.toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"        String prefixName;","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"jeremykhoo-NUS"},"content":"        switch (prefix) {","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"jeremykhoo-NUS"},"content":"        case \"m/\":","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"jeremykhoo-NUS"},"content":"            reverseSort(model, titleComparator, isReverse);","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"jeremykhoo-NUS"},"content":"            prefixName \u003d \"Meeting Title\";","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"jeremykhoo-NUS"},"content":"            break;","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"jeremykhoo-NUS"},"content":"        case \"des/\":","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"jeremykhoo-NUS"},"content":"            reverseSort(model, descriptorComparator, isReverse);","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"jeremykhoo-NUS"},"content":"            prefixName \u003d \"Meeting Description\";","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"jeremykhoo-NUS"},"content":"            break;","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"jeremykhoo-NUS"},"content":"        case \"l/\":","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"jeremykhoo-NUS"},"content":"            reverseSort(model, locationComparator, isReverse);","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"jeremykhoo-NUS"},"content":"            prefixName \u003d \"Meeting Location\";","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"jeremykhoo-NUS"},"content":"            break;","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"jeremykhoo-NUS"},"content":"        case \"dt/\":","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"jeremykhoo-NUS"},"content":"            reverseSort(model, dateTimeComparator, isReverse);","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"jeremykhoo-NUS"},"content":"            prefixName \u003d \"Meeting DateTime\";","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"jeremykhoo-NUS"},"content":"            break;","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"jeremykhoo-NUS"},"content":"        default:","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new CommandException(\"Something went wrong\");","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, prefixName));","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"    private void reverseSort(Model model, Comparator\u003cMeeting\u003e comparator, boolean isReverse) {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (isReverse) {","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"jeremykhoo-NUS"},"content":"            model.sortFilteredMeetingList(comparator.reversed());","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"jeremykhoo-NUS"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"jeremykhoo-NUS"},"content":"            model.sortFilteredMeetingList(comparator);","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"jeremykhoo-NUS"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Beebeeoii":6,"KS2499":18,"jeremykhoo-NUS":64}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/ViewMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":" * Lists all meetings in the address book to the user.","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"public class ViewMeetingsCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"    public static final String COMMAND_WORD \u003d \"listm\";","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"        for (Meeting m : model.getMeetingsList()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"            result.append(m.getTitle());","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"            result.append(\"Description: \").append(m.getDescription());","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"            result.append(\"At: \").append(m.getDateTime());","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"            result.append(\"Attendees: \").append(m.getAttendees());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"            result.append(\"Location: \").append(m.getLocation());","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"            result.append(\"\\n\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Beebeeoii":4,"chuakid":29}},{"path":"src/main/java/seedu/quickcontacts/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Represents an error which occurs during execution of a {@link seedu.quickcontacts.logic.commands.Command}.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Beebeeoii":2,"-":15}},{"path":"src/main/java/seedu/quickcontacts/logic/jobs/CheckMeetingHasPassed.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.jobs;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" * Represents a job that checks whether a meeting has passed based on the current","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":" * system date/time.","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public class CheckMeetingHasPassed extends TimerTask {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    private final Model model;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    private final ObservableList\u003cMeeting\u003e meetings;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     * Generates the job to be run on CRON.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * @param model QuickContacts model.","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public CheckMeetingHasPassed(Model model) {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        meetings \u003d model.getMeetingsList();","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    public void run() {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        for (Meeting m : meetings) {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            if (!m.getHasPassed() \u0026\u0026 m.hasPassed()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"                // UI update","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                Platform.runLater(() -\u003e model.setMeeting(m, m));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":36}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG};","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"        Name name \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"        assert name !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"        Phone phone \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"        Email email \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        Address address \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"            address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        for (Prefix p : PREFIXES) {","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"            if (argMultimap.getValue(p).isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"                return new AutocompleteResult(p, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Beebeeoii":31,"KS2499":18,"-":38}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Description;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Title;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":" * Parses input arguments and creates a new AddMeetingCommand object.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_MEETING_TITLE, PREFIX_DATETIME, PREFIX_PERSON,","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        PREFIX_LOCATION, PREFIX_DESCRIPTION};","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"    public AddMeetingCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            ArgumentTokenizer.tokenize(userInput, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MEETING_TITLE, PREFIX_DATETIME)","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"        Title title \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_TITLE).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"            title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MEETING_TITLE).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        assert title !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"        DateTime dateTime \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"        if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"            dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATETIME).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        assert dateTime !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        Set\u003cName\u003e attendeeNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"        Location location \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        Description description \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"        if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"            dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATETIME).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"        if (argMultimap.getValue(PREFIX_PERSON).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"            attendeeNames \u003d ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_PERSON));","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"            location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"            description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"        return new AddMeetingCommand(title, dateTime, attendeeNames, location, description);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        for (Prefix p : PREFIXES) {","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"            if (argMultimap.getValue(p).isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"                return new AutocompleteResult(p, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Beebeeoii":32,"KS2499":56}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Returns the number of entries in this ArgumentMultimap.","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public int getLength() {","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return argMultimap.size();","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Returns the number of entries in this ArgumentMultimap.","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public Prefix getFirstKey() {","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Set\u003cPrefix\u003e keySet \u003d argMultimap.keySet();","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Prefix[] keyArray \u003d keySet.toArray(new Prefix[keySet.size()]);","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return keyArray.length \u003e 0 ? keyArray[1] : null;","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Beebeeoii":1,"jeremykhoo-NUS":16,"-":59}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Beebeeoii":1,"-":147}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public static final Prefix PREFIX_MEETING_TITLE \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"des/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    public static final Prefix PREFIX_PERSON \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    public static final Prefix PREFIX_FORCE \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"start/\");","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    public static final Prefix PREFIX_END \u003d new Prefix(\"end/\");","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Beebeeoii":1,"KS2499":4,"jeremykhoo-NUS":1,"chuakid":3,"-":13}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Beebeeoii":11,"-":24}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"thedesalizes"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"thedesalizes"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"thedesalizes"},"content":" * Parses input arguments and creates a new DeleteMeetingCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"thedesalizes"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"thedesalizes"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"thedesalizes"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"thedesalizes"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"thedesalizes"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"thedesalizes"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"thedesalizes"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"thedesalizes"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"thedesalizes"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"thedesalizes"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"thedesalizes"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"thedesalizes"},"content":"            return new DeleteMeetingCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"thedesalizes"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"thedesalizes"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"thedesalizes"},"content":"                    pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"thedesalizes"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"thedesalizes"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"thedesalizes"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"thedesalizes":25,"Beebeeoii":12}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG};","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        for (Prefix p : PREFIXES) {","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"            if (argMultimap.getValue(p).isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"                return new AutocompleteResult(p, true);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Beebeeoii":28,"-":68}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/EditMeetingParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jeremykhoo-NUS"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditMeetingsCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"jeremykhoo-NUS"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"jeremykhoo-NUS"},"content":" * Parses input arguments and creates a new EditMeetingsCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"jeremykhoo-NUS"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jeremykhoo-NUS"},"content":"public class EditMeetingParser implements Parser\u003cEditMeetingsCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_MEETING_TITLE, PREFIX_DATETIME, PREFIX_PERSON,","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        PREFIX_LOCATION, PREFIX_DESCRIPTION};","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMeetingsCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * and returns an EditMeetingsCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public EditMeetingsCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jeremykhoo-NUS"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jeremykhoo-NUS"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"jeremykhoo-NUS"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jeremykhoo-NUS"},"content":"                                                    EditMeetingsCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"jeremykhoo-NUS"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_TITLE).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"            editMeetingDescriptor.setTitle(ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MEETING_TITLE).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jeremykhoo-NUS"},"content":"            editMeetingDescriptor.setDateTime(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATETIME).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (argMultimap.getValue(PREFIX_PERSON).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jeremykhoo-NUS"},"content":"            editMeetingDescriptor.setAttendees(ParserUtil.parseAttendees(argMultimap.getAllValues(PREFIX_PERSON)));","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"jeremykhoo-NUS"},"content":"            editMeetingDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"jeremykhoo-NUS"},"content":"            editMeetingDescriptor.setDescription(","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"jeremykhoo-NUS"},"content":"                ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new ParseException(EditMeetingsCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return new EditMeetingsCommand(index, editMeetingDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        String[] argsSplit \u003d args.split(\" \");","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        if (argsSplit.length \u003d\u003d 0) {","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"            return new AutocompleteResult(PREFIXES[0], false);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        String lastPrefix \u003d argsSplit[argsSplit.length - 1];","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(\" \" + lastPrefix, PREFIXES);","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        boolean returnNext \u003d false;","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        for (Prefix p : PREFIXES) {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"            if (returnNext) {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"                return new AutocompleteResult(p, true);","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"            if (argMultimap.getValue(p).isPresent() \u0026\u0026 p.toString().equals(lastPrefix)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"                returnNext \u003d true;","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(PREFIXES[0], true);","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"jeremykhoo-NUS"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Beebeeoii":39,"jeremykhoo-NUS":50}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/ExportMeetingsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ExportMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":" * Parser for parsing export meeting commands","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"public class ExportMeetingsParser implements Parser\u003cExportMeetingsCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_MEETING_TITLE, PREFIX_START, PREFIX_END};","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    public ExportMeetingsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIXES);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        List\u003cString\u003e indexStrings \u003d argMultimap.getAllValues(PREFIX_MEETING_TITLE);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"        for (String s : indexStrings) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"                if (!indexes.contains(ParserUtil.parseIndex(s))) {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"                    indexes.add(ParserUtil.parseIndex(s));","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"            } catch (ParseException parseException) {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"                        ExportMeetingsCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"                        parseException);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        DateTime start \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"        DateTime end \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"            if (argMultimap.getValue(PREFIX_START).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"                start \u003d new DateTime(argMultimap.getValue(PREFIX_START).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"            if (argMultimap.getValue(PREFIX_END).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                end \u003d new DateTime(argMultimap.getValue(PREFIX_END).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"                    ExportMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"        if (start \u003d\u003d null \u0026\u0026 end \u003d\u003d null \u0026\u0026 indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"                    ExportMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"        return new ExportMeetingsCommand(indexes, start, end);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String input) {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"        String[] argsSplit \u003d input.split(\" \");","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"        if (argsSplit.length \u003d\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"            return new AutocompleteResult(PREFIXES[0], false);","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"        String lastPrefix \u003d argsSplit[argsSplit.length - 1];","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"chuakid"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(\" \" + lastPrefix, PREFIXES);","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"chuakid"},"content":"        boolean returnNext \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"chuakid"},"content":"        for (Prefix p : PREFIXES) {","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"chuakid"},"content":"            if (returnNext) {","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"chuakid"},"content":"                return new AutocompleteResult(p, true);","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"chuakid"},"content":"            if (argMultimap.getValue(p).isPresent() \u0026\u0026 p.toString().equals(lastPrefix)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"chuakid"},"content":"                returnNext \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"chuakid"},"content":"        return new AutocompleteResult(PREFIXES[0], true);","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Beebeeoii":10,"chuakid":76}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/ExportPersonsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ExportPersonsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":" * Parser for exporting of persons command","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"public class ExportPersonsParser implements Parser\u003cExportPersonsCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    public static final Prefix[] PREFIXES \u003d {PREFIX_PERSON};","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    public ExportPersonsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIXES);","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"        List\u003cString\u003e indexStrings \u003d argMultimap.getAllValues(PREFIX_PERSON);","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"        if (indexStrings.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"                    ExportPersonsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        for (String s : indexStrings) {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"            try {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"                if (!indexes.contains(ParserUtil.parseIndex(s))) {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"                    indexes.add(ParserUtil.parseIndex(s));","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"            } catch (ParseException parseException) {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"                        ExportPersonsCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"                        parseException);","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"        return new ExportPersonsCommand(indexes);","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String input) {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"        return new AutocompleteResult(PREFIX_PERSON, false);","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Beebeeoii":7,"chuakid":44}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.FindCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Beebeeoii":10,"-":28}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/FindMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.MeetingContainsNamesPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":" * Parses input arguments and creates a new FindMeetingCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"public class FindMeetingCommandParser implements Parser\u003cFindMeetingCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMeetingCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"     * @param args input arguments","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"     * @return FindMeetingCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    public FindMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"        // If used without arguments, return all meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"            return new FindMeetingCommand(new MeetingContainsNamesPredicate());","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"        // If used with trailing whitespace throw error on expected usage","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        return new FindMeetingCommand(new MeetingContainsNamesPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":6,"KS2499":36}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/ImportMeetingsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.JsonUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ImportMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.JsonAdaptedMeeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":" * This class represents a parser for importing of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"public class ImportMeetingsParser implements Parser\u003cImportMeetingsCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    static final Prefix[] PREFIXES \u003d new Prefix[]{PREFIX_FORCE};","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    static final String MALFORMED_JSON \u003d \"JSON input malformed\";","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    public ImportMeetingsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIXES);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"        String json \u003d argMultimap.getPreamble();","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        boolean isForced \u003d argMultimap.getValue(PREFIX_FORCE).isPresent();","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        if (json.equals(\"\")) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"                    ImportMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"        List\u003cMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"            JsonAdaptedMeeting[] jsonAdaptedMeetings \u003d JsonUtil.fromJsonString(json, JsonAdaptedMeeting[].class);","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"            for (JsonAdaptedMeeting jsonAdaptedMeeting : jsonAdaptedMeetings) {","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"                meetings.add(jsonAdaptedMeeting.toModelType());","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"        } catch (IOException | IllegalValueException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MALFORMED_JSON));","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"        return new ImportMeetingsCommand(meetings, isForced);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String input) {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":10,"chuakid":42}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/ImportPersonsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.ImportPersonsCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_FORCE;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.JsonUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ImportPersonsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":" * This class represents a parser for importing of persons","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"public class ImportPersonsParser implements Parser\u003cImportPersonsCommand\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    static final Prefix[] PREFIXES \u003d new Prefix[]{PREFIX_FORCE};","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    static final String MALFORMED_JSON \u003d \"JSON input malformed\";","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    public ImportPersonsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIXES);","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        String json \u003d argMultimap.getPreamble();","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        boolean isForced \u003d argMultimap.getValue(PREFIX_FORCE).isPresent();","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"        if (json.equals(\"\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"        List\u003cPerson\u003e people \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"            JsonAdaptedPerson[] jsonAdaptedPeople \u003d JsonUtil.fromJsonString(json, JsonAdaptedPerson[].class);","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"            for (JsonAdaptedPerson jsonAdaptedPerson : jsonAdaptedPeople) {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"                people.add(jsonAdaptedPerson.toModelType());","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"        } catch (IOException | IllegalValueException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MALFORMED_JSON));","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"        return new ImportPersonsCommand(people, isForced);","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String input) {","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Beebeeoii":11,"chuakid":42}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     * Parses {@code input} to retrieve available suggestions based","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * on the command it matches.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    AutocompleteResult getAutocompleteSuggestion(String input);","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Beebeeoii":10,"-":13}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.StringUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Description;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Title;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"     * Parses a Collection of {@code String names} to a set of {@code Name}.","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"     * @param names A collection of names.","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"     * @return A set of names.","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"     * @throws ParseException if any of the given names is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"    public static Set\u003cName\u003e parseNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"            nameSet.add(parseName(name));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"        return nameSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"jeremykhoo-NUS"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static Set\u003cName\u003e parseAttendees(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"jeremykhoo-NUS"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"jeremykhoo-NUS"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"jeremykhoo-NUS"},"content":"            nameSet.add(parseName(name));","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return nameSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"KS2499"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"KS2499"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"KS2499"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"KS2499"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"KS2499"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"KS2499"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"KS2499"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"KS2499"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"KS2499"},"content":"     * Parses a {@code String datetime} into a {@code DateTime}.","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"KS2499"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"KS2499"},"content":"     * @throws ParseException if the given {@code datetime} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"KS2499"},"content":"    public static DateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"KS2499"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"KS2499"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"KS2499"},"content":"        if (!DateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"KS2499"},"content":"        return new DateTime(trimmedDateTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"KS2499"},"content":"     * Parses a {@code String location} into a {@code Location}.","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"KS2499"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"KS2499"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"KS2499"},"content":"    public static Location parseLocation(String s) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"KS2499"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"KS2499"},"content":"        String trimmedLocation \u003d s.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"KS2499"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"KS2499"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"KS2499"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"KS2499"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"KS2499"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"KS2499"},"content":"    public static Description parseDescription(String s) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"KS2499"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"KS2499"},"content":"        String trimmedDescription \u003d s.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"KS2499"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"KS2499"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"KS2499"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Beebeeoii":13,"KS2499":76,"jeremykhoo-NUS":14,"-":114}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Beebeeoii":1,"-":38}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/QuickContactsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ExportMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ExportPersonsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.FindCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ImportMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ImportPersonsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ListCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.SortMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ViewMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.command.CommandHistory;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"public class QuickContactsParser {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        CommandHistory.push(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"        case FindMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"            return new FindMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"        case ViewMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"            return new ViewMeetingsCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"jeremykhoo-NUS"},"content":"        case EditMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return new EditMeetingParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"thedesalizes"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"thedesalizes"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"chuakid"},"content":"        case ExportPersonsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"chuakid"},"content":"            return new ExportPersonsParser().parse(arguments);","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"chuakid"},"content":"        case ImportPersonsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"chuakid"},"content":"            return new ImportPersonsParser().parse(arguments);","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"jeremykhoo-NUS"},"content":"        case SortMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return new SortMeetingParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"chuakid"},"content":"        case ExportMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"chuakid"},"content":"            return new ExportMeetingsParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"chuakid"},"content":"        case ImportMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"chuakid"},"content":"            return new ImportMeetingsParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"     * Parses user input into command for autocomplete suggestion.","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"     * @return the {@code AutocompleteResult} based on the user input","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String userInput) {","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"            return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"            return new AddCommandParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"            return new EditCommandParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"            return new AddMeetingCommandParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"        case EditMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"            return new EditMeetingParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"chuakid"},"content":"        case ExportPersonsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"chuakid"},"content":"            return new ExportPersonsParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"chuakid"},"content":"        case ExportMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"chuakid"},"content":"            return new ExportMeetingsParser().getAutocompleteSuggestion(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"        default:","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"            return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"thedesalizes":2,"Beebeeoii":60,"KS2499":6,"chuakid":15,"jeremykhoo-NUS":11,"-":61}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/SortMeetingParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.SortMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"jeremykhoo-NUS"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"jeremykhoo-NUS"},"content":" * Parses input arguments and creates a new AddMeetingCommand object.","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"jeremykhoo-NUS"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"jeremykhoo-NUS"},"content":"public class SortMeetingParser implements Parser\u003cSortMeetingCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"jeremykhoo-NUS"},"content":"    private static boolean arePrefixesValidUnique(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (argumentMultimap.getLength() !\u003d 2) {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public AutocompleteResult getAutocompleteSuggestion(String args) {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"jeremykhoo-NUS"},"content":"        return new AutocompleteResult(null, false);","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public SortMeetingCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"jeremykhoo-NUS"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"jeremykhoo-NUS"},"content":"            ArgumentTokenizer.tokenize(userInput, PREFIX_MEETING_TITLE, PREFIX_DATETIME,","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"jeremykhoo-NUS"},"content":"                PREFIX_LOCATION, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (!arePrefixesValidUnique(argMultimap, PREFIX_MEETING_TITLE, PREFIX_DATETIME, PREFIX_LOCATION,","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"jeremykhoo-NUS"},"content":"            PREFIX_DESCRIPTION)","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"jeremykhoo-NUS"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Prefix prefix \u003d argMultimap.getFirstKey();","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"jeremykhoo-NUS"},"content":"        Optional\u003cString\u003e param \u003d argMultimap.getValue(prefix);","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"jeremykhoo-NUS"},"content":"        System.out.println(param.get());","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"jeremykhoo-NUS"},"content":"        if (param.get().equals(\"r\")) {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return new SortMeetingCommand(prefix, true);","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"jeremykhoo-NUS"},"content":"        } else if (param.get().equals(\"\")) {","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"jeremykhoo-NUS"},"content":"            return new SortMeetingCommand(prefix, false);","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"jeremykhoo-NUS"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"jeremykhoo-NUS"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Beebeeoii":9,"jeremykhoo-NUS":47}},{"path":"src/main/java/seedu/quickcontacts/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Beebeeoii":2,"-":15}},{"path":"src/main/java/seedu/quickcontacts/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jeremykhoo-NUS"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the user prefs\u0027 quick book file path.","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    Path getQuickBookFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the user prefs\u0027 quick book file path.","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    void setQuickBookFilePath(Path quickBookFilePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the QuickBook","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    ReadOnlyQuickBook getQuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"     * Replaces quick book data with the data in {@code quickBook}.","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    void setQuickBook(ReadOnlyQuickBook quickBook);","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a meeting with the same identity as {@code person} exists in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"jeremykhoo-NUS"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"     * The person must exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"     * Gets persons at the corresponding indexes","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"     * @param indexList list of indexes to retrieve","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"chuakid"},"content":"     * @return persons at those indexes","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"    List\u003cPerson\u003e getPersonsByIndexes(List\u003cIndex\u003e indexList);","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"     * Gets meetings at the corresponding indexes","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"chuakid"},"content":"     * @param indexList list of indexes to retrieve","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"chuakid"},"content":"     * @return meetings at those indexes","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"chuakid"},"content":"    List\u003cMeeting\u003e getMeetingsByIndexesAndStartEnd(List\u003cIndex\u003e indexList, DateTime start, DateTime end);","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"     * {@code person} must not already exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"     * {@code target} must exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"     * {@code target} must exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"jeremykhoo-NUS"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"     * Gets the Person matching the name from the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"     * @param personName name of the person to be retrieved.","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"     * @return the person with the given name.","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"KS2499"},"content":"    Person getPersonByName(Name personName);","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"jeremykhoo-NUS"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"jeremykhoo-NUS"},"content":"    void sortFilteredMeetingList(Comparator comparator);","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Returns an unmodifiable view of the meetings list","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"KS2499"},"content":"     * Adds the given meeting.","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"KS2499"},"content":"     * {@code meeting} must not already exist in the meeting list.","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"KS2499"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"thedesalizes"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"     * Removes {@code key} from this {@code QuickBook}.","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"     * {@code key} must exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"thedesalizes"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"thedesalizes"},"content":"    void removeMeeting(Meeting meeting);","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"KS2499"},"content":"     * Returns an unmodifiable view of the meetings list","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"chuakid"},"content":"    ObservableList\u003cMeeting\u003e getMeetingsList();","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"KS2499"},"content":"     * @return an unmodifiable view of the filtered list of meetings","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"KS2499"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"thedesalizes":4,"Beebeeoii":26,"KS2499":34,"jeremykhoo-NUS":27,"chuakid":16,"-":65}},{"path":"src/main/java/seedu/quickcontacts/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":" * Represents the in-memory model of the quick book data.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    private final QuickBook quickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     * Initializes a ModelManager with the given quickBook and userPrefs.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    public ModelManager(ReadOnlyQuickBook quickBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        requireAllNonNull(quickBook, userPrefs);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        logger.fine(\"Initializing with quick book: \" + quickBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        this.quickBook \u003d new QuickBook(quickBook);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.quickBook.getPersonList());","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.quickBook.getMeetingList());","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        this(new QuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    public Path getQuickBookFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        return userPrefs.getQuickBookFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    public void setQuickBookFilePath(Path quickBookFilePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(quickBookFilePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        userPrefs.setQuickBookFilePath(quickBookFilePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d QuickBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"    public ReadOnlyQuickBook getQuickBook() {","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"        return quickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"    public void setQuickBook(ReadOnlyQuickBook quickBook) {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        this.quickBook.resetData(quickBook);","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"        return quickBook.hasPerson(person);","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.removePerson(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"chuakid"},"content":"    public List\u003cPerson\u003e getPersonsByIndexes(List\u003cIndex\u003e indexList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"chuakid"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"chuakid"},"content":"        for (Index index : indexList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"chuakid"},"content":"            persons.add(filteredPersons.get(","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"chuakid"},"content":"                    index.getZeroBased())","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"chuakid"},"content":"            );","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"chuakid"},"content":"        return persons;","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"chuakid"},"content":"    public List\u003cMeeting\u003e getMeetingsByIndexesAndStartEnd(List\u003cIndex\u003e indexList, DateTime start, DateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"chuakid"},"content":"        List\u003cMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"chuakid"},"content":"        for (Index index : indexList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"chuakid"},"content":"            meetings.add(filteredMeetings.get(","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"chuakid"},"content":"                    index.getZeroBased())","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"chuakid"},"content":"            );","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"chuakid"},"content":"        if (start !\u003d null || end !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"chuakid"},"content":"            for (Meeting meeting : getMeetingsList()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"chuakid"},"content":"                if (!meetings.contains(meeting) \u0026\u0026 meeting.isBetween(start, end)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"chuakid"},"content":"                    meetings.add(meeting);","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"chuakid"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"chuakid"},"content":"        return meetings;","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.addPerson(person);","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.setPerson(target, editedPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":152,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"KS2499"},"content":"    public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"        return quickBook.getPersonByName(personName);","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"     * {@code versionedQuickBook}","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"jeremykhoo-NUS"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"jeremykhoo-NUS"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"jeremykhoo-NUS"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public void sortFilteredMeetingList(Comparator comparator) {","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.sortMeeting(comparator);","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"thedesalizes"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"thedesalizes"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.removeMeeting(key);","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"thedesalizes"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"Beebeeoii"},"content":"        return quickBook.equals(other.quickBook)","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"chuakid"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Meeting accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2023-03-11"},{"lineNumber":211,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"KS2499"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.addMeeting(meeting);","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"KS2499"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"KS2499"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"KS2499"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"Beebeeoii"},"content":"        return quickBook.hasMeeting(meeting);","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":223,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"KS2499"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"KS2499"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.setMeeting(target, editedMeeting);","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"chuakid"},"content":"     * Returns an unmodifiable view of the list of {@code Meeting} backed by the internal list of","lastModifiedDate":"2023-03-11"},{"lineNumber":231,"author":{"gitId":"Beebeeoii"},"content":"     * {@code versionedQuickBook}","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":234,"author":{"gitId":"chuakid"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingsList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":235,"author":{"gitId":"chuakid"},"content":"        return filteredMeetings;","lastModifiedDate":"2023-03-11"},{"lineNumber":236,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":237,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":238,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"KS2499"},"content":"     * Returns an unmodifiable view of the list of {@code Meeting} backed by the internal list of","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"Beebeeoii"},"content":"     * {@code versionedQuickBook}","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"KS2499"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"KS2499"},"content":"        return filteredMeetings;","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thedesalizes":3,"Beebeeoii":43,"KS2499":28,"chuakid":42,"jeremykhoo-NUS":16,"-":115}},{"path":"src/main/java/seedu/quickcontacts/model/QuickBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.UniqueMeetingList;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.UniquePersonList;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":" * Wraps all data at the quick-book level","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"public class QuickBook implements ReadOnlyQuickBook {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    private final UniqueMeetingList meetings;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    public QuickBook() {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"     * Creates an QuickBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    public QuickBook(ReadOnlyQuickBook toBeCopied) {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"     * Replaces the contents of the meeting list with {@code meetings}.","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"     * Resets the existing data of this {@code QuickBook} with {@code newData}.","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    public void resetData(ReadOnlyQuickBook newData) {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a person to the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"     * The person must not already exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"    public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"        requireNonNull(personName);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"        return persons.getPersonByName(personName);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"     * {@code target} must exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"     * Removes {@code key} from this {@code QuickBook}.","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"     * {@code key} must exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"    //// meeting-level operations","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a meeting to the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"     * The meeting must not already exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"    public void addMeeting(Meeting m) {","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"        meetings.add(m);","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"     * Sort Meeting in quickbook.","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public void sortMeeting(Comparator comparator) {","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"jeremykhoo-NUS"},"content":"        meetings.sort(comparator);","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"     * Replaces the given meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"     * {@code target} must exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the quick","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"     * book.","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"     * Removes {@code key} from this {@code QuickBook}.","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"     * {@code key} must exist in the quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"        meetings.remove(key);","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"            + meetings.asUnmodifiableObservableList().size() + \" meetings\";","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":177,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"Beebeeoii"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"Beebeeoii"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"Beebeeoii"},"content":"            || (other instanceof QuickBook // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"Beebeeoii"},"content":"            \u0026\u0026 persons.equals(((QuickBook) other).persons)","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"Beebeeoii"},"content":"            \u0026\u0026 meetings.equals(((QuickBook) other).meetings));","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"        return Objects.hash(persons, meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":81,"KS2499":11,"jeremykhoo-NUS":7,"-":95}},{"path":"src/main/java/seedu/quickcontacts/model/ReadOnlyQuickBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public interface ReadOnlyQuickBook {","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an unmodifiable view of the meetings list.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * This list will not contain any duplicate meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":9,"-":14}},{"path":"src/main/java/seedu/quickcontacts/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    Path getQuickBookFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Beebeeoii":3,"-":13}},{"path":"src/main/java/seedu/quickcontacts/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    private Path quickBookFilePath \u003d Paths.get(\"data\" , \"quickcontacts.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        setQuickBookFilePath(newUserPrefs.getQuickBookFilePath());","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    public Path getQuickBookFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        return quickBookFilePath;","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    public void setQuickBookFilePath(Path quickBookFilePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(quickBookFilePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        this.quickBookFilePath \u003d quickBookFilePath;","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 quickBookFilePath.equals(o.quickBookFilePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        return Objects.hash(guiSettings, quickBookFilePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        sb.append(\"\\nLocal data file location : \" + quickBookFilePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":12,"-":75}},{"path":"src/main/java/seedu/quickcontacts/model/command/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.command;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.command.exceptions.OutOfBoundsCommandHistoryException;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Represents a CommandHistory that consists of all the previously executed commands,","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" * regardless of their validity.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"public class CommandHistory {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     * The maximum number of commands kept in memory.","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public static final int MAXIMUM \u003d 30;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    private static final LinkedList\u003cString\u003e commands \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    private static int index \u003d -1;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a command to be the last one in the {@code CommandHistory}.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     * @param input The command input.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public static void push(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        if (commands.size() \u003e\u003d MAXIMUM) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"            commands.removeFirst();","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        commands.add(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        index \u003d commands.size() - 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the pointer such that {@code CommandHistory.prev()} will return the last command.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    public static void setLast() {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        index \u003d commands.size();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    private static boolean hasPrev() {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        return !commands.isEmpty() \u0026\u0026 index \u003e 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    private static boolean hasNext() {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        return index \u003c commands.size() - 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"     * Retrieves the previous command in the {@code CommandHistory}.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     * @return The previous command input.","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     * @throws OutOfBoundsCommandHistoryException If there are no commands before the current one.","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    public static String prev() throws OutOfBoundsCommandHistoryException {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        if (hasPrev()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"            index--;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"            return commands.get(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        throw new OutOfBoundsCommandHistoryException();","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"     * Retrieves the next command in the {@code CommandHistory}.","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"     * @return The next command input.","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"     * @throws OutOfBoundsCommandHistoryException If there are no commands after the current one.","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    public static String next() throws OutOfBoundsCommandHistoryException {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        if (hasNext()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"            index++;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"            return commands.get(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        throw new OutOfBoundsCommandHistoryException();","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"     * Clears {@code CommandHistory}","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    public static void clear() {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        commands.clear();","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        index \u003d -1;","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Beebeeoii":85}},{"path":"src/main/java/seedu/quickcontacts/model/command/exceptions/OutOfBoundsCommandHistoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.command.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Signals that the operation is unable to retrieve any commands from the history","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" * as the index is out of bounds.","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"public class OutOfBoundsCommandHistoryException extends RuntimeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Beebeeoii":8}},{"path":"src/main/java/seedu/quickcontacts/model/meeting/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import java.time.Year;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":" * Represents a Meetings\u0027s date/time in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"public class DateTime implements Comparable\u003cDateTime\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    public static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    private static final String DATE_FORMAT_MESSAGE \u003d \"dd/MM/yyyy OR DD/MM/YY OR DD/MM with separators being \u0027/\u0027, \u0027\u0027, \u0027\"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"            + \".\u0027, \u0027-\u0027\";","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    private static final String TIME_FORMAT_MESSAGE \u003d \"HH:mm OR HH:mmAM/PM with separators being \u0027:\u0027,\u0027\u0027,\u0027.\u0027\";","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"            \"Dates/Times should only contain alphanumeric characters and spaces, and it should not be blank\"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"                    + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"                    + \"1. Date must comply with the format: \" + DATE_FORMAT_MESSAGE + \".\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                    + \"2. Time must comply with the format: \" + TIME_FORMAT_MESSAGE + \" in 24-hour format.\";","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     * The first character of the date/time string must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"     * Inputs in addition to formats like dd/MM/yyyy are allowed for semantics","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"     * such as \"next monday\".","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{ASCII} ]*\";","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    private static final String[] DATE_SEPARATORS \u003d {\"/\", \"\", \".\", \"-\"};","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    private static final String[] TIME_SEPARATORS \u003d {\":\", \"\", \".\"};","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    private static final String SEPARATOR_PLACEHOLDER \u003d \"{sep}\";","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    private static final String DDMMYYYY_TEMPLATE \u003d \"dd\" + SEPARATOR_PLACEHOLDER + \"MM\"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"            + SEPARATOR_PLACEHOLDER + \"yyyy\";","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    private static final String DDMMYY_TEMPLATE \u003d \"dd\" + SEPARATOR_PLACEHOLDER + \"MM\"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"            + SEPARATOR_PLACEHOLDER + \"yy\";","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    private static final String DDMM_TEMPLATE \u003d \"dd\" + SEPARATOR_PLACEHOLDER + \"MM\";","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    private static final String HHMM_TEMPLATE \u003d \"HH\" + SEPARATOR_PLACEHOLDER + \"mm\";","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    private static final String HHMM_AM_PM_TEMPLATE \u003d \"h\" + SEPARATOR_PLACEHOLDER + \"mma\";","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    private final LocalDate meetingDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"    private final Optional\u003cLocalTime\u003e meetingTime;","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"     * This is used only for inputs that include specific durations.","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"     * For example Thursday 2pm - Thursday 4pm implies duration of","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"     * 2 hours.","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    private final Duration meetingDuration;","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code DateTime} without any duration specified.","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     * @param dateTime A valid date/time.","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        String[] dtSplit \u003d dateTime.split(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        String datePortion \u003d dtSplit[0];","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        meetingDate \u003d stringToLocalDate(datePortion);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        if (dtSplit.length \u003d\u003d 2) {","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"            String timePortion \u003d dtSplit[1];","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"            meetingTime \u003d Optional.of(stringToLocalTime(timePortion));","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"            meetingTime \u003d Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        meetingDuration \u003d Duration.ZERO;","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code DateTime} with a duration specified.","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"     * @param startDateTime A valid start date/time.","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"     * @param endDateTime   A valid end date/time.","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"    public DateTime(String startDateTime, String endDateTime) {","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        requireAllNonNull(startDateTime, endDateTime);","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidDateTime(startDateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidDateTime(endDateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"        String[] startDtSplit \u003d startDateTime.split(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"        String[] endDtSplit \u003d endDateTime.split(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        String startDatePortion \u003d startDtSplit[0];","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        String endDatePortion \u003d endDtSplit[0];","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        meetingDate \u003d stringToLocalDate(startDatePortion);","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        if (startDtSplit.length \u003d\u003d 2 \u0026\u0026 endDtSplit.length \u003d\u003d 2) {","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"            String startTimePortion \u003d startDtSplit[1];","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"            String endTimePortion \u003d endDtSplit[1];","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"chuakid"},"content":"            meetingTime \u003d Optional.of(stringToLocalTime(startTimePortion));","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"chuakid"},"content":"            LocalDateTime startDT \u003d LocalDateTime.of(meetingDate, meetingTime.get());","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"            LocalDateTime endDT \u003d LocalDateTime.of(stringToLocalDate(endDatePortion),","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"                    stringToLocalTime(endTimePortion));","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"            checkArgument(isValidDuration(startDT, endDT));","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"            meetingDuration \u003d Duration.between(startDT, endDT);","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"chuakid"},"content":"            meetingTime \u003d Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"            meetingDuration \u003d Duration.between(meetingDate, stringToLocalDate(endDatePortion));","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"     * Returns a {@code string} representation of the Date and Time (if exists) stored","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"     * in this class.","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"chuakid"},"content":"        String timePortion \u003d meetingTime","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"chuakid"},"content":"                .map(localTime -\u003e \" \" + localTime.format(DateTimeFormatter.ofPattern(TIME_FORMAT)))","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"chuakid"},"content":"                .orElse(\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"chuakid"},"content":"        return meetingDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT)) + timePortion;","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid date/time.","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"        String[] dtSplit \u003d test.split(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"        if (dtSplit.length \u003e 2 || !test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"        String datePortion \u003d dtSplit[0];","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"        if (dtSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"            return isValidDate(datePortion);","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"        String timePortion \u003d dtSplit[1];","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"        return isValidDate(datePortion) \u0026\u0026 isValidTime(timePortion);","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid date/time.","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidDuration(LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"        return !Duration.between(startDateTime, endDateTime).isNegative()","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 !Duration.between(startDateTime, endDateTime).isZero();","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"    private static boolean isValidDate(String test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 stringToLocalDate(test) !\u003d LocalDate.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"Beebeeoii"},"content":"    private static boolean isValidTime(String test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"Beebeeoii"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 stringToLocalTime(test) !\u003d LocalTime.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"Beebeeoii"},"content":"    private static LocalDate stringToLocalDate(String date) {","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"Beebeeoii"},"content":"            return parseDate(date, getDateFormat(date));","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"Beebeeoii"},"content":"        } catch (InvalidDateTimeFormatException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"Beebeeoii"},"content":"            return LocalDate.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"Beebeeoii"},"content":"    private static LocalTime stringToLocalTime(String time) {","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"Beebeeoii"},"content":"            return parseTime(time, getTimeFormat(time));","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"        } catch (InvalidDateTimeFormatException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"Beebeeoii"},"content":"            return LocalTime.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"Beebeeoii"},"content":"    private static LocalDate parseDate(String date, String pattern) {","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"Beebeeoii"},"content":"            if (!pattern.equals(\"ddMM\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"Beebeeoii"},"content":"                return LocalDate.parse(date, DateTimeFormatter.ofPattern(pattern, Locale.ENGLISH));","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"Beebeeoii"},"content":"            if (date.length() !\u003d 4 \u0026\u0026 date.length() !\u003d 5) {","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"Beebeeoii"},"content":"                throw new InvalidDateTimeFormatException();","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"Beebeeoii"},"content":"            String newDate \u003d date + Year.now();","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"Beebeeoii"},"content":"            if (date.length() \u003d\u003d 5) {","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"Beebeeoii"},"content":"                newDate \u003d date + date.charAt(2) + Year.now();","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"Beebeeoii"},"content":"            return LocalDate.parse(newDate, DateTimeFormatter.ofPattern(getDateFormat(newDate), Locale.ENGLISH));","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeParseException | InvalidDateTimeFormatException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"Beebeeoii"},"content":"            return LocalDate.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"Beebeeoii"},"content":"    private static LocalTime parseTime(String time, String pattern) {","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"Beebeeoii"},"content":"            return LocalTime.parse(time, DateTimeFormatter.ofPattern(pattern, Locale.ENGLISH));","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"Beebeeoii"},"content":"            return LocalTime.MAX;","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"Beebeeoii"},"content":"    private static String getDateFormat(String date) throws InvalidDateTimeFormatException {","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"Beebeeoii"},"content":"        String dateFormat \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"Beebeeoii"},"content":"        for (String separator : DATE_SEPARATORS) {","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"Beebeeoii"},"content":"            String ddmmyyyyPattern \u003d patternForSeparator(DDMMYYYY_TEMPLATE, separator);","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"Beebeeoii"},"content":"            String ddmmyyPattern \u003d patternForSeparator(DDMMYY_TEMPLATE, separator);","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"Beebeeoii"},"content":"            String ddmmPattern \u003d patternForSeparator(DDMM_TEMPLATE, separator);","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"Beebeeoii"},"content":"            if (parseDate(date, ddmmyyyyPattern) !\u003d LocalDate.MAX) {","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"Beebeeoii"},"content":"                dateFormat \u003d ddmmyyyyPattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"Beebeeoii"},"content":"            if (parseDate(date, ddmmyyPattern) !\u003d LocalDate.MAX) {","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"Beebeeoii"},"content":"                dateFormat \u003d ddmmyyPattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"Beebeeoii"},"content":"            if (parseDate(date, ddmmPattern) !\u003d LocalDate.MAX) {","lastModifiedDate":"2023-03-20"},{"lineNumber":242,"author":{"gitId":"Beebeeoii"},"content":"                dateFormat \u003d ddmmPattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":244,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":245,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"Beebeeoii"},"content":"        if (dateFormat.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2023-03-15"},{"lineNumber":248,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":249,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":250,"author":{"gitId":"Beebeeoii"},"content":"        return dateFormat;","lastModifiedDate":"2023-03-15"},{"lineNumber":251,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":252,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":253,"author":{"gitId":"Beebeeoii"},"content":"    private static String getTimeFormat(String time) throws InvalidDateTimeFormatException {","lastModifiedDate":"2023-03-15"},{"lineNumber":254,"author":{"gitId":"Beebeeoii"},"content":"        String timeFormat \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":255,"author":{"gitId":"Beebeeoii"},"content":"        for (String separator : TIME_SEPARATORS) {","lastModifiedDate":"2023-03-15"},{"lineNumber":256,"author":{"gitId":"Beebeeoii"},"content":"            String hhmmPattern \u003d patternForSeparator(HHMM_TEMPLATE, separator);","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"Beebeeoii"},"content":"            String hhmmampmPattern \u003d patternForSeparator(HHMM_AM_PM_TEMPLATE, separator);","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":259,"author":{"gitId":"Beebeeoii"},"content":"            if (parseTime(time, hhmmPattern) !\u003d LocalTime.MAX) {","lastModifiedDate":"2023-03-20"},{"lineNumber":260,"author":{"gitId":"Beebeeoii"},"content":"                timeFormat \u003d hhmmPattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":261,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":262,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":263,"author":{"gitId":"Beebeeoii"},"content":"            if (parseTime(time, hhmmampmPattern) !\u003d LocalTime.MAX) {","lastModifiedDate":"2023-03-20"},{"lineNumber":264,"author":{"gitId":"Beebeeoii"},"content":"                timeFormat \u003d hhmmampmPattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":265,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":266,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":267,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":268,"author":{"gitId":"Beebeeoii"},"content":"        if (timeFormat.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":269,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2023-03-15"},{"lineNumber":270,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":271,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":272,"author":{"gitId":"Beebeeoii"},"content":"        return timeFormat;","lastModifiedDate":"2023-03-15"},{"lineNumber":273,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":274,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":275,"author":{"gitId":"Beebeeoii"},"content":"    private static String patternForSeparator(String template, String sep) {","lastModifiedDate":"2023-03-15"},{"lineNumber":276,"author":{"gitId":"Beebeeoii"},"content":"        return template.replace(SEPARATOR_PLACEHOLDER, sep);","lastModifiedDate":"2023-03-15"},{"lineNumber":277,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":278,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":279,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":280,"author":{"gitId":"Beebeeoii"},"content":"     * Returns {@code LocalDateTime} representation of the DateTime stored.","lastModifiedDate":"2023-03-20"},{"lineNumber":281,"author":{"gitId":"Beebeeoii"},"content":"     * If time is not specified, it will default to 00:00 (12AM).","lastModifiedDate":"2023-03-20"},{"lineNumber":282,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":283,"author":{"gitId":"Beebeeoii"},"content":"     * @return {@code LocalDateTime} representation of the DateTime stored.","lastModifiedDate":"2023-03-20"},{"lineNumber":284,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":285,"author":{"gitId":"Beebeeoii"},"content":"    public LocalDateTime get() {","lastModifiedDate":"2023-03-20"},{"lineNumber":286,"author":{"gitId":"chuakid"},"content":"        return LocalDateTime.of(meetingDate, meetingTime.orElse(LocalTime.of(0, 0)));","lastModifiedDate":"2023-03-24"},{"lineNumber":287,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":288,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":289,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":290,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":291,"author":{"gitId":"chuakid"},"content":"        if (meetingDuration !\u003d null \u0026\u0026 !meetingDuration.isZero()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"chuakid"},"content":"            String start \u003d meetingTime.orElse(LocalTime.of(0, 0))","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"chuakid"},"content":"                    .format(DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"chuakid"},"content":"            String end \u003d LocalDateTime.of(meetingDate, meetingTime.orElse(LocalTime.of(0, 0))).plus(meetingDuration)","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"chuakid"},"content":"                    .format(DateTimeFormatter.ofPattern(DATE_FORMAT + \" \" + TIME_FORMAT));","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"Beebeeoii"},"content":"            return meetingDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT))","lastModifiedDate":"2023-03-15"},{"lineNumber":297,"author":{"gitId":"Beebeeoii"},"content":"                    + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":298,"author":{"gitId":"chuakid"},"content":"                    + start","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"Beebeeoii"},"content":"                    + \" to \"","lastModifiedDate":"2023-03-08"},{"lineNumber":300,"author":{"gitId":"Beebeeoii"},"content":"                    + end;","lastModifiedDate":"2023-03-08"},{"lineNumber":301,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":302,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":303,"author":{"gitId":"Beebeeoii"},"content":"        return getDateTime();","lastModifiedDate":"2023-03-15"},{"lineNumber":304,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":305,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":306,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":307,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":308,"author":{"gitId":"Beebeeoii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":309,"author":{"gitId":"Beebeeoii"},"content":"                || (other instanceof DateTime // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":310,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingDate.equals(((DateTime) other).meetingDate) // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":311,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingTime.equals(((DateTime) other).meetingTime) // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":312,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingDuration.equals(((DateTime) other).meetingDuration)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":313,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":314,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":315,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":316,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":317,"author":{"gitId":"Beebeeoii"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-07"},{"lineNumber":318,"author":{"gitId":"Beebeeoii"},"content":"        return Objects.hash(meetingDate, meetingTime, meetingDuration);","lastModifiedDate":"2023-03-15"},{"lineNumber":319,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":320,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"chuakid"},"content":"    public int compareTo(DateTime o) {","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"chuakid"},"content":"        if (meetingDate.isEqual(o.meetingDate)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":324,"author":{"gitId":"chuakid"},"content":"            return this.meetingTime","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"chuakid"},"content":"                    .orElse(LocalTime.of(0, 0))","lastModifiedDate":"2023-03-24"},{"lineNumber":326,"author":{"gitId":"chuakid"},"content":"                    .compareTo(o.meetingTime","lastModifiedDate":"2023-03-24"},{"lineNumber":327,"author":{"gitId":"chuakid"},"content":"                            .orElse(LocalTime.of(0, 0)));","lastModifiedDate":"2023-03-24"},{"lineNumber":328,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":329,"author":{"gitId":"chuakid"},"content":"        return meetingDate.compareTo(o.meetingDate);","lastModifiedDate":"2023-03-24"},{"lineNumber":330,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Beebeeoii":294,"chuakid":37}},{"path":"src/main/java/seedu/quickcontacts/model/meeting/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":" * Represents a Meeting\u0027s description in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class Description {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{ASCII} ]*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private final String meetingDescription;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public Description(String description) {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        meetingDescription \u003d description;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        return meetingDescription;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingDescription.equals(((Description) other).meetingDescription)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        return meetingDescription.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Beebeeoii":56}},{"path":"src/main/java/seedu/quickcontacts/model/meeting/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.net.URL;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" * Represents a Meeting\u0027s location in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public class Location {","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{ASCII} ]*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    private final String meetingLocation;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    private final boolean isVirtualLocation;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code Location}.","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * @param location A valid description.","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public Location(String location) {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        meetingLocation \u003d location;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        isVirtualLocation \u003d isValidVirtualLocation(location);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    public boolean isVirtualLocation() {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        return isVirtualLocation;","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"     * @param test A string to test for validity.","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"     * @return True if string is valid, false otherwise.","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid URL.","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"     * @param url A string to test if it is a URL.","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"     * @return True if string is a valid URL, false otherwise.","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidVirtualLocation(String url) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        if (!isValidLocation(url)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"            new URL(url).toURI();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        } catch (MalformedURLException | URISyntaxException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        return meetingLocation;","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingLocation.equals(((Location) other).meetingLocation)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        return meetingLocation.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Beebeeoii":89}},{"path":"src/main/java/seedu/quickcontacts/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":" * Represents a Meeting in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"public class Meeting {","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    // Identity fields","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private final Title title;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private final Set\u003cPerson\u003e attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    // Data fields","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    private final Location location;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    private final Description description;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private boolean hasPassed \u003d false;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public Meeting(Title title, DateTime dateTime, Set\u003cPerson\u003e attendees, Location location, Description description) {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        requireAllNonNull(title, dateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        this.attendees.addAll(attendees);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    public Title getTitle() {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        return title;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    public DateTime getDateTime() {","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        return dateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an immutable attendee set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    public Set\u003cPerson\u003e getAttendees() {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        return Collections.unmodifiableSet(attendees);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        return location;","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        return description;","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    public boolean getHasPassed() {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        return hasPassed;","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if both meetings have the same title, dateTime and attendees.","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     * This defines a weaker notion of equality between two meetings.","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    public boolean isSameMeeting(Meeting otherMeeting) {","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        if (otherMeeting \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        return otherMeeting !\u003d null","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getTitle().equals(getTitle())","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getDateTime().equals(getDateTime())","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getAttendees().equals(getAttendees());","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if {@code Meeting} has passed based on the current DateTime.","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"    public boolean hasPassed() {","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        this.hasPassed \u003d LocalDateTime.now().isAfter(dateTime.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        return this.hasPassed;","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if both meetings have the same identity and data fields.","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"     * This defines a stronger notion of equality between two meetings.","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        return otherMeeting.getTitle().equals(getTitle())","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getDateTime().equals(getDateTime())","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getAttendees().equals(getAttendees())","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getLocation().equals(getLocation())","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 otherMeeting.getDescription().equals(getDescription());","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"chuakid"},"content":"     * Checks whether meeting is between two datetimes","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"chuakid"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"chuakid"},"content":"     * @return true if meeting is between two datetimes, else false","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"chuakid"},"content":"    public boolean isBetween(DateTime start, DateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"chuakid"},"content":"        if (end \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"chuakid"},"content":"            return this.dateTime.compareTo(start) \u003e\u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"chuakid"},"content":"        if (start \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"chuakid"},"content":"            return this.dateTime.compareTo(end) \u003c\u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"chuakid"},"content":"        return this.dateTime.compareTo(start) \u003e\u003d 0 \u0026\u0026 this.dateTime.compareTo(end) \u003c\u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"        return Objects.hash(title, dateTime, attendees, location, description);","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"        return getTitle()","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"                + \"; Date/Time: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"                + getDateTime()","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"                + \"; Attendees: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"                + getAttendees()","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"                + \"; Location: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"                + getLocation()","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"                + \"; Description: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"                + getDescription();","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Beebeeoii":131,"KS2499":1,"chuakid":15}},{"path":"src/main/java/seedu/quickcontacts/model/meeting/MeetingContainsNamesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.StringUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":" * Tests that a {@code Meeting}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"public class MeetingContainsNamesPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public MeetingContainsNamesPredicate(List\u003cString\u003e names) {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    public MeetingContainsNamesPredicate() {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"        this.names \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"     * @param meeting the input argument to be tested","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"     * @return True if the meeting contains any person whose name contain any of the keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"        if (this.names \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        return names.stream().anyMatch(name -\u003e meeting.getAttendees().stream().anyMatch(person -\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"            StringUtil.containsWordIgnoreCase(person.getName().fullName, name)));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        } // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        if (!(other instanceof MeetingContainsNamesPredicate)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"        } // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"        if (names \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"            return ((MeetingContainsNamesPredicate) other).names \u003d\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        return names.equals(((MeetingContainsNamesPredicate) other).names); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"    public List\u003cString\u003e getPersonNames() {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        return names;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":2,"KS2499":50}},{"path":"src/main/java/seedu/quickcontacts/model/meeting/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":" * Represents a Meeting\u0027s title in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class Title {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"            \"Titles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * The first character of the title must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private final String meetingTitle;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * @param title A valid title.","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public Title(String title) {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        meetingTitle \u003d title;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        return meetingTitle;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 meetingTitle.equals(((Title) other).meetingTitle)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        return meetingTitle.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Beebeeoii":56}},{"path":"src/main/java/seedu/quickcontacts/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":" * A meeting is considered unique by comparing using {@code Meeting#isSameMeeting(Meeting)}. As such, adding and","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":" * updating of meetings uses Meeting#isSameMeeting(Meeting) for equality to ensure that the meeting being added or","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":" * updated is unique in terms of identity in the UniqueMeetingList. However, the removal of a meeting uses","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":" * Meeting#equals(Object) to ensure that the meeting with exactly the same fields is removed.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":" * @see Meeting#isSameMeeting(Meeting)","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if the list contains an equivalent meeting as the given argument.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMeeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     * The meeting must not already exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jeremykhoo-NUS"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"jeremykhoo-NUS"},"content":"     * Sorts meeting in the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"jeremykhoo-NUS"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public void sort(Comparator comparator) {","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"jeremykhoo-NUS"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"jeremykhoo-NUS"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        if (!target.isSameMeeting(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings(UniqueMeetingList replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        if (!meetingsAreUnique(meetings)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"        return null;","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"                || (other instanceof UniqueMeetingList // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"                \u0026\u0026 internalList.equals(((UniqueMeetingList) other).internalList));","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"     * Returns true if {@code meetings} contains only unique meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"                if (meetings.get(i).isSameMeeting(meetings.get(j))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"                    return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":137,"jeremykhoo-NUS":8}},{"path":"src/main/java/seedu/quickcontacts/model/meeting/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Signals that the operation will result in duplicate Meetings (Meetings are considered duplicates if they have the","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" * same identity).","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"        super(\"Operation would result in duplicate meetings\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":11}},{"path":"src/main/java/seedu/quickcontacts/model/meeting/exceptions/InvalidDateTimeFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Signals that the operation is unable to convert a dateTime from its","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" * string representation to a specified format.","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"public class InvalidDateTimeFormatException extends RuntimeException {","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Beebeeoii":8}},{"path":"src/main/java/seedu/quickcontacts/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Signals that the operation is unable to find the specified meeting.","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"public class MeetingNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":7}},{"path":"src/main/java/seedu/quickcontacts/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":2,"-":55}},{"path":"src/main/java/seedu/quickcontacts/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":2,"-":69}},{"path":"src/main/java/seedu/quickcontacts/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":2,"-":57}},{"path":"src/main/java/seedu/quickcontacts/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.StringUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Beebeeoii":2,"-":29}},{"path":"src/main/java/seedu/quickcontacts/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"        if (otherPerson.getPhone() \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"            if (getPhone() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"                return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"            if (!otherPerson.getPhone().equals(getPhone())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"                return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"        if (otherPerson.getEmail() \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"            if (getEmail() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"                return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"            if (!otherPerson.getEmail().equals(getEmail())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"                return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"        if (otherPerson.getAddress() \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"            if (getAddress() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"                return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"            if (!otherPerson.getAddress().equals(getAddress())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"                return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":3,"KS2499":28,"-":116}},{"path":"src/main/java/seedu/quickcontacts/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":2,"-":51}},{"path":"src/main/java/seedu/quickcontacts/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"     * A simpler way of getting a person by name from address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"     * @param name of the person to be found","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"     * @return the person with the given name if they are in the list, null otherwise","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"    public Person getPersonByName(Name name) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"                return person;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"        return null;","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":4,"KS2499":17,"-":132}},{"path":"src/main/java/seedu/quickcontacts/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Beebeeoii":1,"-":10}},{"path":"src/main/java/seedu/quickcontacts/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"Beebeeoii":1,"-":5}},{"path":"src/main/java/seedu/quickcontacts/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Beebeeoii":2,"-":52}},{"path":"src/main/java/seedu/quickcontacts/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Description;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Title;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":" * Contains utility methods for populating {@code QuickBook} with sample data.","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     * {@code Person} that are also attendees of meetings.","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    private static final Person ALEX \u003d new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            getTagSet(\"friends\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            ALEX,","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    public static Meeting[] getSampleMeetingss() {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        return new Meeting[] {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"            new Meeting(new Title(\"Lunch with Alex\"), new DateTime(\"03/03/2023 15:00\"), getAttendeeSet(ALEX),","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"                    new Location(\"The Deck\"), new Description(\"Catch-up\"))","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        };","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    public static ReadOnlyQuickBook getSampleQuickBook() {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook sampleAb \u003d new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        for (Meeting sampleMeeting : getSampleMeetingss()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"            sampleAb.addMeeting(sampleMeeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an attendee set containing the list of Person given.","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public static Set\u003cPerson\u003e getAttendeeSet(Person... attendees) {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        return Arrays.stream(attendees)","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Beebeeoii":44,"-":45}},{"path":"src/main/java/seedu/quickcontacts/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Description;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Title;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"public class JsonAdaptedMeeting {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meeting\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    private final String title;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private final String dateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    private final String location;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    private final String description;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    private final List\u003cJsonAdaptedPerson\u003e attendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given meeting details.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"title\") String title, @JsonProperty(\"dateTime\") String dateTime,","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                              @JsonProperty(\"attendees\") List\u003cJsonAdaptedPerson\u003e attendees,","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"                              @JsonProperty(\"location\") String location,","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"                              @JsonProperty(\"description\") String description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        if (attendees !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"            this.attendees.addAll(attendees);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        title \u003d source.getTitle().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        dateTime \u003d source.getDateTime().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"        if (source.getLocation() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"            location \u003d source.getLocation().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"            location \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"        if (source.getDescription() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"            description \u003d source.getDescription().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"            description \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        attendees.addAll(source.getAttendees().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     * Converts this Jackson-friendly adapted meeting object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        final List\u003cPerson\u003e meetingAttendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        for (JsonAdaptedPerson attendee : attendees) {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"            meetingAttendees.add(attendee.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"                    DateTime.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        if (!DateTime.isValidDateTime(dateTime)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        final DateTime modelDateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"        final Location modelLocation;","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"        if (location !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"            if (!Location.isValidLocation(location)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"                throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"            modelLocation \u003d new Location(location);","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"            modelLocation \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"        final Description modelDescription;","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"        if (description !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"            if (!Description.isValidDescription(description)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"                throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"            modelDescription \u003d new Description(description);","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"            modelDescription \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"        final Set\u003cPerson\u003e modelAttendees \u003d new HashSet\u003c\u003e(meetingAttendees);","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"        return new Meeting(modelTitle, modelDateTime, modelAttendees, modelLocation, modelDescription);","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":101,"KS2499":20}},{"path":"src/main/java/seedu/quickcontacts/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"public class JsonAdaptedPerson {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"        if (source.getPhone() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"            phone \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        if (source.getEmail() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"            email \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"        if (source.getAddress() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"            address \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"        final Phone modelPhone;","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"        if (phone !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"            modelPhone \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"        final Email modelEmail;","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"        if (email !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"            modelEmail \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"        final Address modelAddress;","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"        if (address !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"            modelAddress \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Beebeeoii":8,"KS2499":27,"chuakid":1,"-":89}},{"path":"src/main/java/seedu/quickcontacts/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Beebeeoii":3,"-":45}},{"path":"src/main/java/seedu/quickcontacts/storage/JsonQuickBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.FileUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.JsonUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":" * A class to access QuickBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"public class JsonQuickBookStorage implements QuickBookStorage {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonQuickBookStorage.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public JsonQuickBookStorage(Path filePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    public Path getQuickBookFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    public Optional\u003cReadOnlyQuickBook\u003e readQuickBook() throws DataConversionException {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        return readQuickBook(filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     * Similar to {@link #readQuickBook()}.","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    public Optional\u003cReadOnlyQuickBook\u003e readQuickBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        Optional\u003cJsonSerializableQuickBook\u003e jsonQuickBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"                filePath, JsonSerializableQuickBook.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        if (!jsonQuickBook.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"            return Optional.of(jsonQuickBook.get().toModelType());","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    public void saveQuickBook(ReadOnlyQuickBook quickBook) throws IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        saveQuickBook(quickBook, filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"     * Similar to {@link #saveQuickBook(ReadOnlyQuickBook)}.","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public void saveQuickBook(ReadOnlyQuickBook quickBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        requireNonNull(quickBook);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableQuickBook(quickBook), filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Beebeeoii":26,"-":54}},{"path":"src/main/java/seedu/quickcontacts/storage/JsonSerializableQuickBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":" * An Immutable QuickBook that is serializable to JSON format.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"@JsonRootName(value \u003d \"quickbook\")","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"class JsonSerializableQuickBook {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"Meetings list contains duplicate meeting(s).\";","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * Constructs a {@code JsonSerializableQuickBook} with the given persons and meetings.","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    public JsonSerializableQuickBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"                                     @JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     * Converts a given {@code ReadOnlyQuickBook} into this class for Jackson use.","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableQuickBook}.","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    public JsonSerializableQuickBook(ReadOnlyQuickBook source) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     * Converts this quick book into the model\u0027s {@code QuickBook} object.","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    public QuickBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook quickBook \u003d new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"            if (quickBook.hasPerson(person)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"            quickBook.addPerson(person);","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"            if (quickBook.hasMeeting(meeting)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"            quickBook.addMeeting(meeting);","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        return quickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Beebeeoii":34,"-":41}},{"path":"src/main/java/seedu/quickcontacts/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.JsonUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Beebeeoii":5,"-":42}},{"path":"src/main/java/seedu/quickcontacts/storage/QuickBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":" * Represents a storage for {@link QuickBook}.","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public interface QuickBookStorage {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    Path getQuickBookFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     * Returns QuickBook data as a {@link ReadOnlyQuickBook}.","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    Optional\u003cReadOnlyQuickBook\u003e readQuickBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * @see #getQuickBookFilePath()","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    Optional\u003cReadOnlyQuickBook\u003e readQuickBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     * Saves the given {@link ReadOnlyQuickBook} to the storage.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"     * @param quickBook cannot be null.","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    void saveQuickBook(ReadOnlyQuickBook quickBook) throws IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"     * @see #saveQuickBook(ReadOnlyQuickBook)","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    void saveQuickBook(ReadOnlyQuickBook quickBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Beebeeoii":46}},{"path":"src/main/java/seedu/quickcontacts/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"public interface Storage extends QuickBookStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    Path getQuickBookFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    Optional\u003cReadOnlyQuickBook\u003e readQuickBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    void saveQuickBook(ReadOnlyQuickBook quickBook) throws IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Beebeeoii":9,"-":23}},{"path":"src/main/java/seedu/quickcontacts/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" * Manages storage of QuickBook data in local storage.","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private QuickBookStorage quickBookStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     * Creates a {@code StorageManager} with the given {@code QuickBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public StorageManager(QuickBookStorage quickBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        this.quickBookStorage \u003d quickBookStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d QuickBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    public Path getQuickBookFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        return quickBookStorage.getQuickBookFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    public Optional\u003cReadOnlyQuickBook\u003e readQuickBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        return readQuickBook(quickBookStorage.getQuickBookFilePath());","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public Optional\u003cReadOnlyQuickBook\u003e readQuickBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        return quickBookStorage.readQuickBook(filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    public void saveQuickBook(ReadOnlyQuickBook quickBook) throws IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        saveQuickBook(quickBook, quickBookStorage.getQuickBookFilePath());","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    public void saveQuickBook(ReadOnlyQuickBook quickBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        quickBookStorage.saveQuickBook(quickBook, filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":22,"-":56}},{"path":"src/main/java/seedu/quickcontacts/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":" * Represents a storage for {@link seedu.quickcontacts.model.UserPrefs}.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * Saves the given {@link seedu.quickcontacts.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Beebeeoii":6,"-":30}},{"path":"src/main/java/seedu/quickcontacts/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.command.CommandHistory;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.command.exceptions.OutOfBoundsCommandHistoryException;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    private final CommandInputSuggester commandInputSuggester;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public CommandBox(CommandExecutor commandExecutor, CommandInputSuggester commandInputSuggester) {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        this.commandInputSuggester \u003d commandInputSuggester;","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, new KeyPressedHandler());","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"         * @see seedu.quickcontacts.logic.Logic#execute(String)","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"     * Represents a function that can suggest inputs.","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"    public interface CommandInputSuggester {","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        /**","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"         * Suggest prefixes based on current text.","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"         *","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"         * @see seedu.quickcontacts.logic.Logic#autocomplete(String)","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"         */","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"        AutocompleteResult suggest(String commandText);","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"     * Represents the handler for {@code KeyCode.UP} and {@code KeyCode.DOWN} key-presses.","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"    public class KeyPressedHandler implements EventHandler\u003cKeyEvent\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"        public void handle(KeyEvent event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"            KeyCode key \u003d event.getCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"            switch (key) {","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"            case UP:","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"                if (commandTextField.getText().equals(\"\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"                    CommandHistory.setLast();","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"                try {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.setStyle(\"-fx-display-caret: false;\");","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.setText(CommandHistory.prev());","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"                } catch (OutOfBoundsCommandHistoryException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"                    // Nothing to do","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"                } finally {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.end();","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.setStyle(\"-fx-display-caret: true;\");","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"            case DOWN:","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"                try {","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.setText(CommandHistory.next());","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"                } catch (OutOfBoundsCommandHistoryException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.setText(\"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"                } finally {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.end();","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"            case TAB:","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"                try {","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"                    AutocompleteResult suggestion \u003d commandInputSuggester.suggest(commandTextField.getText());","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"                    String currInput \u003d commandTextField.getText().trim();","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"                    if (suggestion.getPrefix().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"                        break;","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"                    }","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"                    String prefix \u003d suggestion.getPrefix().get().getPrefix();","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"                    if (!suggestion.isReplaceCurrent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"                        commandTextField.setText(currInput + \" \" + prefix);","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"                        break;","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"                    }","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"                    // Replaces current prefix","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"                    String[] currInputSplit \u003d currInput.split(\" \");","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"                    if (currInputSplit[currInputSplit.length - 1].endsWith(\"/\")) {","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"                        currInputSplit[currInputSplit.length - 1] \u003d prefix;","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"                        commandTextField.setText(String.join(\" \", currInputSplit));","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"                    } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"                        commandTextField.setText(currInput + \" \" + prefix);","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"                    }","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"                } finally {","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"                    event.consume();","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"                    commandTextField.end();","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"            default:","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Beebeeoii":96,"-":79}},{"path":"src/main/java/seedu/quickcontacts/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"jeremykhoo-NUS"},"content":"    public static final String HELP_MESSAGE \u003d \"The following are required prefix for addm\"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \" and add command and what they stand for. \\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"You can press the tab key to fill in the next parameter, \\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"if you forget what comes next. The other commands use the \\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"same prefixes to refer to a meeting/person property\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"addm: \\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"Prefix: m/ dt/ p/ l/ des/\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"m/ : meeting title\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"dt/ : datetime\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"p/ : person attending the meeting (use this tag for each person attending)\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"des/ : description of the meeting\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"add: \\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"Prefix required: n/ p/ e/ a/ t/\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"n/: name\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"p/: phone number\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"e/: email\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"a/: address\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"t/ tag\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + \"More help can be found in the user guide\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"jeremykhoo-NUS"},"content":"            + USERGUIDE_URL;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Beebeeoii":2,"jeremykhoo-NUS":20,"-":99}},{"path":"src/main/java/seedu/quickcontacts/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.Logic;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AutocompleteResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"chuakid"},"content":"        loadTheme();","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"    private void loadTheme() {","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"        String theme \u003d logic.getGuiSettings().isDarkTheme() ? \"DarkTheme.css\" : \"LightTheme.css\";","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"chuakid"},"content":"        primaryStage.getScene().getStylesheets().add(Objects.requireNonNull(getClass().getClassLoader().getResource(","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"chuakid"},"content":"                        \"view/\" + theme))","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"                .toExternalForm());","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"chuakid"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"KS2499"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getFilteredMeetingList());","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"chuakid"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getQuickBookFilePath());","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, this::getAutocompleteSuggestion);","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"chuakid"},"content":"     * Changes the current theme","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"chuakid"},"content":"    public void handleTheme() {","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"chuakid"},"content":"        if (logic.getGuiSettings().isDarkTheme()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"chuakid"},"content":"            primaryStage.getScene().getStylesheets().add(Objects.requireNonNull(getClass().getClassLoader().getResource(","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"chuakid"},"content":"                            \"view/LightTheme.css\"))","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"chuakid"},"content":"                    .toExternalForm());","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"chuakid"},"content":"            primaryStage.getScene().getStylesheets().remove(","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"chuakid"},"content":"                    Objects.requireNonNull(getClass().getClassLoader().getResource(","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"chuakid"},"content":"                            \"view/DarkTheme.css\")).toExternalForm());","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"chuakid"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"chuakid"},"content":"            primaryStage.getScene().getStylesheets().add(Objects.requireNonNull(getClass().getClassLoader().getResource(","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"chuakid"},"content":"                            \"view/DarkTheme.css\"))","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"chuakid"},"content":"                    .toExternalForm());","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"chuakid"},"content":"            primaryStage.getScene().getStylesheets().remove(","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"chuakid"},"content":"                    Objects.requireNonNull(getClass().getClassLoader().getResource(","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"chuakid"},"content":"                            \"view/LightTheme.css\")).toExternalForm());","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"chuakid"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"chuakid"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY(), !logic.getGuiSettings().isDarkTheme());","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"chuakid"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"chuakid"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY(), logic.getGuiSettings().isDarkTheme());","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"Beebeeoii"},"content":"     * @see seedu.quickcontacts.logic.Logic#execute(String)","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":241,"author":{"gitId":"Beebeeoii"},"content":"    private AutocompleteResult getAutocompleteSuggestion(String userInput) {","lastModifiedDate":"2023-03-18"},{"lineNumber":242,"author":{"gitId":"Beebeeoii"},"content":"        return logic.autocomplete(userInput);","lastModifiedDate":"2023-03-18"},{"lineNumber":243,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Beebeeoii":15,"KS2499":1,"chuakid":44,"-":184}},{"path":"src/main/java/seedu/quickcontacts/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":" * An UI component that displays information of a {@code Meeting}.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    public final Meeting meeting;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    private Label id;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    private Label title;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    private Label dateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    private Label attendees;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    private Label meetingLocation;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    private Label description;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"     * Creates a {@code MeetingCard} with the given {@code Meeting} and index to display.","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"        title.setText(meeting.getTitle().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"        dateTime.setText(meeting.getDateTime().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        if (meeting.getAttendees().size() \u003e 0) {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"            attendees.setText(","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"                \"Attendees: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                    + meeting.getAttendees()","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                    .stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                    .map(person -\u003e person.getName().toString())","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                    .reduce((s, s2) -\u003e s + \",\" + s2)","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"                    .get());","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"        if (meeting.getLocation() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"            meetingLocation.setText(\"Location: \" + meeting.getLocation().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        if (meeting.getDescription() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"            description.setText(\"Description: \" + meeting.getDescription().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        formatDateTimePast();","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"     * Updates the font colour of the dateTime depending on whether the meeting is over.","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"     * If the meeting has passed based on the current system date/time, the font will be RED.","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"     * Else it will be WHITE by default.","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    public void formatDateTimePast() {","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        if (meeting.hasPassed()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"            dateTime.getStyleClass().add(ERROR_STYLE_CLASS);","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"            dateTime.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"chuakid"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"chuakid"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"chuakid"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"chuakid"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"chuakid"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"chuakid"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"        if (!(other instanceof MeetingCard)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"chuakid"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"        MeetingCard card \u003d (MeetingCard) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"        return meeting.equals(card.meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Beebeeoii":17,"KS2499":6,"chuakid":69}},{"path":"src/main/java/seedu/quickcontacts/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":" * Panel containing the list of meetings.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"     * Creates a {@code MeetingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    public MeetingListPanel(ObservableList\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meeting} using a {@code MeetingCard}.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"    class MeetingListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"                setText(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Beebeeoii":3,"chuakid":46}},{"path":"src/main/java/seedu/quickcontacts/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"        if (person.getPhone() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"        if (person.getAddress() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"        if (person.getEmail() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Beebeeoii":2,"KS2499":6,"-":75}},{"path":"src/main/java/seedu/quickcontacts/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Beebeeoii":3,"-":46}},{"path":"src/main/java/seedu/quickcontacts/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Beebeeoii":1,"-":27}},{"path":"src/main/java/seedu/quickcontacts/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":1,"-":27}},{"path":"src/main/java/seedu/quickcontacts/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Beebeeoii":1,"-":12}},{"path":"src/main/java/seedu/quickcontacts/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.MainApp;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.StringUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.Logic;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/app_icon.png\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Beebeeoii":6,"-":82}},{"path":"src/main/java/seedu/quickcontacts/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.MainApp;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Beebeeoii":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"* {","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"    -bg: #242936;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"    -cell-bg: #1F2430;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"    -gutter: #8A919966;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"    background-color: -bg; /* Used in the default.html file */","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"chuakid"},"content":".list-cell:filled {","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -cell-bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"chuakid"},"content":"    /* To add margin */","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"chuakid"},"content":"    -fx-border-insets: 5px;","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"chuakid"},"content":"    -fx-background-insets: 5px;","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":141,"author":{"gitId":"chuakid"},"content":"     -fx-background-color: -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"chuakid"},"content":"     -fx-background-color: -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"chuakid"},"content":"     -fx-border-color: -gutter;","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"chuakid"},"content":".panel-title {","lastModifiedDate":"2023-03-27"},{"lineNumber":290,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2023-03-27"},{"lineNumber":291,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":292,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-27"},{"lineNumber":293,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":294,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: transparent -bg transparent -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"chuakid"},"content":"    -fx-border-color: -bg -bg #FFCC66 -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: transparent, -bg, transparent, -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"chuakid":30,"-":332}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"    -fx-background: -bg;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chuakid":1,"-":19}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"* {","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"    -bg: #FCFCFC;","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"    -gutter: #8A919966;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"    -text-color: #8A9199;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"    -cell-bg: #F3F4F5;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":".background {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"    background-color: -bg; /* Used in the default.html file */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":".label {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: -text-color;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":".label-bright {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":".label-header {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":".text-field {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":".tab-pane {","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":".table-view {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"    -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"chuakid"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"chuakid"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"chuakid"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"chuakid"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"chuakid"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"chuakid"},"content":".split-pane {","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"chuakid"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"chuakid"},"content":".list-view {","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"chuakid"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"chuakid"},"content":".list-cell {","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"chuakid"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"chuakid"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"chuakid"},"content":".list-cell:filled {","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -cell-bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"chuakid"},"content":"    /* To add margin */","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"chuakid"},"content":"    -fx-border-insets: 5px;","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"chuakid"},"content":"    -fx-background-insets: 5px;","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"chuakid"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: #56728F1F;","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"chuakid"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"chuakid"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"chuakid"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"chuakid"},"content":".list-cell .label {","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"chuakid"},"content":".cell_big_label {","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"chuakid"},"content":".cell_small_label {","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"chuakid"},"content":".stack-pane {","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"chuakid"},"content":".pane-with-border {","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"chuakid"},"content":"    -fx-border-color: -gutter;","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"chuakid"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"chuakid"},"content":".status-bar {","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"chuakid"},"content":".result-display {","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"chuakid"},"content":".result-display .label {","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"chuakid"},"content":".status-bar .label {","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"chuakid"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"chuakid"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"chuakid"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"chuakid"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"chuakid"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"chuakid"},"content":".grid-pane {","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"chuakid"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"chuakid"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"chuakid"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"chuakid"},"content":".menu-bar {","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"chuakid"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"chuakid"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"chuakid"},"content":".menu .left-container {","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"chuakid"},"content":"/*","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"chuakid"},"content":" * Metro style Push Button","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"chuakid"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"chuakid"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"chuakid"},"content":".button {","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"chuakid"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"chuakid"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"chuakid"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"chuakid"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"chuakid"},"content":".button:hover {","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"chuakid"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"chuakid"},"content":".button:focused {","lastModifiedDate":"2023-03-28"},{"lineNumber":232,"author":{"gitId":"chuakid"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"chuakid"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"chuakid"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-03-28"},{"lineNumber":235,"author":{"gitId":"chuakid"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"chuakid"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":237,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"chuakid"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"chuakid"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"chuakid"},"content":".button:default {","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"chuakid"},"content":".button:default:hover {","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"chuakid"},"content":".dialog-pane {","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"chuakid"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"chuakid"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"chuakid"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"chuakid"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"chuakid"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"chuakid"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"chuakid"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"chuakid"},"content":".panel-title {","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"chuakid"},"content":".scroll-bar {","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":288,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"chuakid"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-28"},{"lineNumber":290,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"chuakid"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"chuakid"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":298,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"chuakid"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"chuakid"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"chuakid"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"chuakid"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"chuakid"},"content":"#cardPane {","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"chuakid"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":314,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":316,"author":{"gitId":"chuakid"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-28"},{"lineNumber":317,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-28"},{"lineNumber":318,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-28"},{"lineNumber":319,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":321,"author":{"gitId":"chuakid"},"content":"#commandTextField {","lastModifiedDate":"2023-03-28"},{"lineNumber":322,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: transparent -bg transparent -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":323,"author":{"gitId":"chuakid"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":324,"author":{"gitId":"chuakid"},"content":"    -fx-border-color: -bg -bg #FFAA33 -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":325,"author":{"gitId":"chuakid"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":326,"author":{"gitId":"chuakid"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":327,"author":{"gitId":"chuakid"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-28"},{"lineNumber":328,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-28"},{"lineNumber":329,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":330,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":331,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":332,"author":{"gitId":"chuakid"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-03-28"},{"lineNumber":333,"author":{"gitId":"chuakid"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":334,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":335,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"chuakid"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-03-28"},{"lineNumber":337,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: transparent, -bg, transparent, -bg;","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"chuakid"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":339,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":340,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":341,"author":{"gitId":"chuakid"},"content":"#tags {","lastModifiedDate":"2023-03-28"},{"lineNumber":342,"author":{"gitId":"chuakid"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-28"},{"lineNumber":343,"author":{"gitId":"chuakid"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-28"},{"lineNumber":344,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":345,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":346,"author":{"gitId":"chuakid"},"content":"#tags .label {","lastModifiedDate":"2023-03-28"},{"lineNumber":347,"author":{"gitId":"chuakid"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-28"},{"lineNumber":348,"author":{"gitId":"chuakid"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-28"},{"lineNumber":349,"author":{"gitId":"chuakid"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-28"},{"lineNumber":350,"author":{"gitId":"chuakid"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-28"},{"lineNumber":351,"author":{"gitId":"chuakid"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-28"},{"lineNumber":352,"author":{"gitId":"chuakid"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-28"},{"lineNumber":353,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"chuakid":353}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"         title\u003d\"QuickContacts\" minWidth\u003d\"1000\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        \u003cImage url\u003d\"@/images/app_icon.png\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Theme\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"                        \u003cMenuItem fx:id\u003d\"themeMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleTheme\" text\u003d\"Toggle\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"                \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"                           minHeight\u003d\"100\" maxHeight\u003d\"250\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"                \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"                    \u003cVBox fx:id\u003d\"meetingListPanel\" HBox.hgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"                        \u003cLabel styleClass\u003d\"panel-title\"\u003eMeetings\u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"                        \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"                    \u003cVBox fx:id\u003d\"personList\" HBox.hgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"                          minWidth\u003d\"340\"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"chuakid"},"content":"                          prefWidth\u003d\"340\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"                        \u003cLabel styleClass\u003d\"panel-title\"\u003eContacts\u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"chuakid"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"chuakid"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Beebeeoii":1,"chuakid":33,"-":39}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"\u003cHBox id\u003d\"meetingCardPane\" fx:id\u003d\"meetingCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"                \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"            \u003cLabel fx:id\u003d\"attendees\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"            \u003cLabel fx:id\u003d\"meetingLocation\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chuakid":35}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuakid"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"    \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chuakid":7}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KS2499":3,"-":33}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" wrapText\u003d\"true\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"chuakid":1,"-":8}},{"path":"src/test/java/seedu/quickcontacts/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Beebeeoii":1,"-":57}},{"path":"src/test/java/seedu/quickcontacts/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"        Assertions.assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Beebeeoii":3,"-":24}},{"path":"src/test/java/seedu/quickcontacts/commons/core/CronTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTimeoutPreemptively;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"public class CronTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void singleton_test() {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        Assertions.assertEquals(Cron.getInstance().hashCode(), Cron.getInstance().hashCode());","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public void size() {","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        int size \u003d 5;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        int delay \u003d 5;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        TimerTask t \u003d new TimerTask() {","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"            @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"            public void run() {","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        };","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        assertTimeoutPreemptively(Duration.ofSeconds(delay - 1), () -\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            Cron cron \u003d Cron.getInstance();","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"            for (int i \u003d 0; i \u003c size; ++i) {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"                cron.addTask(t, 1, delay);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"            assertEquals(cron.size(), size);","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    public void addTask_print() {","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        String p \u003d \"Task 1\";","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        int frequency \u003d 5;","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        TimerTask t \u003d new TimerTask() {","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"            @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"            public void run() {","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"                System.out.println(p);","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        };","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        // Caution: This is a time-sensitive test.","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        assertTimeoutPreemptively(Duration.ofSeconds(frequency - 1), () -\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"            Cron cron \u003d Cron.getInstance();","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"            cron.addTask(t, frequency);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"            TimeUnit.SECONDS.sleep(frequency - 2);","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"            assertEquals(p, outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    public void isRunning() {","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        Cron cron \u003d Cron.getInstance();","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(cron.isRunning());","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        cron.stop();","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(cron.isRunning());","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    public void stop() {","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        Cron cron \u003d Cron.getInstance();","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        cron.stop();","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(cron.isRunning());","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        stop();","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Beebeeoii":91}},{"path":"src/test/java/seedu/quickcontacts/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":2,"-":133}},{"path":"src/test/java/seedu/quickcontacts/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.core.index;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Beebeeoii":2,"-":58}},{"path":"src/test/java/seedu/quickcontacts/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"        assertNotNull(AppUtil.getImage(\"/images/app_icon.png\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Beebeeoii":3,"-":33}},{"path":"src/test/java/seedu/quickcontacts/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        Assertions.assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Beebeeoii":5,"-":104}},{"path":"src/test/java/seedu/quickcontacts/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Config;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Beebeeoii":4,"-":112}},{"path":"src/test/java/seedu/quickcontacts/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"        Assertions.assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":4,"-":19}},{"path":"src/test/java/seedu/quickcontacts/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":3,"-":42}},{"path":"src/test/java/seedu/quickcontacts/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        Assertions.assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Beebeeoii":4,"-":140}},{"path":"src/test/java/seedu/quickcontacts/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ListCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.JsonQuickBookStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.StorageManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        JsonQuickBookStorage quickBookStorage \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"                new JsonQuickBookStorage(temporaryFolder.resolve(\"quickcontacts.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        StorageManager storage \u003d new StorageManager(quickBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        // Setup LogicManager with JsonQuickBookIoExceptionThrowingStub","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        JsonQuickBookStorage quickBookStorage \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"                new JsonQuickBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionQuickBook.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        StorageManager storage \u003d new StorageManager(quickBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(model.getQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"    private static class JsonQuickBookIoExceptionThrowingStub extends JsonQuickBookStorage {","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"        private JsonQuickBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"        public void saveQuickBook(ReadOnlyQuickBook quickBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Beebeeoii":34,"-":128}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalQuickBooks.getTypicalQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        model \u003d new ModelManager(getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(model.getQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        Person personInList \u003d model.getQuickBook().getPersonList().get(0);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Beebeeoii":12,"-":33}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        public Path getQuickBookFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"        public void setQuickBookFilePath(Path quickBookFilePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"        public ReadOnlyQuickBook getQuickBook() {","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"        public void setQuickBook(ReadOnlyQuickBook newData) {","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"chuakid"},"content":"        public List\u003cPerson\u003e getPersonsByIndexes(List\u003cIndex\u003e indexList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"chuakid"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"chuakid"},"content":"        public List\u003cMeeting\u003e getMeetingsByIndexesAndStartEnd(List\u003cIndex\u003e indexList, DateTime start, DateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"chuakid"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":173,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void sortFilteredMeetingList(Comparator comparator) {","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"KS2499"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"KS2499"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"KS2499"},"content":"        public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"chuakid"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingsList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"chuakid"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"KS2499"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"thedesalizes"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":209,"author":{"gitId":"thedesalizes"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":210,"author":{"gitId":"thedesalizes"},"content":"        public void removeMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"thedesalizes"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":212,"author":{"gitId":"thedesalizes"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"Beebeeoii"},"content":"        public ReadOnlyQuickBook getQuickBook() {","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"Beebeeoii"},"content":"            return new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"thedesalizes":5,"Beebeeoii":20,"KS2499":22,"jeremykhoo-NUS":16,"chuakid":18,"-":176}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/AddMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalMeetings.MEETING_B;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jeremykhoo-NUS"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"public class AddMeetingCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"    public void constructor_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMeetingCommand(null, null, null, null, null));","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    public void execute_meetingAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        ModelStubWithPersons modelStub \u003d new ModelStubWithPersons(BENSON, CARL);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        Meeting validMeeting \u003d new MeetingBuilder(MEETING_B).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"        CommandResult commandResult \u003d new AddMeetingCommand(MEETING_B.getTitle(), MEETING_B.getDateTime(),","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                new HashSet\u003c\u003e(Arrays.asList(BENSON.getName(), CARL.getName())), MEETING_B.getLocation(),","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                MEETING_B.getDescription()).execute(modelStub);","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"        assertEquals(String.format(AddMeetingCommand.MESSAGE_SUCCESS, validMeeting), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"    public void execute_duplicateMeeting_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(MEETING_A.getTitle(), MEETING_A.getDateTime(),","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"                new HashSet\u003c\u003e(Collections.singletonList(ALICE.getName())), MEETING_A.getLocation(),","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"                MEETING_A.getDescription());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"        ModelStub modelStub \u003d new ModelStubWithMeeting(ALICE, CARL, MEETING_A);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"        assertThrows(CommandException.class, AddMeetingCommand.MESSAGE_DUPLICATE_MEETING, () -\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"            addMeetingCommand.execute(modelStub));","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e meetingPredicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void sortFilteredMeetingList(Comparator comparator) {","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        public Path getQuickBookFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        public void setQuickBookFilePath(Path quickBookFilePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"        public ReadOnlyQuickBook getQuickBook() {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"        public void setQuickBook(ReadOnlyQuickBook newData) {","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"KS2499"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"KS2499"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"chuakid"},"content":"        public List\u003cPerson\u003e getPersonsByIndexes(List\u003cIndex\u003e indexList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"chuakid"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"chuakid"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"chuakid"},"content":"        public List\u003cMeeting\u003e getMeetingsByIndexesAndStartEnd(List\u003cIndex\u003e indexList, DateTime start, DateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"chuakid"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"KS2499"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"KS2499"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"KS2499"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"KS2499"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"KS2499"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"KS2499"},"content":"        public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"KS2499"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingsList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"jeremykhoo-NUS"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"jeremykhoo-NUS"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"jeremykhoo-NUS"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"jeremykhoo-NUS"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"KS2499"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"KS2499"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"jeremykhoo-NUS"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"thedesalizes"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"thedesalizes"},"content":"        public void removeMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"thedesalizes"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"thedesalizes"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"KS2499"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"KS2499"},"content":"    private static class ModelStubWithPersons extends AddMeetingCommandTest.ModelStub {","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"KS2499"},"content":"        private final ArrayList\u003cMeeting\u003e meetingsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"KS2499"},"content":"        private final Person person1;","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"KS2499"},"content":"        private final Person person2;","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"KS2499"},"content":"        ModelStubWithPersons(Person person1, Person person2) {","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"KS2499"},"content":"            this.person1 \u003d person1;","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"KS2499"},"content":"            this.person2 \u003d person2;","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"KS2499"},"content":"        public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"KS2499"},"content":"            return person1.getName().equals(personName) ? person1 : person2;","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"KS2499"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"KS2499"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"KS2499"},"content":"            meetingsAdded.add(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"KS2499"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"KS2499"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"KS2499"},"content":"            return meetingsAdded.stream().anyMatch(meeting::isSameMeeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"KS2499"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":229,"author":{"gitId":"KS2499"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"KS2499"},"content":"            return this.person1.isSamePerson(person) || this.person2.isSamePerson(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":234,"author":{"gitId":"KS2499"},"content":"    private static class ModelStubWithMeeting extends AddMeetingCommandTest.ModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"KS2499"},"content":"        private final ArrayList\u003cMeeting\u003e meetingsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"KS2499"},"content":"        private final Person person1;","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"KS2499"},"content":"        private final Person person2;","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"KS2499"},"content":"        ModelStubWithMeeting(Person person1, Person person2, Meeting meeting) {","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"KS2499"},"content":"            this.person1 \u003d person1;","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"KS2499"},"content":"            this.person2 \u003d person2;","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"KS2499"},"content":"            meetingsAdded.add(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"KS2499"},"content":"        public Person getPersonByName(Name personName) {","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"KS2499"},"content":"            return person1.getName().equals(personName) ? person1 : person2;","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"KS2499"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"KS2499"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"KS2499"},"content":"            meetingsAdded.add(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"KS2499"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-03-13"},{"lineNumber":258,"author":{"gitId":"KS2499"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"KS2499"},"content":"            return meetingsAdded.stream().anyMatch(meeting::isSameMeeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":262,"author":{"gitId":"KS2499"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":263,"author":{"gitId":"KS2499"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":264,"author":{"gitId":"KS2499"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":265,"author":{"gitId":"KS2499"},"content":"            return this.person1.isSamePerson(person) || this.person2.isSamePerson(person);","lastModifiedDate":"2023-03-13"},{"lineNumber":266,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":267,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":268,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"thedesalizes":4,"Beebeeoii":22,"KS2499":209,"jeremykhoo-NUS":17,"chuakid":16}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/AutocompleteResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public class AutocompleteResultTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void getPrefix() {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        Prefix prefix \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        Assertions.assertEquals(new AutocompleteResult(prefix, false).getPrefix(), Optional.of(prefix));","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new AutocompleteResult(null, false).getPrefix(), Optional.empty());","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public void isReplaceCurrent() {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(new AutocompleteResult(null, true).isReplaceCurrent());","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(new AutocompleteResult(new Prefix(\"m/\"), false).isReplaceCurrent());","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Beebeeoii":27}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalQuickBooks.getTypicalQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_emptyQuickBook_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_nonEmptyQuickBook_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        expectedModel.setQuickBook(new QuickBook());","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Beebeeoii":12,"-":20}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Beebeeoii":1,"-":53}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"    public static final String NAME_DESC_ALICE \u003d \" \" + PREFIX_NAME + VALID_NAME_ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_TITLE \u003d \"Welfare call\";","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_DATETIME \u003d \"01/01/2021 11:11\";","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_LOCATION \u003d \"In school\";","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_DESCRIPTION \u003d \"Finish up school project (computer science)\";","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_TITLE_2 \u003d \"Project discussion\";","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_DATETIME_2 \u003d \"02/01/2023 12:00\";","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_LOCATION_2 \u003d \"Central Library\";","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    public static final String VALID_MEETING_DESCRIPTION_2 \u003d \"URGENT\";","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_TITLE_DESC \u003d \" \" + PREFIX_MEETING_TITLE + VALID_MEETING_TITLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_PERSON_ALICE_DESC \u003d \" \" + PREFIX_PERSON + \"Alice Pauline\";","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_PERSON_BENSON_DESC \u003d \" \" + PREFIX_PERSON + \"Benson Meier\";","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_DATETIME_DESC \u003d \" \" + PREFIX_DATETIME + VALID_MEETING_DATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION + VALID_MEETING_LOCATION;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"    public static final String MEETING_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION + VALID_MEETING_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    public static final EditMeetingsCommand.EditMeetingDescriptor DESC_MEETING_A;","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"    public static final EditMeetingsCommand.EditMeetingDescriptor DESC_MEETING_B;","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        DESC_MEETING_A \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_MEETING_TITLE)","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"            .withDateTime(VALID_MEETING_DATETIME).withAttendees().withLocation(VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"            .withDescription(VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        DESC_MEETING_B \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_MEETING_TITLE_2)","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"                .withDateTime(VALID_MEETING_DATETIME_2).withAttendees().withLocation(VALID_MEETING_LOCATION_2)","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(VALID_MEETING_DESCRIPTION_2).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"     * - the quick book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook expectedQuickBook \u003d new QuickBook(actualModel.getQuickBook());","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedQuickBook, actualModel.getQuickBook());","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"     * {@code model}\u0027s quick book.","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"KS2499"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Beebeeoii":41,"KS2499":12,"-":108}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalQuickBooks.getTypicalQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private Model model \u003d new ModelManager(getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(model.getQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        // ensures that outOfBoundIndex is still in bounds of quick book list","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getQuickBook().getPersonList().size());","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Beebeeoii":18,"-":91}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalQuickBooks.getTypicalQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    private Model model \u003d new ModelManager(getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(new QuickBook(model.getQuickBook()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(new QuickBook(model.getQuickBook()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(new QuickBook(model.getQuickBook()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(new QuickBook(model.getQuickBook()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"        // edit person in filtered list into a duplicate in quick book","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"        Person personInList \u003d model.getQuickBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"     * but smaller than size of quick book","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"        // ensures that outOfBoundIndex is still in bounds of quick book list","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getQuickBook().getPersonList().size());","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Beebeeoii":32,"-":141}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/EditMeetingsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditMeetingsCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalQuickBooks;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditMeetingsCommand.","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"public class EditMeetingsCommandTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private final Model model \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(editedMeeting).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand editMeetingsCommand \u003d new EditMeetingsCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"                TypicalIndexes.INDEX_FIRST_MEETING, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(EditMeetingsCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(new QuickBook(model.getQuickBook()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        expectedModel.setMeeting(model.getMeetingsList().get(0), editedMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(editMeetingsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        Index indexLastMeeting \u003d Index.fromOneBased(model.getMeetingsList().size());","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        Meeting lastMeeting \u003d model.getMeetingsList().get(indexLastMeeting.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        MeetingBuilder meetingInList \u003d new MeetingBuilder(lastMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeeting \u003d meetingInList.withTitle(CommandTestUtil.VALID_MEETING_TITLE)","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(CommandTestUtil.VALID_MEETING_DESCRIPTION)","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"                .withLocation(CommandTestUtil.VALID_MEETING_LOCATION).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"                .withTitle(CommandTestUtil.VALID_MEETING_TITLE)","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(CommandTestUtil.VALID_MEETING_DESCRIPTION)","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"                .withLocation(CommandTestUtil.VALID_MEETING_LOCATION).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand editedCommand \u003d new EditMeetingsCommand(indexLastMeeting, descriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(EditMeetingsCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(new QuickBook(model.getQuickBook()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        expectedModel.setMeeting(lastMeeting, editedMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(editedCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand editMeetingCommand \u003d new EditMeetingsCommand(TypicalIndexes.INDEX_FIRST_MEETING,","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"                new EditMeetingDescriptor());","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeeting \u003d model.getMeetingsList().get(TypicalIndexes.INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(EditMeetingsCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(new QuickBook(model.getQuickBook()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_duplicateMeetingUnfilteredList_failure() {","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        Meeting firstMeeting \u003d model.getMeetingsList().get(TypicalIndexes.INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(firstMeeting).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand editMeetingsCommand \u003d new EditMeetingsCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"                TypicalIndexes.INDEX_SECOND_MEETING, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandFailure(editMeetingsCommand, model, EditMeetingsCommand.MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_invalidMeetingIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getMeetingsList().size() + 1);","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"                .withTitle(CommandTestUtil.VALID_MEETING_TITLE).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand editMeetingsCommand \u003d new EditMeetingsCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandFailure(editMeetingsCommand, model,","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"                Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"    public void equals() {","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"        final EditMeetingsCommand standardCommand \u003d new EditMeetingsCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"                TypicalIndexes.INDEX_FIRST_MEETING, CommandTestUtil.DESC_MEETING_A);","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor copyDescriptor \u003d new EditMeetingDescriptor(CommandTestUtil.DESC_MEETING_A);","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand commandWithSameValues \u003d new EditMeetingsCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"                TypicalIndexes.INDEX_FIRST_MEETING, copyDescriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"        Assertions.assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(standardCommand, new EditMeetingsCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"                TypicalIndexes.INDEX_SECOND_MEETING, CommandTestUtil.DESC_MEETING_A));","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(standardCommand, new EditMeetingsCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"                TypicalIndexes.INDEX_FIRST_MEETING, CommandTestUtil.DESC_MEETING_B));","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Beebeeoii":131}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Beebeeoii":10,"-":48}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Beebeeoii":5,"-":15}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/ExportMeetingsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.JsonUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.JsonAdaptedMeeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalQuickBooks;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"public class ExportMeetingsCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    public void index_inRange_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBookMeetingsOnly(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            TypicalIndexes.INDEX_FIRST_MEETING, TypicalIndexes.INDEX_SECOND_MEETING});","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"        ExportMeetingsCommand exportMeetingsCommand \u003d new ExportMeetingsCommand(indexList, null, null);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        String expectedMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"            expectedMessage \u003d JsonUtil.toJsonString(new JsonAdaptedMeeting[]{","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(meetings.get(TypicalIndexes.INDEX_FIRST_MEETING.getZeroBased())),","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(meetings.get(TypicalIndexes.INDEX_SECOND_MEETING.getZeroBased()))","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"            });","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(exportMeetingsCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    public void index_outOfRange_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBookMeetingsOnly(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{Index.fromZeroBased(meetings.size())});","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"chuakid"},"content":"        ExportMeetingsCommand exportMeetingsCommand \u003d new ExportMeetingsCommand(indexList, null, null);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"        String expectedMessage \u003d ExportMeetingsCommand.INDEX_NOT_FOUND;","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandFailure(exportMeetingsCommand, model, expectedMessage);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"chuakid"},"content":"    public void date_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(new QuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"01/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"02/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"03/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"04/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"chuakid"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{});","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"chuakid"},"content":"        ExportMeetingsCommand exportMeetingsCommand \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"chuakid"},"content":"                new ExportMeetingsCommand(indexList, new DateTime(\"01/01/1970\"), new DateTime(\"03/01/1970\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"chuakid"},"content":"        String expectedMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"chuakid"},"content":"            expectedMessage \u003d JsonUtil.toJsonString(new JsonAdaptedMeeting[]{","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(0)),","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(1)),","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(2))","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"chuakid"},"content":"            });","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(exportMeetingsCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"chuakid"},"content":"    public void dateWithIndex_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(new QuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"01/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"02/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"03/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"chuakid"},"content":"        model.addMeeting(new MeetingBuilder().withDateTime(\"04/01/1970\").build());","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"chuakid"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"chuakid"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{Index.fromZeroBased(0)});","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"chuakid"},"content":"        ExportMeetingsCommand exportMeetingsCommand \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"chuakid"},"content":"                new ExportMeetingsCommand(indexList, new DateTime(\"02/01/1970\"), new DateTime(\"04/01/1970\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"chuakid"},"content":"        String expectedMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"chuakid"},"content":"            expectedMessage \u003d JsonUtil.toJsonString(new JsonAdaptedMeeting[]{","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(0)),","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(1)),","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(2)),","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"chuakid"},"content":"                new JsonAdaptedMeeting(meetings.get(3))","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"chuakid"},"content":"            });","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"chuakid"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(exportMeetingsCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":25,"chuakid":86}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/ExportPersonsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.JsonUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalQuickBooks;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"public class ExportPersonsCommandTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private final Model model \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public void index_inRange_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"            TypicalIndexes.INDEX_FIRST_PERSON, TypicalIndexes.INDEX_SECOND_PERSON});","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        ExportPersonsCommand exportPersonsCommand \u003d new ExportPersonsCommand(indexList);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        ObservableList\u003cPerson\u003e persons \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"            expectedMessage \u003d JsonUtil.toJsonString(new JsonAdaptedPerson[]{","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedPerson(persons.get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased())),","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedPerson(persons.get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased()))","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            });","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(exportPersonsCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    public void index_outOfRange_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        ObservableList\u003cPerson\u003e persons \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cIndex\u003e indexList \u003d List.of(new Index[]{Index.fromZeroBased(persons.size())});","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        ExportPersonsCommand exportPersonsCommand \u003d new ExportPersonsCommand(indexList);","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d ExportPersonsCommand.INDEX_NOT_FOUND;","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandFailure(exportPersonsCommand, model, expectedMessage);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Beebeeoii":54}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalQuickBooks.getTypicalQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private Model model \u003d new ModelManager(getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Beebeeoii":13,"-":70}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/FindMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_MEETINGS_ALL_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.MeetingContainsNamesPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalQuickBooks;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"public class FindMeetingCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    private final Model model \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    private final Model expectedModel \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"            new MeetingContainsNamesPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"            new MeetingContainsNamesPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand findFirstCommand \u003d new FindMeetingCommand(firstPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand findSecondCommand \u003d new FindMeetingCommand(secondPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand findFirstCommandCopy \u003d new FindMeetingCommand(firstPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(1, findFirstCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(null, findFirstCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"    public void execute_zeroKeywords_allMeetingsListed() {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate predicate \u003d preparePredicate(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, MESSAGE_MEETINGS_ALL_LISTED_OVERVIEW, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        assertEquals(3, model.getFilteredMeetingList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"    public void execute_multipleKeywords_multipleMeetingsFound() {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"        String inputString \u003d \"Alice Carl\";","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, \"Alice, Carl\");","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate predicate \u003d preparePredicate(inputString);","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"        assertEquals(3, model.getFilteredMeetingList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"    private MeetingContainsNamesPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"            return new MeetingContainsNamesPredicate();","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"        return new MeetingContainsNamesPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":12,"KS2499":70}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class HelpCommandTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_help_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Beebeeoii":19}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/ImportMeetingsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalMeetings;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalQuickBooks;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"public class ImportMeetingsCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    public void success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(new QuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"        ImportMeetingsCommand command \u003d new ImportMeetingsCommand(TypicalMeetings.getTypicalMeetings(), false);","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBookMeetingsOnly(),","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, ImportMeetingsCommand.SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    public void duplicateForced_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBookMeetingsOnly(),","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"        List\u003cMeeting\u003e peopleToImport \u003d List.of(","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"                TypicalMeetings.getTypicalMeetings().get(0),","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"                TypicalMeetings.getTypicalMeetings().get(1));","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        model.removeMeeting(TypicalMeetings.getTypicalMeetings().get(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        ImportMeetingsCommand command \u003d new ImportMeetingsCommand(peopleToImport, true);","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBookMeetingsOnly(),","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"        expectedModel.removeMeeting(TypicalMeetings.getTypicalMeetings().get(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"        expectedModel.addMeeting(TypicalMeetings.getTypicalMeetings().get(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, ImportMeetingsCommand.SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"    public void duplicate_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBookMeetingsOnly(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"        ImportMeetingsCommand command \u003d new ImportMeetingsCommand(List.of(TypicalMeetings.getTypicalMeetings().get(0)),","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"                false);","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandFailure(command, model, ImportMeetingsCommand.DUPLICATE_MEETING);","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":16,"chuakid":34}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/ImportPersonsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalPersons;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalQuickBooks;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"public class ImportPersonsCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    public void success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(new QuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"        ImportPersonsCommand command \u003d new ImportPersonsCommand(TypicalPersons.getTypicalPersons(), false);","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBookPersonsOnly(),","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, ImportPersonsCommand.SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    public void duplicateForced_success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBookPersonsOnly(),","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"        List\u003cPerson\u003e peopleToImport \u003d List.of(","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"                TypicalPersons.getTypicalPersons().get(0),","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"                TypicalPersons.getTypicalPersons().get(1));","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        model.deletePerson(TypicalPersons.getTypicalPersons().get(1));","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"        ImportPersonsCommand command \u003d new ImportPersonsCommand(peopleToImport, true);","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        Model expectedModel \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBookPersonsOnly(),","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"        expectedModel.deletePerson(TypicalPersons.getTypicalPersons().get(1));","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"        expectedModel.addPerson(TypicalPersons.getTypicalPersons().get(1));","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, ImportPersonsCommand.SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"    public void duplicate_failure() {","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        Model model \u003d new ModelManager(TypicalQuickBooks.getTypicalQuickBookPersonsOnly(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"        ImportPersonsCommand command \u003d new ImportPersonsCommand(List.of(TypicalPersons.getTypicalPersons().get(0)),","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"                false);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandFailure(command, model, ImportPersonsCommand.DUPLICATE_PERSON);","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Beebeeoii":16,"chuakid":32}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalQuickBooks.getTypicalQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    private Model model;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        model \u003d new ModelManager(getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        expectedModel \u003d new ModelManager(model.getQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Beebeeoii":37}},{"path":"src/test/java/seedu/quickcontacts/logic/commands/ViewMeetingsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalQuickBooks.getTypicalQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ViewMeetingsCommand.","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"public class ViewMeetingsCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"    private Model model;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        model \u003d new ModelManager(getTypicalQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        expectedModel \u003d new ModelManager(model.getQuickBook(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"        String expected \u003d \"Dinner with Alice\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"                + \"Description: Weekly catchup\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"                + \"At: 01/02/2023 19:00\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"                + \"Attendees: [Alice Pauline; Phone: 94351253; Email: alice@example.com; Address: 123, Jurong West Ave \"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"                + \"6, #08-111; Tags: [friends]]\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"                + \"Location: NUS\\n\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"                + \"\"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"                + \"Study session with Benson and \"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                + \"Carl\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"                + \"Description: Study for finals\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"                + \"At: 02/03/2023 15:00\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"                + \"Attendees: [Carl Kurz; \"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"                + \"Phone: 95352563; Email: heinz@example.com; Address: wall street, Benson Meier; Phone: 98765432; \"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"                + \"Email: johnd@example.com; Address: 311, Clementi Ave 2, #02-25; Tags: [owesMoney][friends]]\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"                + \"Location: Central Library\\n\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"                + \"Zoom meeting for agenda planning\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"                + \"Description: Plan for \"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"                + \"project work\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"                + \"At: 13/03/2023 12:45\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"                + \"Attendees: [Alice Pauline; Phone: 94351253; Email: \"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                + \"alice@example.com; Address: 123, Jurong West Ave 6, #08-111; Tags: [friends]]\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"                + \"Location: \"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"                + \"https://us02web.zoom.us/j/99999999999?pwd\u003dABCdEfGHiJkYkRuYW5WTLmNopQrSt12\\n\\n\";","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        CommandTestUtil.assertCommandSuccess(new ViewMeetingsCommand(), model, expected, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Beebeeoii":8,"chuakid":45}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        // all optional fields missing","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"        expectedPerson \u003d new PersonBuilder(new Person(new Name(VALID_NAME_AMY), null, null,","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"            null, new HashSet\u003c\u003e())).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Beebeeoii":36,"KS2499":6,"-":87}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/AddMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.MEETING_DATETIME_DESC;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.MEETING_DESCRIPTION_DESC;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.MEETING_LOCATION_DESC;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.MEETING_PERSON_ALICE_DESC;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.MEETING_PERSON_BENSON_DESC;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.MEETING_TITLE_DESC;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.NAME_DESC_ALICE;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_MEETING_DATETIME;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_MEETING_DESCRIPTION;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_MEETING_LOCATION;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_MEETING_TITLE;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalPersons;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"public class AddMeetingCommandParserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private final AddMeetingCommandParser parser \u003d new AddMeetingCommandParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        Meeting expectedMeetingWithOnePerson \u003d new MeetingBuilder().withTitle(VALID_MEETING_TITLE)","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                .withDateTime(VALID_MEETING_DATETIME).withAttendees(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"                .withLocation(VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        Meeting expectedMeetingWithTwoPersons \u003d new MeetingBuilder().withTitle(VALID_MEETING_TITLE)","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"                .withDateTime(VALID_MEETING_DATETIME).withAttendees(TypicalPersons.ALICE, TypicalPersons.BENSON)","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                .withLocation(VALID_MEETING_LOCATION).withDescription(VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + MEETING_TITLE_DESC + MEETING_DATETIME_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"                        + MEETING_PERSON_ALICE_DESC + MEETING_LOCATION_DESC + MEETING_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"                new AddMeetingCommand(expectedMeetingWithOnePerson));","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        // no whitespace preamble","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertParseSuccess(parser, MEETING_TITLE_DESC + MEETING_DATETIME_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"                        + MEETING_PERSON_ALICE_DESC + MEETING_LOCATION_DESC + MEETING_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"                new AddMeetingCommand(expectedMeetingWithOnePerson));","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        // whitespace only preamble and multiple persons","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + MEETING_TITLE_DESC + MEETING_DATETIME_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"                        + MEETING_PERSON_ALICE_DESC + MEETING_PERSON_BENSON_DESC + MEETING_LOCATION_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"                        + MEETING_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"                new AddMeetingCommand(expectedMeetingWithTwoPersons));","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        // no whitespace only preamble and multiple persons","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        assertParseSuccess(parser, MEETING_TITLE_DESC + MEETING_DATETIME_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"                        + MEETING_PERSON_ALICE_DESC + MEETING_PERSON_BENSON_DESC + MEETING_LOCATION_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"                        + MEETING_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"                new AddMeetingCommand(expectedMeetingWithTwoPersons));","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    public void parse_compulsoryFieldsMissing_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        // missing title prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        assertParseFailure(parser, VALID_MEETING_TITLE + MEETING_DATETIME_DESC + MEETING_PERSON_ALICE_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"                + MEETING_LOCATION_DESC + MEETING_DESCRIPTION_DESC, expectedMessage);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        // missing datetime prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        assertParseFailure(parser, MEETING_TITLE_DESC + VALID_MEETING_DATETIME + MEETING_PERSON_ALICE_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"                + MEETING_LOCATION_DESC + MEETING_DESCRIPTION_DESC, expectedMessage);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        assertParseFailure(parser, VALID_MEETING_TITLE + VALID_MEETING_DATETIME + NAME_DESC_ALICE","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"                + VALID_MEETING_LOCATION + VALID_MEETING_DESCRIPTION, expectedMessage);","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Beebeeoii":78}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Beebeeoii":1,"-":149}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Beebeeoii":3,"-":36}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Beebeeoii":6,"-":26}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Beebeeoii":40,"-":171}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/ExportMeetingsParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ExportMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"public class ExportMeetingsParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    private static final String SAMPLE_START_DATE \u003d \"01/01/2022\";","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    private static final String SAMPLE_END_DATE \u003d \"01/02/2022\";","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    private final ExportMeetingsParser parser \u003d new ExportMeetingsParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    public void parse_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"        String input \u003d \" \" + PREFIX_MEETING_TITLE + INDEX_FIRST_MEETING.getOneBased();","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"        assertParseSuccess(parser, input, new ExportMeetingsCommand(List.of(INDEX_FIRST_MEETING), null, null));","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"    public void parse_noFields_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExportMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"    public void parse_withStart_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_START + SAMPLE_START_DATE, new ExportMeetingsCommand(new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"                new DateTime(SAMPLE_START_DATE), null));","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"    public void parse_withEnd_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_START + SAMPLE_END_DATE, new ExportMeetingsCommand(new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"                null, new DateTime(SAMPLE_END_DATE)));","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Beebeeoii":9,"chuakid":38}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/ExportPersonsParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ExportPersonsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"chuakid"},"content":"public class ExportPersonsParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"chuakid"},"content":"    private final ExportPersonsParser parser \u003d new ExportPersonsParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    public void parse_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"        String input \u003d \" \" + PREFIX_PERSON + INDEX_FIRST_PERSON.getOneBased();","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"        assertParseSuccess(parser, input, new ExportPersonsCommand(List.of(INDEX_FIRST_PERSON)));","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"    public void parse_noPersons_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExportPersonsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Beebeeoii":7,"chuakid":22}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.FindCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Beebeeoii":6,"-":28}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/FindMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.MeetingContainsNamesPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"public class FindMeetingCommandParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    private final FindMeetingCommandParser parser \u003d new FindMeetingCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    public void parse_noArg_returnsFindMeetingCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand expectedFindMeetingCommand \u003d new FindMeetingCommand(","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"            new MeetingContainsNamesPredicate());","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, \"\", expectedFindMeetingCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    public void parse_validArgs_returnsFindMeetingCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand expectedFindMeetingCommand \u003d new FindMeetingCommand(","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"                new MeetingContainsNamesPredicate(List.of(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindMeetingCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindMeetingCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":6,"KS2499":37}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/ImportMeetingsParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ImportMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalMeetings;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"public class ImportMeetingsParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ImportExportMeetingsTest\");","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    private static final Path VALID_MEETINGS_FILE \u003d TEST_DATA_FOLDER.resolve(\"validMeetings.json\");","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    private final ImportMeetingsParser parser \u003d new ImportMeetingsParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    public void parse_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(VALID_MEETINGS_FILE);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"            String line;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"                stringBuilder.append(line);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"        assertParseSuccess(parser, stringBuilder.toString(),","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                new ImportMeetingsCommand(TypicalMeetings.getTypicalMeetings(), false));","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"    public void parse_invalidJson_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        assertParseFailure(parser, \"abc\",","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportMeetingsParser.MALFORMED_JSON));","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    public void parse_noMeetings_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Beebeeoii":6,"chuakid":44}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/ImportPersonsParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"chuakid"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"chuakid"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"chuakid"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"chuakid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ImportPersonsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalPersons;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"chuakid"},"content":"public class ImportPersonsParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"chuakid"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ImportExportPersonsTest\");","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"chuakid"},"content":"    private static final Path VALID_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"validPersons.json\");","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"chuakid"},"content":"    private final ImportPersonsParser parser \u003d new ImportPersonsParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"chuakid"},"content":"    public void parse_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"chuakid"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"chuakid"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"chuakid"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(VALID_PERSONS_FILE);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"chuakid"},"content":"            String line;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"chuakid"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"chuakid"},"content":"                stringBuilder.append(line);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"chuakid"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"chuakid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"chuakid"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"chuakid"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"chuakid"},"content":"        assertParseSuccess(parser, stringBuilder.toString(),","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"chuakid"},"content":"                new ImportPersonsCommand(TypicalPersons.getTypicalPersons(), false));","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"chuakid"},"content":"    public void parse_invalidJson_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"chuakid"},"content":"        assertParseFailure(parser, \"abc\",","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"chuakid"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportPersonsParser.MALFORMED_JSON));","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"chuakid"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"chuakid"},"content":"    public void parse_noPersons_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"chuakid"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"chuakid"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportPersonsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"chuakid"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Beebeeoii":6,"chuakid":44}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Description;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Title;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"    private static final String INVALID_TITLE \u003d \"ME3T!NG 1\";","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"    private static final String INVALID_DATETIME \u003d \"2020-02-30 12:00\";","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"    private static final String INVALID_LOCATION \u003d \"!@#$%^\u0026*()\";","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"()#\u0026($#)\";","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"    private static final String VALID_NAME_2 \u003d \"Jack Walker\";","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"    private static final String VALID_TITLE \u003d \"Meeting 1\";","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"    private static final String VALID_DATETIME \u003d \"29/02/2023 12:00\";","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"    private static final String VALID_LOCATION \u003d \"Singapore NUS\";","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    private static final String VALID_DESCRIPTION \u003d \"Meeting with Jack\";","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"    public void parseNames_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNames(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"    public void parseNames_collectionWithInvalidNames_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNames(Arrays.asList(VALID_NAME, INVALID_NAME)));","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"    public void parseNames_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"        assertTrue(ParserUtil.parseNames(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"    public void parseNames_collectionWithValidNames_returnsNameSet() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"        Set\u003cName\u003e actualNameSet \u003d ParserUtil.parseNames(Arrays.asList(VALID_NAME, VALID_NAME_2));","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"        Set\u003cName\u003e expectedNameSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Name(VALID_NAME), new Name(VALID_NAME_2)));","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedNameSet, actualNameSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"KS2499"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"KS2499"},"content":"    public void parseTitle_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"KS2499"},"content":"    public void parseTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"KS2499"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTitle(INVALID_TITLE));","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"KS2499"},"content":"    public void parseTitle_validValueWithoutWhitespace_returnsTitle() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"KS2499"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(VALID_TITLE));","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":249,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":250,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"KS2499"},"content":"    public void parseTitle_validValueWithWhitespace_returnsTrimmedTitle() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"KS2499"},"content":"        String titleWithWhitespace \u003d WHITESPACE + VALID_TITLE + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":253,"author":{"gitId":"KS2499"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(titleWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":258,"author":{"gitId":"KS2499"},"content":"    public void parseDateTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDateTime(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":260,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":262,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":263,"author":{"gitId":"KS2499"},"content":"    public void parseDateTime_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":264,"author":{"gitId":"KS2499"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDateTime(INVALID_DATETIME));","lastModifiedDate":"2023-03-13"},{"lineNumber":265,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":266,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":267,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":268,"author":{"gitId":"KS2499"},"content":"    public void parseDateTime_validValueWithoutWhitespace_returnsDateTime() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":269,"author":{"gitId":"KS2499"},"content":"        DateTime expectedDateTime \u003d new DateTime(VALID_DATETIME);","lastModifiedDate":"2023-03-13"},{"lineNumber":270,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedDateTime, ParserUtil.parseDateTime(VALID_DATETIME));","lastModifiedDate":"2023-03-13"},{"lineNumber":271,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":272,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":273,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":274,"author":{"gitId":"KS2499"},"content":"    public void parseDateTime_validValueWithWhitespace_returnsTrimmedDateTime() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":275,"author":{"gitId":"KS2499"},"content":"        String dateTimeWithWhitespace \u003d WHITESPACE + VALID_DATETIME + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":276,"author":{"gitId":"KS2499"},"content":"        DateTime expectedDateTime \u003d new DateTime(VALID_DATETIME);","lastModifiedDate":"2023-03-13"},{"lineNumber":277,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedDateTime, ParserUtil.parseDateTime(dateTimeWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":278,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":279,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":280,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":281,"author":{"gitId":"KS2499"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":282,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":283,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":284,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":285,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":286,"author":{"gitId":"KS2499"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":287,"author":{"gitId":"KS2499"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_LOCATION));","lastModifiedDate":"2023-03-13"},{"lineNumber":288,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":289,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":290,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":291,"author":{"gitId":"KS2499"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":292,"author":{"gitId":"KS2499"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2023-03-13"},{"lineNumber":293,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2023-03-13"},{"lineNumber":294,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":295,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":296,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":297,"author":{"gitId":"KS2499"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":298,"author":{"gitId":"KS2499"},"content":"        String locationWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":299,"author":{"gitId":"KS2499"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2023-03-13"},{"lineNumber":300,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(locationWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":301,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":302,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":303,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":304,"author":{"gitId":"KS2499"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":305,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":306,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":307,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":308,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":309,"author":{"gitId":"KS2499"},"content":"    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":310,"author":{"gitId":"KS2499"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2023-03-13"},{"lineNumber":311,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":312,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":313,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":314,"author":{"gitId":"KS2499"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":315,"author":{"gitId":"KS2499"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2023-03-13"},{"lineNumber":316,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2023-03-13"},{"lineNumber":317,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":318,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":319,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":320,"author":{"gitId":"KS2499"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":321,"author":{"gitId":"KS2499"},"content":"        String descriptionWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":322,"author":{"gitId":"KS2499"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2023-03-13"},{"lineNumber":323,"author":{"gitId":"KS2499"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descriptionWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":324,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Beebeeoii":14,"KS2499":130,"-":181}},{"path":"src/test/java/seedu/quickcontacts/logic/parser/QuickContactsParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditMeetingsCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.FindCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ListCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.ViewMeetingsCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.MeetingContainsNamesPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.MeetingUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"public class QuickContactsParserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    private final QuickContactsParser parser \u003d new QuickContactsParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"    public void parseCommand_findMeeting() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"        FindMeetingCommand command \u003d (FindMeetingCommand) parser.parseCommand(","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"            FindMeetingCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"        assertEquals(new FindMeetingCommand(new MeetingContainsNamesPredicate(keywords)), command);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"    public void parseCommand_viewMeetings() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"chuakid"},"content":"        assertTrue(parser.parseCommand(ViewMeetingsCommand.COMMAND_WORD) instanceof ViewMeetingsCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"chuakid"},"content":"        assertTrue(parser.parseCommand(ViewMeetingsCommand.COMMAND_WORD + \" 3\") instanceof ViewMeetingsCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"chuakid"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"chuakid"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"    public void parseCommand_addMeeting() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"        AddMeetingCommand command \u003d (AddMeetingCommand) parser.parseCommand(MeetingUtil.getAddMeetingCommand(meeting));","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new AddMeetingCommand(meeting), command);","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"    public void parseCommand_editMeeting() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meeting).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"        EditMeetingsCommand command \u003d (EditMeetingsCommand) parser.parseCommand(","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"                EditMeetingsCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + MeetingUtil.getEditMeetingDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new EditMeetingsCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"    public void parseCommand_deleteMeeting() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"        DeleteMeetingCommand command \u003d (DeleteMeetingCommand) parser.parseCommand(","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"                DeleteMeetingCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DeleteMeetingCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Beebeeoii":57,"KS2499":11,"chuakid":4,"-":77}},{"path":"src/test/java/seedu/quickcontacts/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.QuickBookBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        Assertions.assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        Assertions.assertEquals(new QuickBook(), new QuickBook(modelManager.getQuickBook()));","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        userPrefs.setQuickBookFilePath(Paths.get(\"quick/book/file/path\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, false));","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        userPrefs.setQuickBookFilePath(Paths.get(\"new/quick/book/file/path\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"chuakid"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    public void setQuickBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setQuickBookFilePath(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public void setQuickBookFilePath_validPath_setsQuickBookFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        Path path \u003d Paths.get(\"quick/book/file/path\");","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        modelManager.setQuickBookFilePath(path);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(path, modelManager.getQuickBookFilePath());","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    public void hasPerson_personNotInQuickBook_returnsFalse() {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"    public void hasPerson_personInQuickBook_returnsTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_nullName_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.getPersonByName(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"    public void getPersonByName_personNotInQuickBook_returnsNull() {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"        assertNull(modelManager.getPersonByName(ALICE.getName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"    public void getPersonByName_personInQuickBook_returnsPerson() {","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"        assertEquals(ALICE, modelManager.getPersonByName(ALICE.getName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"    public void addMeeting_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addMeeting(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"    public void addMeeting_meetingInQuickBook_returnsTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"        modelManager.addMeeting(MEETING_A);","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"KS2499"},"content":"        assertTrue(modelManager.hasMeeting(MEETING_A));","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"    public void hasMeeting_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasMeeting(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"    public void hasMeeting_meetingNotInQuickBook_returnsFalse() {","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"KS2499"},"content":"        assertFalse(modelManager.hasMeeting(MEETING_A));","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"    public void hasMeeting_meetingInQuickBook_returnsTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"KS2499"},"content":"        modelManager.addMeeting(MEETING_A);","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"KS2499"},"content":"        assertTrue(modelManager.hasMeeting(MEETING_A));","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook quickBook \u003d new QuickBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook differentQuickBook \u003d new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"        modelManager \u003d new ModelManager(quickBook, userPrefs);","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(quickBook, userPrefs);","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"        // different quickBook -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentQuickBook, userPrefs)));","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(modelManager.equals(new ModelManager(quickBook, userPrefs)));","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"Beebeeoii"},"content":"        differentUserPrefs.setQuickBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(modelManager.equals(new ModelManager(quickBook, differentUserPrefs)));","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Beebeeoii":36,"KS2499":49,"chuakid":2,"-":91}},{"path":"src/test/java/seedu/quickcontacts/model/QuickBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalQuickBooks.getTypicalQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"public class QuickBookTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    private final QuickBook quickBook \u003d new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(Collections.emptyList(), quickBook.getPersonList());","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e quickBook.resetData(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    public void resetData_withValidReadOnlyQuickBook_replacesData() {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook newData \u003d getTypicalQuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.resetData(newData);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(newData, quickBook);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"            .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        QuickBookStub newData \u003d new QuickBookStub(newPersons, Collections.singletonList(MEETING_A));","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e quickBook.resetData(newData));","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public void resetData_withDuplicateMeetings_throwsDuplicateMeetingException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        // Two meetings with the same identity fields","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeetingA \u003d new MeetingBuilder(MEETING_A).withLocation(CommandTestUtil.VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"            .withDescription(CommandTestUtil.VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cMeeting\u003e newMeetings \u003d Arrays.asList(MEETING_A, editedMeetingA);","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        QuickBookStub newData \u003d new QuickBookStub(Collections.singletonList(ALICE), newMeetings);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e quickBook.resetData(newData));","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e quickBook.hasPerson(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"    public void hasMeeting_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e quickBook.hasMeeting(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_nullName_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e quickBook.getPersonByName(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    public void getPersonByName_personNotInQuickBook_returnsNull() {","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        assertNull(quickBook.getPersonByName(ALICE.getName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"    public void getPersonByName_personInQuickBook_returnsPerson() {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.addPerson(ALICE);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(ALICE, quickBook.getPersonByName(ALICE.getName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"    public void hasPerson_personNotInQuickBook_returnsFalse() {","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(quickBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"    public void hasMeeting_meetingNotInQuickBook_returnsFalse() {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(quickBook.hasMeeting(MEETING_A));","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"    public void hasPerson_personInQuickBook_returnsTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.addPerson(ALICE);","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(quickBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"    public void hasMeeting_meetingInQuickBook_returnsTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.addMeeting(MEETING_A);","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(quickBook.hasMeeting(MEETING_A));","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"    public void hasPerson_personWithSameIdentityFieldsInQuickBook_returnsTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.addPerson(ALICE);","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"            .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(quickBook.hasPerson(editedAlice));","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"    public void hasMeeting_meetingWithSameIdentityFieldsInQuickBook_returnsTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.addMeeting(MEETING_A);","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(MEETING_A).withLocation(CommandTestUtil.VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"            .withDescription(CommandTestUtil.VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(quickBook.hasMeeting(editedMeeting));","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e quickBook.getPersonList().remove(0));","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"    public void getMeetingList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e quickBook.getMeetingList().remove(0));","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"     * A stub ReadOnlyQuickBook whose persons/meetings list can violate interface constraints.","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"    private static class QuickBookStub implements ReadOnlyQuickBook {","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"        private final ObservableList\u003cMeeting\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"        QuickBookStub(Collection\u003cPerson\u003e persons, Collection\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"            this.meetings.setAll(meetings);","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"            return meetings;","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Beebeeoii":92,"KS2499":23,"-":55}},{"path":"src/test/java/seedu/quickcontacts/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void setQuickBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setQuickBookFilePath(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Beebeeoii":4,"-":17}},{"path":"src/test/java/seedu/quickcontacts/model/command/CommandHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.command;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.command.exceptions.OutOfBoundsCommandHistoryException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"public class CommandHistoryTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"        CommandHistory.clear();","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    public void traversePrevEmptyHistory_throwsOutOfBoundsCommandHistoryException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(OutOfBoundsCommandHistoryException.class, CommandHistory::prev);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public void traverseNextEmptyHistory_throwsOutOfBoundsCommandHistoryException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(OutOfBoundsCommandHistoryException.class, CommandHistory::next);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    public void moreThanMaximumNumberOfCommands_overwriteEarliestCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        String expected \u003d \"expectedCommand\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        CommandHistory.push(\"dummyCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        CommandHistory.push(expected);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        for (int i \u003d 0; i \u003c CommandHistory.MAXIMUM - 2; ++i) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            CommandHistory.push(String.valueOf(i));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        CommandHistory.push(\"testcommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        for (int i \u003d 0; i \u003c CommandHistory.MAXIMUM - 2; ++i) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            CommandHistory.prev();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(CommandHistory.prev(), expected);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Beebeeoii":46}},{"path":"src/test/java/seedu/quickcontacts/model/meeting/DateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.time.Year;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"public class DateTimeTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateTime(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidDateTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"        String invalidDateTime \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(invalidDateTime));","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidDateTime_throwsDateTimeException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        // Single date/time","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"some random string\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"32/13/2022 13:22\")); // invalid day","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"22/13/2022 13:22\")); // invalid month","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"22/12/20222 13:22\")); // invalid year","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"22\\\\12/2022 13:22\")); // invalid delimiter \u0027\\\u0027","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        // Double date/time (start and end)","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(\"some random string\", \"some random string\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                \"12/13/2023 13:22\", \"12/12/2023 13:22\")); // invalid start","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"                \"12/12/2023 13:22\", \"12/13/2023 13:22\")); // invalid end","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidEndDateTime_throwsInvalidEndDateTimeException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"                \"12/12/2023 13:22\", \"12/11/2023 13:22\")); // negative duration","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"                \"12/12/2023 13:22\", \"12/12/2023 13:22\")); // zero duration","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidDateTime() {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        // null date/time","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDateTime(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        // invalid dates/times","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\" 22/05/2023\")); // starts with a space","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"22/05/2023 1:32am\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"22/05/2023 1:32pm\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"22/05/2023 1:32 AM\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"22/05/2023 1:32 PM\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"next thursday\")); // NLP","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"this coming friday 2:30pm\")); // NLP","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDateTime(\"22/05/2023 13:32PM\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        // valid dates/times","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22052023 13:22\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22-05-2023 13:22\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05/2023\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22-05-2023\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22.05.2023\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22052023\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05/23\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22-05-23\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22.05.23\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"220523\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"2205\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22.05\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22-05\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05/2023 13:22\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05/2023 1:32AM\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDateTime(\"22/05/2023 12:32PM\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidDuration() {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        // null date/time","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDuration(null, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDuration(LocalDateTime.MAX, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDuration(null, LocalDateTime.MAX));","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"        // invalid dates/times","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDuration(LocalDateTime.MAX, LocalDateTime.MAX)); // zero duration","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(DateTime.isValidDuration(LocalDateTime.MAX, LocalDateTime.MIN)); // negative duration","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        // valid dates/times","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(DateTime.isValidDuration(LocalDateTime.MIN, LocalDateTime.MAX));","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"    public void getDateTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22/02/2022\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22-02-2022\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22.02.2022\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22/02/22\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22-02-22\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22.02.22\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"220222\").getDateTime(), \"22/02/2022\");","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22/02\").getDateTime(), \"22/02/\" + Year.now());","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22-02\").getDateTime(), \"22/02/\" + Year.now());","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22.02\").getDateTime(), \"22/02/\" + Year.now());","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"2202\").getDateTime(), \"22/02/\" + Year.now());","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 13:00\").getDateTime(), \"22/02/2022 13:00\");","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 13.00\").getDateTime(), \"22/02/2022 13:00\");","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 1:00AM\").getDateTime(), \"22/02/2022 01:00\");","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 1:00PM\").getDateTime(), \"22/02/2022 13:00\");","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"    public void get() {","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 13:00\").get(),","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.of(2022, 2, 22, 13, 0));","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022\").get(),","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.of(2022, 2, 22, 0, 0));","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(new DateTime(\"22022022 12:00AM\").get(),","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.of(2022, 2, 22, 0, 0));","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":135}},{"path":"src/test/java/seedu/quickcontacts/model/meeting/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.Assert;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class DescriptionTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidTitle() {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        // null description","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        // invalid descriptions","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Description.isValidDescription(\" This is a test description\")); // starts with a space","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        // valid descriptions","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Description.isValidDescription(\"Purpose: Onboard everyone onto QuickContacts\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Description.isValidDescription(\"A\")); // one character","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Description.isValidDescription(","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"                \"This meeting is created so that everyone can be understand the workflow of \"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                        + \"QuickContacts with ease. The meeting should last for 2 hours.\")); // long description","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":39}},{"path":"src/test/java/seedu/quickcontacts/model/meeting/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.Assert;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class LocationTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidLocation() {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        // null location","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        // invalid locations","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidLocation(\" City Square Mall\")); // starts with a space","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        // valid locations","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidLocation(\"https://zoom.us/\")); // url","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidLocation(\"A\")); // one character","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidLocation(\"123 Jurong West Street 52 Blk 123A #14-244\")); // long location","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidVirtualLocation() {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        // null virtual location","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Location.isValidVirtualLocation(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        // invalid virtual locations","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\" City Square Mall\")); // starts with a space","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\"A\")); // one character","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\"123 Jurong West Street 52 Blk 123A #14-244\")); // address","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Location.isValidVirtualLocation(\"zoom.us\")); // address","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        // valid virtual locations","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidVirtualLocation(\"https://zoom.us/\")); // https url","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidVirtualLocation(\"http://zoom.us/\")); // http url","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidVirtualLocation(","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"                \"https://us02web.zoom.us/j/99999999999?pwd\u003dABCdEfGHiJkYkRuYW5WTLmNopQrSt12\")); // actual zoom url","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Location.isValidVirtualLocation(","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"                \"http://us02web.zoom.us/j/99999999999?pwd\u003dABCdEfGHiJkYkRuYW5WTLmNopQrSt12\")); // http zoom url","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":59}},{"path":"src/test/java/seedu/quickcontacts/model/meeting/MeetingContainsNamesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"public class MeetingContainsNamesPredicateTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate firstPredicate \u003d new MeetingContainsNamesPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate secondPredicate \u003d new MeetingContainsNamesPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate firstPredicateCopy \u003d new MeetingContainsNamesPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"    public void test_meetingContainsNames_returnsTrue() {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"        // One keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate predicate \u003d new MeetingContainsNamesPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(ALICE).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"        predicate \u003d new MeetingContainsNamesPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(ALICE, BOB).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        predicate \u003d new MeetingContainsNamesPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(ALICE, BOB).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"        predicate \u003d new MeetingContainsNamesPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(ALICE, BOB).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"        MeetingContainsNamesPredicate predicate \u003d new MeetingContainsNamesPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withAttendees(ALICE).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"        predicate \u003d new MeetingContainsNamesPredicate(List.of(\"Carol\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withAttendees(ALICE, BOB).build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Beebeeoii":4,"KS2499":70}},{"path":"src/test/java/seedu/quickcontacts/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalMeetings.MEETING_B;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.Assert;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalPersons;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"public class MeetingTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e meeting.getAttendees().remove(0));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    public void isSameMeeting() {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(MEETING_A.isSameMeeting(MEETING_A));","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(MEETING_A.isSameMeeting(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        // same title, all other attributes different -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeetingA \u003d new MeetingBuilder(MEETING_A).withDateTime(CommandTestUtil.VALID_MEETING_DATETIME)","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"                .withAttendees(TypicalPersons.BENSON).withLocation(CommandTestUtil.VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(CommandTestUtil.VALID_MEETING_DESCRIPTION).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(MEETING_A.isSameMeeting(editedMeetingA));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        // different title, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withTitle(CommandTestUtil.VALID_MEETING_TITLE).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(MEETING_A.isSameMeeting(editedMeetingA));","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        // different date/time, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withDateTime(CommandTestUtil.VALID_MEETING_DATETIME).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(MEETING_A.isSameMeeting(editedMeetingA));","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        // different attendees all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withAttendees(TypicalPersons.BENSON).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(MEETING_A.isSameMeeting(editedMeetingA));","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        Meeting meetingACopy \u003d new MeetingBuilder(MEETING_A).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(meetingACopy, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(MEETING_A, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(null, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(1, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        // different meetings -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(MEETING_A, MEETING_B);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeetingA \u003d new MeetingBuilder(MEETING_A).withTitle(CommandTestUtil.VALID_MEETING_TITLE).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(editedMeetingA, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        // different datetime -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withDateTime(CommandTestUtil.VALID_MEETING_DATETIME).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(editedMeetingA, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        // different attendee -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withAttendees(TypicalPersons.BENSON).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(editedMeetingA, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withLocation(CommandTestUtil.VALID_MEETING_LOCATION).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(editedMeetingA, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        editedMeetingA \u003d new MeetingBuilder(MEETING_A).withDescription(CommandTestUtil.VALID_MEETING_DESCRIPTION)","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"                .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        assertNotEquals(editedMeetingA, MEETING_A);","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"    public void hasPassed() {","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(new MeetingBuilder(MEETING_A).withDateTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.now().minus(1, ChronoUnit.HOURS)","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"                        .format(DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\"))).build().hasPassed());","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(new MeetingBuilder(MEETING_A).withDateTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.now().minus(1, ChronoUnit.MINUTES)","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"                        .format(DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\"))).build().hasPassed());","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(new MeetingBuilder(MEETING_A).withDateTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.now().plus(1, ChronoUnit.MINUTES)","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"                        .format(DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\"))).build().hasPassed());","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(new MeetingBuilder(MEETING_A).withDateTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.now().plus(1, ChronoUnit.HOURS)","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"                        .format(DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\"))).build().hasPassed());","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":110}},{"path":"src/test/java/seedu/quickcontacts/model/meeting/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"public class TitleTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void isValidTitle() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        // null title","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        // invalid titles","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Title.isValidTitle(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Title.isValidTitle(\" Meetup with Bob\")); // starts with a space","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        // valid titles","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Title.isValidTitle(\"Meetup with Bob\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Title.isValidTitle(\"A\")); // one character","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Title.isValidTitle(\"Group project meeting for CS2103T\")); // long title","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":36}},{"path":"src/test/java/seedu/quickcontacts/model/meeting/UniqueMeetingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalMeetings.MEETING_B;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.Assert;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.MeetingBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"public class UniqueMeetingListTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    private final UniqueMeetingList uniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    public void contains_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.contains(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    public void contains_meetingNotInList_returnsFalse() {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(uniqueMeetingList.contains(MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    public void contains_meetingInList_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(uniqueMeetingList.contains(MEETING_A));","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    public void contains_meetingWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeetingA \u003d new MeetingBuilder(MEETING_A).withLocation(CommandTestUtil.VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(CommandTestUtil.VALID_MEETING_DESCRIPTION)","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"                .build();","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(uniqueMeetingList.contains(editedMeetingA));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    public void add_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.add(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    public void add_duplicateMeeting_throwsDuplicateMeetingException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.add(MEETING_A));","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_nullTargetMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeeting(null, MEETING_A));","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_nullEditedMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING_A, null));","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_targetMeetingNotInList_throwsMeetingNotFoundException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(MeetingNotFoundException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING_A, MEETING_A));","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_editedMeetingIsSameMeeting_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.setMeeting(MEETING_A, MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        expectedUniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_editedMeetingHasSameIdentity_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        Meeting editedMeetingA \u003d new MeetingBuilder(MEETING_A).withLocation(CommandTestUtil.VALID_MEETING_LOCATION)","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"                .withDescription(CommandTestUtil.VALID_MEETING_DESCRIPTION)","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"                .build();","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.setMeeting(MEETING_A, editedMeetingA);","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        expectedUniqueMeetingList.add(editedMeetingA);","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_editedMeetingHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.setMeeting(MEETING_A, MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        expectedUniqueMeetingList.add(MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeeting_editedMeetingHasNonUniqueIdentity_throwsDuplicateMeetingException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING_A, MEETING_B));","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"    public void remove_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.remove(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"    public void remove_meetingDoesNotExist_throwsMeetingNotFoundException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(MeetingNotFoundException.class, () -\u003e uniqueMeetingList.remove(MEETING_A));","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"    public void remove_existingMeeting_removesMeeting() {","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.remove(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings_nullUniqueMeetingList_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeetings((UniqueMeetingList) null));","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings_uniqueMeetingList_replacesOwnListWithProvidedUniqueMeetingList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"        expectedUniqueMeetingList.add(MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.setMeetings(expectedUniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeetings((List\u003cMeeting\u003e) null));","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.add(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cMeeting\u003e meetingList \u003d Collections.singletonList(MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"        uniqueMeetingList.setMeetings(meetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"        expectedUniqueMeetingList.add(MEETING_B);","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"    public void setMeetings_listWithDuplicateMeetings_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cMeeting\u003e listWithDuplicateMeetings \u003d Arrays.asList(MEETING_A, MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(DuplicateMeetingException.class, () -\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"                uniqueMeetingList.setMeetings(listWithDuplicateMeetings));","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"                -\u003e uniqueMeetingList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":171}},{"path":"src/test/java/seedu/quickcontacts/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Beebeeoii":2,"-":34}},{"path":"src/test/java/seedu/quickcontacts/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Beebeeoii":2,"-":66}},{"path":"src/test/java/seedu/quickcontacts/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Beebeeoii":2,"-":73}},{"path":"src/test/java/seedu/quickcontacts/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Beebeeoii":2,"-":38}},{"path":"src/test/java/seedu/quickcontacts/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_BOB).withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(CommandTestUtil.VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        String nameWithTrailingSpaces \u003d CommandTestUtil.VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(CommandTestUtil.VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(CommandTestUtil.VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Beebeeoii":17,"-":71}},{"path":"src/test/java/seedu/quickcontacts/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Beebeeoii":2,"-":38}},{"path":"src/test/java/seedu/quickcontacts/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"            .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"            .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_nullName_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.getPersonByName(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_personNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"KS2499"},"content":"        assertNull(uniquePersonList.getPersonByName(ALICE.getName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"KS2499"},"content":"    public void getPersonByName_personInList_returnsPerson() {","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"KS2499"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"KS2499"},"content":"        Person person \u003d uniquePersonList.getPersonByName(ALICE.getName());","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"KS2499"},"content":"        assertEquals(ALICE, person);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Beebeeoii":12,"KS2499":18,"-":157}},{"path":"src/test/java/seedu/quickcontacts/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.model.tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"Beebeeoii":2,"-":24}},{"path":"src/test/java/seedu/quickcontacts/storage/JsonAdaptedMeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.storage.JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalMeetings.MEETING_A;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Description;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Title;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"public class JsonAdaptedMeetingTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    private static final String INVALID_TITLE \u003d \"Meeting @ CLB\";","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private static final String INVALID_DATETIME \u003d \"12/13/2022 13:59\"; //13 month does not exist","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    private static final String INVALID_LOCATION \u003d \" City Square Mall\";","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" Some random description\";","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    private static final String VALID_TITLE \u003d MEETING_A.getTitle().toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    private static final String VALID_DATETIME \u003d MEETING_A.getDateTime().getDateTime();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    private static final List\u003cJsonAdaptedPerson\u003e VALID_ATTENDEES \u003d MEETING_A.getAttendees().stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    private static final String VALID_LOCATION \u003d MEETING_A.getLocation().toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    private static final String VALID_DESCRIPTION \u003d MEETING_A.getDescription().toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_validMeetingDetails_returnsMeeting() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(MEETING_A);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(MEETING_A, meeting.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(INVALID_TITLE, VALID_DATETIME, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d Title.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(null, VALID_DATETIME, VALID_ATTENDEES, VALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidDateTime_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, INVALID_DATETIME, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d DateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_nullDateTime_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, null, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"                DateTime.class.getSimpleName());","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidAttendees_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cJsonAdaptedPerson\u003e invalidAttendees \u003d new ArrayList\u003c\u003e(VALID_ATTENDEES);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        invalidAttendees.add(new JsonAdaptedPerson(INVALID_NAME_DESC, VALID_PHONE_BOB, VALID_EMAIL_BOB,","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"                VALID_ADDRESS_BOB, new ArrayList\u003c\u003e(VALID_TAGS)));","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, INVALID_DATETIME, invalidAttendees,","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_DATETIME, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"                        INVALID_LOCATION, VALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_DATETIME, VALID_ATTENDEES,","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"                        VALID_LOCATION, INVALID_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":112}},{"path":"src/test/java/seedu/quickcontacts/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Beebeeoii":9,"-":80}},{"path":"src/test/java/seedu/quickcontacts/storage/JsonQuickBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalQuickBooks.getTypicalQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"public class JsonQuickBookStorageTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonQuickBookStorageTest\");","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    @TempDir","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    public void readQuickBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e readQuickBook(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    private java.util.Optional\u003cReadOnlyQuickBook\u003e readQuickBook(String filePath) throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        return new JsonQuickBookStorage(Paths.get(filePath)).readQuickBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"                : null;","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(readQuickBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DataConversionException.class, () -\u003e readQuickBook(\"notJsonFormatQuickBook.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    public void readQuickBook_invalidPersonQuickBook_throwDataConversionException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DataConversionException.class, () -\u003e readQuickBook(\"invalidPersonQuickBook.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    public void readQuickBook_invalidMeetingQuickBook_throwDataConversionException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DataConversionException.class, () -\u003e readQuickBook(\"invalidMeetingQuickBook.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    public void readQuickBook_invalidAndValidPersonQuickBook_throwDataConversionException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DataConversionException.class, () -\u003e readQuickBook(\"invalidAndValidPersonQuickBook.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    public void readQuickBook_invalidAndValidMeetingQuickBook_throwDataConversionException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DataConversionException.class, () -\u003e readQuickBook(\"invalidAndValidMeetingQuickBook.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    public void readAndSaveQuickBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"        Path filePath \u003d testFolder.resolve(\"TempQuickContactsA.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook original \u003d getTypicalQuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        JsonQuickBookStorage jsonQuickBookStorage \u003d new JsonQuickBookStorage(filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        jsonQuickBookStorage.saveQuickBook(original, filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        ReadOnlyQuickBook readBack \u003d jsonQuickBookStorage.readQuickBook(filePath).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(original, new QuickBook(readBack));","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        jsonQuickBookStorage.saveQuickBook(original, filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        readBack \u003d jsonQuickBookStorage.readQuickBook(filePath).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(original, new QuickBook(readBack));","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        jsonQuickBookStorage.saveQuickBook(original); // file path not specified","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        readBack \u003d jsonQuickBookStorage.readQuickBook().get(); // file path not specified","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(original, new QuickBook(readBack));","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"    public void saveQuickBook_nullQuickBook_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveQuickBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"     * Saves {@code quickBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"    private void saveQuickBook(ReadOnlyQuickBook quickBook, String filePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"            new JsonQuickBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"                    .saveQuickBook(quickBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"    public void saveQuickBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveQuickBook(new QuickBook(), null));","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Beebeeoii":120}},{"path":"src/test/java/seedu/quickcontacts/storage/JsonSerializableQuickBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.util.JsonUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.testutil.TypicalQuickBooks;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"public class JsonSerializableQuickBookTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableQuickBookTest\");","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsQuickBook.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonQuickBook.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonQuickBook.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path TYPICAL_MEETINGS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalMeetingsQuickBook.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path INVALID_MEETING_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidMeetingQuickBook.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    private static final Path DUPLICATE_MEETING_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateMeetingQuickBook.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        JsonSerializableQuickBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"                JsonSerializableQuickBook.class).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook quickBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook typicalPersonsQuickBook \u003d TypicalQuickBooks.getTypicalQuickBookPersonsOnly();","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(quickBookFromFile, typicalPersonsQuickBook);","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        JsonSerializableQuickBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"                JsonSerializableQuickBook.class).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        JsonSerializableQuickBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"                JsonSerializableQuickBook.class).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableQuickBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_typicalMeetingsFile_success() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        JsonSerializableQuickBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_MEETINGS_FILE,","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"                JsonSerializableQuickBook.class).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook quickBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook typicalMeetingsQuickBook \u003d TypicalQuickBooks.getTypicalQuickBookMeetingsOnly();","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(quickBookFromFile, typicalMeetingsQuickBook);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_invalidMeetingFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        JsonSerializableQuickBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_MEETING_FILE,","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"                JsonSerializableQuickBook.class).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    public void toModelType_duplicateMeetings_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        JsonSerializableQuickBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MEETING_FILE,","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"                JsonSerializableQuickBook.class).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableQuickBook.MESSAGE_DUPLICATE_MEETING,","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Beebeeoii":73}},{"path":"src/test/java/seedu/quickcontacts/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"chuakid"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100, false));","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        userPrefs.setQuickBookFilePath(Paths.get(\"quickcontacts.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"chuakid"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, false));","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"chuakid"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, false));","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Beebeeoii":6,"chuakid":3,"-":114}},{"path":"src/test/java/seedu/quickcontacts/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalQuickBooks.getTypicalQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.ReadOnlyQuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        JsonQuickBookStorage quickBookStorage \u003d new JsonQuickBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        storageManager \u003d new StorageManager(quickBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"chuakid"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, false));","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    public void quickBookReadSave() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"         * {@link JsonQuickBookStorage} class.","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonQuickBookStorageTest} class.","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook original \u003d getTypicalQuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        storageManager.saveQuickBook(original);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        ReadOnlyQuickBook retrieved \u003d storageManager.readQuickBook().get();","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(original, new QuickBook(retrieved));","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    public void getQuickBookFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        assertNotNull(storageManager.getQuickBookFilePath());","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":17,"chuakid":1,"-":50}},{"path":"src/test/java/seedu/quickcontacts/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Beebeeoii":1,"-":33}},{"path":"src/test/java/seedu/quickcontacts/testutil/EditMeetingDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditMeetingsCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Description;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Title;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":" * A utility class to help with building EditMeetingDescriptor objects.","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"public class EditMeetingDescriptorBuilder {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private EditMeetingDescriptor descriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        this.descriptor \u003d new EditMeetingDescriptor(descriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an {@code EditMeetingDescriptor} with fields containing {@code meeting}\u0027s details","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder(Meeting meeting) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setTitle(meeting.getTitle());","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setDateTime(meeting.getDateTime());","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setAttendees(meeting.getAttendees().stream().map(Person::getName).collect(Collectors.toSet()));","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setLocation(meeting.getLocation());","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setDescription(meeting.getDescription());","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Title} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setTitle(new Title(title));","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code DateTime} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder withDateTime(String dateTime) {","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setDateTime(new DateTime(dateTime));","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Location} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setLocation(new Location(location));","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Description} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"     * Parses the {@code attendees} into a {@code Set\u003cPerson\u003e} and set it to the {@code EditMeetingDescriptor}","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"     * that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptorBuilder withAttendees(String... names) {","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        Set\u003cName\u003e personSet \u003d Stream.of(names).map(Name::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.setAttendees(personSet);","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    public EditMeetingDescriptor build() {","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        return descriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Beebeeoii":88}},{"path":"src/test/java/seedu/quickcontacts/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Beebeeoii":8,"-":79}},{"path":"src/test/java/seedu/quickcontacts/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.DateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Description;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Title;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"public class MeetingBuilder {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    public static final String DEFAULT_TITLE \u003d \"Meeting with Bob\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    public static final String DEFAULT_DATETIME \u003d \"01/01/2023 13:00\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    public static final String DEFAULT_LOCATION \u003d \"Plaza Singapura\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Celebrate Bob\u0027s birthday\";","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public static final Person DEFAULT_PERSON \u003d TypicalPersons.ALICE;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    private Title title;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    private DateTime dateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    private Set\u003cPerson\u003e attendees;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private Location location;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    private Description description;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        dateTime \u003d new DateTime(DEFAULT_DATETIME);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        attendees.add(DEFAULT_PERSON);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        title \u003d meetingToCopy.getTitle();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        dateTime \u003d meetingToCopy.getDateTime();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        attendees \u003d new HashSet\u003c\u003e(meetingToCopy.getAttendees());","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        location \u003d meetingToCopy.getLocation();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        description \u003d meetingToCopy.getDescription();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Title} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder withTitle(String title) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code DateTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder withDateTime(String dateTime) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"     * Parses the {@code attendees} into a {@code Set\u003cPerson\u003e} and set it to the {@code Meeting} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder withAttendees(Person... attendees) {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        this.attendees \u003d SampleDataUtil.getAttendeeSet(attendees);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Location} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder withLocation(String location) {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"     * Sets the {@code Description} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    public MeetingBuilder withDescription(String description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"    public Meeting build() {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        return new Meeting(title, dateTime, attendees, location, description);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":96}},{"path":"src/test/java/seedu/quickcontacts/testutil/MeetingUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_MEETING_TITLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditMeetingsCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":" * A utility class for Meeting.","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"public class MeetingUtil {","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an AddMeeting command string for adding the {@code meeting}.","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    public static String getAddMeetingCommand(Meeting meeting) {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        return AddMeetingCommand.COMMAND_WORD + \" \" + getMeetingDetails(meeting);","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the part of command string for the given {@code meeting}\u0027s details.","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    public static String getMeetingDetails(Meeting meeting) {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        sb.append(PREFIX_MEETING_TITLE).append(meeting.getTitle().toString()).append(\" \");","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        meeting.getAttendees().forEach(","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"                s -\u003e sb.append(PREFIX_PERSON).append(s.getName().fullName).append(\" \")","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        sb.append(PREFIX_DATETIME).append(meeting.getDateTime().getDateTime()).append(\" \");","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        sb.append(PREFIX_LOCATION).append(meeting.getLocation().toString()).append(\" \");","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        sb.append(PREFIX_DESCRIPTION).append(meeting.getDescription().toString()).append(\" \");","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the part of command string for the given {@code EditMeetingDescriptor}\u0027s details.","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    public static String getEditMeetingDescriptorDetails(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.getTitle().ifPresent(title -\u003e sb.append(PREFIX_MEETING_TITLE).append(title).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.getDateTime().ifPresent(","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"                dateTime -\u003e sb.append(PREFIX_DATETIME).append(dateTime.getDateTime()).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.getLocation().ifPresent(","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"                location -\u003e sb.append(PREFIX_LOCATION).append(location).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        descriptor.getDescription().ifPresent(","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"                description -\u003e sb.append(PREFIX_DESCRIPTION).append(description).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        if (descriptor.getAttendees().isPresent()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"            Set\u003cName\u003e attendees \u003d descriptor.getAttendees().get();","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"            if (attendees.isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"                attendees.forEach(s -\u003e sb.append(PREFIX_PERSON).append(s.fullName).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Beebeeoii":66}},{"path":"src/test/java/seedu/quickcontacts/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Address;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"            return null;","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"            return null;","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"            return null;","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Beebeeoii":8,"KS2499":9,"-":88}},{"path":"src/test/java/seedu/quickcontacts/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.AddCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.tag.Tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Beebeeoii":10,"-":52}},{"path":"src/test/java/seedu/quickcontacts/testutil/QuickBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":" * A utility class to help with building QuickBook objects.","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" *     {@code QuickBook qb \u003d new QuickBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"public class QuickBookBuilder {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    private QuickBook quickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public QuickBookBuilder() {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"        quickBook \u003d new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    public QuickBookBuilder(QuickBook quickBook) {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        this.quickBook \u003d quickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     * Adds a new {@code Person} to the {@code QuickBook} that we are building.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public QuickBookBuilder withPerson(Person person) {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        quickBook.addPerson(person);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        return this;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    public QuickBook build() {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        return quickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Beebeeoii":34}},{"path":"src/test/java/seedu/quickcontacts/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":1,"-":71}},{"path":"src/test/java/seedu/quickcontacts/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Beebeeoii":4,"-":51}},{"path":"src/test/java/seedu/quickcontacts/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    public static final Index INDEX_FIRST_MEETING \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    public static final Index INDEX_SECOND_MEETING \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    public static final Index INDEX_THIRD_MEETING \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Beebeeoii":6,"-":10}},{"path":"src/test/java/seedu/quickcontacts/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * A utility class containing a list of {@code Meeting} objects to be used in tests.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public class TypicalMeetings {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    public static final Meeting MEETING_A \u003d new MeetingBuilder().withTitle(\"Dinner with Alice\")","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"            .withDateTime(\"01/02/2023 19:00\").withAttendees(TypicalPersons.ALICE).withLocation(\"NUS\")","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"            .withDescription(\"Weekly catchup\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public static final Meeting MEETING_B \u003d new MeetingBuilder().withTitle(\"Study session with Benson and Carl\")","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"            .withDateTime(\"02/03/2023 15:00\").withAttendees(TypicalPersons.BENSON, TypicalPersons.CARL)","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"            .withLocation(\"Central Library\").withDescription(\"Study for finals\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    public static final Meeting MEETING_C \u003d new MeetingBuilder().withTitle(\"Zoom meeting for agenda planning\")","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"            .withDateTime(\"13/03/2023 12:45\").withAttendees(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"            .withLocation(\"https://us02web.zoom.us/j/99999999999?pwd\u003dABCdEfGHiJkYkRuYW5WTLmNopQrSt12\")","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"            .withDescription(\"Plan for project work\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * Private constructor to prevent initialisation.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private TypicalMeetings() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING_A, MEETING_B, MEETING_C));","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Beebeeoii":32}},{"path":"src/test/java/seedu/quickcontacts/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"            .withPhone(CommandTestUtil.VALID_PHONE_AMY).withEmail(CommandTestUtil.VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"            .withAddress(CommandTestUtil.VALID_ADDRESS_AMY).withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"            .withPhone(CommandTestUtil.VALID_PHONE_BOB).withEmail(CommandTestUtil.VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"            .withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"            .withTags(CommandTestUtil.VALID_TAG_HUSBAND, CommandTestUtil.VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Beebeeoii":10,"-":47}},{"path":"src/test/java/seedu/quickcontacts/testutil/TypicalQuickBooks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.TypicalMeetings.getTypicalMeetings;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.QuickBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.meeting.Meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * A utility class containing a list of {@code QuickBook} objects to be used in tests.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public class TypicalQuickBooks {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     * Prevents initialisation","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    private TypicalQuickBooks() {}","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an {@code QuickBook} with all the typical persons only.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    public static QuickBook getTypicalQuickBookPersonsOnly() {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook ab \u003d new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        for (Person person : TypicalPersons.getTypicalPersons()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        return ab;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an {@code QuickBook} with all the typical meetings only.","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    public static QuickBook getTypicalQuickBookMeetingsOnly() {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook ab \u003d new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"            ab.addMeeting(meeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        return ab;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"     * Returns an {@code QuickBook} with all the typical persons and meetings.","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    public static QuickBook getTypicalQuickBook() {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        QuickBook ab \u003d new QuickBook();","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        for (Person person : TypicalPersons.getTypicalPersons()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"            ab.addMeeting(meeting);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        return ab;","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Beebeeoii":57}},{"path":"src/test/java/seedu/quickcontacts/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Beebeeoii":1,"-":34}},{"path":"src/test/java/seedu/quickcontacts/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package seedu.quickcontacts.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static seedu.quickcontacts.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import seedu.quickcontacts.MainApp;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Beebeeoii":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"\u003c?import seedu.quickcontacts.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Beebeeoii":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"\u003cfx:root type\u003d\"seedu.quickcontacts.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Beebeeoii":1,"-":5}}]
