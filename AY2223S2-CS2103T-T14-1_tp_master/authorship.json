[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T14-1/tp/actions)","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"This is **an ongoing project catered towards artists to help manage their projects and clients**.","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"* To add, edit, remove, and view ongoing, upcoming, and finished projects","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"* To maintain an addressbook of clients","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"* It is **written in OOP fashion**. It provides a **reasonably well-written** code base (around 6 KLoC).","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"* It is named `Artistic Addressbook` (`ArB` for short).","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"* For the detailed documentation of this project, see the **[documentation (to be added soon)]()**.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"* This project utilises the [PrettyTime](https://www.ocpsoft.org/prettytime/nlp/) library.","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zrei":1,"-":5,"mmaimer33":12}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"mainClassName \u003d \u0027arb.Main\u0027","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"run {","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"    implementation group: \u0027org.ocpsoft.prettytime\u0027, name: \u0027prettytime-nlp\u0027, version: \u00275.0.6.Final\u0027","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    archiveFileName \u003d \u0027arb.jar\u0027","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zrei":8,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"### Lim Zhe Rui","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"\u003cimg src\u003d\"images/zrei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"[[github](https://github.com/zrei)]","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"[[portfolio](team/zrei.md)]","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"* Responsibilities: `to be added`","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"### Rishi Chousalkar","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"\u003cimg src\u003d\"images/mmaimer33.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"[[github](http://github.com/mmaimer33]","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"[[portfolio](team/mmaimer33.md)]","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"* Role: Team Member","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"### Warren Yang","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"\u003cimg src\u003d\"images/verydaftpunk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"[[github](http://github.com/verydaftpunk)]","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"[[portfolio](team/verydaftpunk.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"* Role: Deliverables and deadlines, scheduling and tracking","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"* Responsibilities: \u0027to be added\u0027","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"### John Chia","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"\u003cimg src\u003d\"images/johnchiahk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"[[github](http://github.com/johnchiahk)]","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"[[portfolio](team/johnchiahk.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"* Role: Team Member","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"* Responsibilities: \u0027to be added\u0027","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"verydaftpunk":6,"zrei":5,"Johnchiahk":6,"-":27,"mmaimer33":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"* This project utilises the [PrettyTime](https://www.ocpsoft.org/prettytime/nlp/) library.","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"mmaimer33"},"content":"### Projects","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"mmaimer33"},"content":"#### Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"mmaimer33"},"content":"There is a new type of data that can be stored in the application: Projects. These are implemented as a model class, similar to `Client`. They contain information about the project\u0027s `Title`, `Status`, `Deadline` (optional), and `Price`(optional), each of which are implemented as separate classes.","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"mmaimer33"},"content":"A new project can be created using the `add-project`/`ap` command by providing necessary and, optionally, optional details of the project. The project can also be edited for any fields, which will create a new project with the updated details to replace the current one. This also means that project details are guaranteed to be immutable.","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"mmaimer33"},"content":"Each of the project detail classes have their own validation check that is run upon construction of the object, which is done in the parser (specifically, the `arb.logic.parser.project.AddProjectCommandParser`).","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"### Sorting","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"#### Implementation","lastModifiedDate":"2023-03-22"},{"lineNumber":250,"author":{"gitId":"mmaimer33"},"content":"Sorting is facilitated by [JavaFX\u0027s `SortedList`](https://docs.oracle.com/javase/8/javafx/api/javafx/collections/transformation/SortedList.html). The `SortedList` is overlaid over the `FilteredList`, while the `FilteredList` is overlaid over the `ObservableList`. The main window tracks the `SortedList`, so any changes will be propagated to the UI.","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"The `SortedList` is updated by setting a `Comparator` that decides how to sort the contents of the list. Upon the user executing a `sort` command, the `Comparator` of the `SortedList` is updated with the `setComparator()` method.","lastModifiedDate":"2023-03-22"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"For the client list, it is only sorted with a `Comparator` that compares the names of the clients.","lastModifiedDate":"2023-03-22"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"For the project list, it can be sorted either by deadline or name. When the user executes a `sort` command, they can input which option they wish to sort by, which is parsed by `SortProjectCommandParser`.","lastModifiedDate":"2023-03-22"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"Johnchiahk"},"content":"### Done Status","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"Johnchiahk"},"content":"#### Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"Johnchiahk"},"content":"The displaying of the \"DONE\" status is facilitated by the `markAsDone()`","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"Johnchiahk"},"content":"method in the Project class. ","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"Johnchiahk"},"content":"The Done status is highlighted in the UI when the project is done. ","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"Johnchiahk"},"content":"The ProjectCard class has been updated to run the aforementioned `markAsDone()`","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"Johnchiahk"},"content":"method for any project before setting its status to OVERDUE, DONE, or NOT DONE.","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"Johnchiahk"},"content":"### Not Done Status","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"Johnchiahk"},"content":"#### Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"Johnchiahk"},"content":"The displaying of the \"NOT DONE\" status is facilitated by the `markAsUndone()`","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"Johnchiahk"},"content":"method in the Project class.","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"Johnchiahk"},"content":"The Not Done status is highlighted in the UI when the project is not done and not overdue.","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"Johnchiahk"},"content":"The ProjectCard class has been updated to run the aforementioned `markAsUndone()`","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"Johnchiahk"},"content":"method for any project before setting its status to OVERDUE, DONE, or NOT DONE.","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"verydaftpunk"},"content":"### Overdue Status","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"Johnchiahk"},"content":"#### Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"verydaftpunk"},"content":"The displaying of the \"OVERDUE\" status is facilitated by the isOverdue method ","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"verydaftpunk"},"content":"in the Project class. The isOverdue method returns a boolean after using the ","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"verydaftpunk"},"content":"compareTo method in the Deadline class which checks the current date ","lastModifiedDate":"2023-03-23"},{"lineNumber":290,"author":{"gitId":"verydaftpunk"},"content":"against the deadline date of the project, i.e. check if a project\u0027s deadline ","lastModifiedDate":"2023-03-23"},{"lineNumber":291,"author":{"gitId":"verydaftpunk"},"content":"is past the current date.","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":293,"author":{"gitId":"verydaftpunk"},"content":"The Overdue status is highlighted in the UI when any project is past its deadline. ","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"verydaftpunk"},"content":"The ProjectCard class has been updated to run the aforementioned isOverdue ","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"verydaftpunk"},"content":"method for any project before setting its status to OVERDUE, DONE, or NOT DONE. ","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"verydaftpunk"},"content":"The OVERDUE status is shown for existing projects in the list that are overdue, and ","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"verydaftpunk"},"content":"if a user adds a project with a deadline with a data that has already past.","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"zrei"},"content":"* has a need to manage a significant number of commision clients","lastModifiedDate":"2023-02-19"},{"lineNumber":317,"author":{"gitId":"zrei"},"content":"* has a need to manage a significant number of projects","lastModifiedDate":"2023-02-19"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"zrei"},"content":"**Value proposition**: manage clients and ongoing projects faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-02-19"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"zrei"},"content":"| `* *` | artist with many ongoing commissioned projects to keep track of | view my current commissioned projects in order of deadline recency | not miss any deadlines |","lastModifiedDate":"2023-02-19"},{"lineNumber":333,"author":{"gitId":"zrei"},"content":"| `*` | artist inexperienced in command line commands | use commands that are closer to natural language | better understand and more effectively use commands |","lastModifiedDate":"2023-02-19"},{"lineNumber":334,"author":{"gitId":"zrei"},"content":"| `* * *` | user | add a deadline to a project | record when a project needs to be done |","lastModifiedDate":"2023-02-19"},{"lineNumber":335,"author":{"gitId":"zrei"},"content":"| `*` | artist working with commissions | import a list of clients from a CSV file | use an editable format |","lastModifiedDate":"2023-02-19"},{"lineNumber":336,"author":{"gitId":"zrei"},"content":"| `* *` | first-time user of the application | view a guide on how to use the app | learn how to use the app |","lastModifiedDate":"2023-02-19"},{"lineNumber":337,"author":{"gitId":"zrei"},"content":"| `*` | artist who wants to increase my earnings | add a large number of commissioned projects at any time | increase my income |","lastModifiedDate":"2023-02-19"},{"lineNumber":338,"author":{"gitId":"zrei"},"content":"| `*` | expert in using the application | setup shortcuts for commands I often use | execute them quickly |","lastModifiedDate":"2023-02-19"},{"lineNumber":339,"author":{"gitId":"zrei"},"content":"| `* *` | artist who does not want to be overwhelmed by too many ongoing commission projects | quickly see how many ongoing projects I have | deliver for my clients |","lastModifiedDate":"2023-02-19"},{"lineNumber":340,"author":{"gitId":"zrei"},"content":"| `* *` | user | tag projects in the list | filter by the tags if necessary |","lastModifiedDate":"2023-02-19"},{"lineNumber":341,"author":{"gitId":"zrei"},"content":"| `* *` | user | see projects by their deadlines | finish work on time |","lastModifiedDate":"2023-02-19"},{"lineNumber":342,"author":{"gitId":"zrei"},"content":"| `*` | inexperienced user | undo commands | remedy mistakes |","lastModifiedDate":"2023-02-19"},{"lineNumber":343,"author":{"gitId":"zrei"},"content":"| `* *` | first-time user of the application | see sample data in the application | understand what the application can do |","lastModifiedDate":"2023-02-19"},{"lineNumber":344,"author":{"gitId":"zrei"},"content":"| `* * *` | artist | add clients to the application | keep track of all of my clients |","lastModifiedDate":"2023-02-19"},{"lineNumber":345,"author":{"gitId":"zrei"},"content":"| `* * *` | user | remove clients from my list | keep the list accurate |","lastModifiedDate":"2023-02-19"},{"lineNumber":346,"author":{"gitId":"zrei"},"content":"| `* *` | user | edit client info | keep client info up to date in case of changes |","lastModifiedDate":"2023-02-19"},{"lineNumber":347,"author":{"gitId":"zrei"},"content":"| `* *` | user | edit project info | keep project info up to date in case of changes |","lastModifiedDate":"2023-02-19"},{"lineNumber":348,"author":{"gitId":"zrei"},"content":"| `* *` | artist who wants to know which of my ongoing projects are most lucrative | quickly sort my ongoing projects based on commission size | prioritize higher commissioned projects |","lastModifiedDate":"2023-02-19"},{"lineNumber":349,"author":{"gitId":"zrei"},"content":"| `* *` | artist | search for clients using keywords | find specific clients quickly |","lastModifiedDate":"2023-02-19"},{"lineNumber":350,"author":{"gitId":"zrei"},"content":"| `* *` | user | ready to start using the application | purge any sample data on the application | start entering my own data onto the application |","lastModifiedDate":"2023-02-19"},{"lineNumber":351,"author":{"gitId":"zrei"},"content":"| `*` | artist | quickly see how many times a specific client has commissioned me for a project before | know if clients are returning |","lastModifiedDate":"2023-02-19"},{"lineNumber":352,"author":{"gitId":"zrei"},"content":"| `* *` | artist | sort clients by the number of times they have commissioned me before | know if a given client and I have a long-standing relationship |","lastModifiedDate":"2023-02-19"},{"lineNumber":353,"author":{"gitId":"zrei"},"content":"| `* * *`| artist | add contact info to clients | know how to reach them if needed |","lastModifiedDate":"2023-02-19"},{"lineNumber":354,"author":{"gitId":"zrei"},"content":"| `*` | artist | blacklist certain clients | know who to avoid |","lastModifiedDate":"2023-02-19"},{"lineNumber":355,"author":{"gitId":"zrei"},"content":"| `* *` | artist | add projects to clients | know what projects are for what clients |","lastModifiedDate":"2023-02-19"},{"lineNumber":356,"author":{"gitId":"zrei"},"content":"| `* *` | artist | get asked if I am sure I want to delete an ongoing project | be prevented from accidentally deleting an ongoing project |","lastModifiedDate":"2023-02-19"},{"lineNumber":357,"author":{"gitId":"zrei"},"content":"| `* * *`| artist | mark a certain project as done | know it is no longer ongoing |","lastModifiedDate":"2023-02-19"},{"lineNumber":358,"author":{"gitId":"zrei"},"content":"| `*` | user | easily generate text to share client information | send it to someone else if required |","lastModifiedDate":"2023-02-19"},{"lineNumber":359,"author":{"gitId":"zrei"},"content":"| `* * *` | user | unmark a project as done | ensure my list is accurate in case I accidentally marked a project as done |","lastModifiedDate":"2023-02-19"},{"lineNumber":360,"author":{"gitId":"zrei"},"content":"| `*` | artist | add dates in different formats without being asked to give it in a certain format | not have to memorize providing dates in a certain format |","lastModifiedDate":"2023-02-19"},{"lineNumber":361,"author":{"gitId":"zrei"},"content":"| `* *`| artist | see all projects due within a specific time period | know what is due at different times and plan my work |","lastModifiedDate":"2023-02-19"},{"lineNumber":362,"author":{"gitId":"zrei"},"content":"| `*` | artist | have the application convert different time zones to my local one and state which country the client is from | add times for clients from various countries and not have to do the conversion myself |","lastModifiedDate":"2023-02-19"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"verydaftpunk"},"content":"**Use case: Use case - Delete Project**","lastModifiedDate":"2023-02-26"},{"lineNumber":394,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":395,"author":{"gitId":"verydaftpunk"},"content":"**MSS**:","lastModifiedDate":"2023-02-26"},{"lineNumber":396,"author":{"gitId":"verydaftpunk"},"content":"1. User enters command for deleting project of certain client. ","lastModifiedDate":"2023-02-26"},{"lineNumber":397,"author":{"gitId":"verydaftpunk"},"content":"2. ArB deletes project for client.","lastModifiedDate":"2023-02-26"},{"lineNumber":398,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":399,"author":{"gitId":"verydaftpunk"},"content":"    Use case ends.","lastModifiedDate":"2023-02-26"},{"lineNumber":400,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":401,"author":{"gitId":"verydaftpunk"},"content":"**Extension**:","lastModifiedDate":"2023-02-26"},{"lineNumber":402,"author":{"gitId":"verydaftpunk"},"content":"1a. User wants to remove a project of a client that is not found in the list. ","lastModifiedDate":"2023-02-26"},{"lineNumber":403,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":404,"author":{"gitId":"verydaftpunk"},"content":"2a1. ARB tells user that the project of the client does not exist.","lastModifiedDate":"2023-02-26"},{"lineNumber":405,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":406,"author":{"gitId":"verydaftpunk"},"content":"Use case ends.","lastModifiedDate":"2023-02-26"},{"lineNumber":407,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":408,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":409,"author":{"gitId":"verydaftpunk"},"content":"**Use case: Use case - Edit Project**","lastModifiedDate":"2023-02-26"},{"lineNumber":410,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":411,"author":{"gitId":"verydaftpunk"},"content":"**MSS**:","lastModifiedDate":"2023-02-26"},{"lineNumber":412,"author":{"gitId":"verydaftpunk"},"content":"1. User enters command to editing project, including project ID and details to edit ","lastModifiedDate":"2023-02-26"},{"lineNumber":413,"author":{"gitId":"verydaftpunk"},"content":"2. ArB edits project to use new details ","lastModifiedDate":"2023-02-26"},{"lineNumber":414,"author":{"gitId":"verydaftpunk"},"content":"3. Use case ends.","lastModifiedDate":"2023-02-26"},{"lineNumber":415,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":416,"author":{"gitId":"verydaftpunk"},"content":"**Extension**:","lastModifiedDate":"2023-02-26"},{"lineNumber":417,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":418,"author":{"gitId":"verydaftpunk"},"content":"1a. ArB detects that the command is inaccurate/incomplete","lastModifiedDate":"2023-02-26"},{"lineNumber":419,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":420,"author":{"gitId":"verydaftpunk"},"content":"1a1. ArB tells user that the command is incorrect and displays the correct format","lastModifiedDate":"2023-02-26"},{"lineNumber":421,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":422,"author":{"gitId":"verydaftpunk"},"content":"Use case ends.","lastModifiedDate":"2023-02-26"},{"lineNumber":423,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":424,"author":{"gitId":"verydaftpunk"},"content":"1b. ArB detects that the project does not exist","lastModifiedDate":"2023-02-26"},{"lineNumber":425,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":426,"author":{"gitId":"verydaftpunk"},"content":"1b1. ArB tells user that the project does not exist","lastModifiedDate":"2023-02-26"},{"lineNumber":427,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":428,"author":{"gitId":"verydaftpunk"},"content":"Use case ends.","lastModifiedDate":"2023-02-26"},{"lineNumber":429,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":431,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"verydaftpunk"},"content":"4. The final product should be a result of evolving/enhancing/morphing the given code base. ","lastModifiedDate":"2023-02-26"},{"lineNumber":437,"author":{"gitId":"verydaftpunk"},"content":"5. The product should be targeting users who can type fast and prefer typing over other means of input. ","lastModifiedDate":"2023-02-26"},{"lineNumber":438,"author":{"gitId":"verydaftpunk"},"content":"6. The product should be for a single user i.e. (not a multi-user product). ","lastModifiedDate":"2023-02-26"},{"lineNumber":439,"author":{"gitId":"verydaftpunk"},"content":"7. The product needs to be developed in a breadth-first incremental manner over the project duration. ","lastModifiedDate":"2023-02-26"},{"lineNumber":440,"author":{"gitId":"verydaftpunk"},"content":"8. The data should be stored locally and should be in a human-editable text file. ","lastModifiedDate":"2023-02-26"},{"lineNumber":441,"author":{"gitId":"verydaftpunk"},"content":"9. Do not use a DBMS to store data. ","lastModifiedDate":"2023-02-26"},{"lineNumber":442,"author":{"gitId":"verydaftpunk"},"content":"10. The software should follow the Object-oriented paradigm primarily ","lastModifiedDate":"2023-02-26"},{"lineNumber":443,"author":{"gitId":"verydaftpunk"},"content":"11. The software should work on the Windows, Linux, and OS-X platforms. ","lastModifiedDate":"2023-02-26"},{"lineNumber":444,"author":{"gitId":"verydaftpunk"},"content":"12. The software should work on a computer that has version 11 of Java ","lastModifiedDate":"2023-02-26"},{"lineNumber":445,"author":{"gitId":"verydaftpunk"},"content":"13. The software should work without requiring an installer. ","lastModifiedDate":"2023-02-26"},{"lineNumber":446,"author":{"gitId":"verydaftpunk"},"content":"14. The software should not depend on your own remote server. ","lastModifiedDate":"2023-02-26"},{"lineNumber":447,"author":{"gitId":"verydaftpunk"},"content":"15. The use of third-party frameworks/libraries/services is allowed but only if they are free, open-source (this doesn\u0027t apply to services), have permissive license terms, do not require any installation by the user of your software and do not violate other constraints. ","lastModifiedDate":"2023-02-26"},{"lineNumber":448,"author":{"gitId":"verydaftpunk"},"content":"16. The GUI should work well (i.e., should not cause any resolution-related inconveniences to the user) for standard screen resolutions 1920x1080 and higher, and for screen scales 100% and 125% ","lastModifiedDate":"2023-02-26"},{"lineNumber":449,"author":{"gitId":"verydaftpunk"},"content":"17. GUI should be usable (i.e., all functions can be used even if the user experience is not optimal) for resolutions 1280x720 and higher, and for screen scales 150%. ","lastModifiedDate":"2023-02-26"},{"lineNumber":450,"author":{"gitId":"verydaftpunk"},"content":"18. Everything needs to be packaged into a single JAR file. ","lastModifiedDate":"2023-02-26"},{"lineNumber":451,"author":{"gitId":"verydaftpunk"},"content":"19. The file sizes of the product should be reasonable and not exceed the limit of 100MB ","lastModifiedDate":"2023-02-26"},{"lineNumber":452,"author":{"gitId":"verydaftpunk"},"content":"20. The DG and UG should be PDF-friendly. Don\u0027t use expandable panels, embedded videos, animated GIFs etc. ","lastModifiedDate":"2023-02-26"},{"lineNumber":453,"author":{"gitId":"verydaftpunk"},"content":"22. The product should be testable","lastModifiedDate":"2023-02-26"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"Johnchiahk"},"content":"* **Clients**: A person who has commissioned the user","lastModifiedDate":"2023-03-02"},{"lineNumber":461,"author":{"gitId":"Johnchiahk"},"content":"* **Project**: A piece of (art)work to be completed","lastModifiedDate":"2023-03-02"},{"lineNumber":462,"author":{"gitId":"Johnchiahk"},"content":"* **Contact info**: Email, Phone Number, Social media","lastModifiedDate":"2023-03-02"},{"lineNumber":463,"author":{"gitId":"Johnchiahk"},"content":"* **Project status**: How close to completion a project is","lastModifiedDate":"2023-03-02"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"verydaftpunk":68,"zrei":46,"Johnchiahk":26,"-":366,"mmaimer33":10}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"Artistic addressbook (ArB) is a **desktop app for artists, meant to help with managing clients and project information**, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ArB can get your contact and project management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"## **Table of Contents**","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"## **Quick start**","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"1. Download the latest `arb.jar` from [here](https://github.com/AY2223S2-CS2103T-T14-1/tp/releases).","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ArB","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar arb.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"   A GUI similar to the below should appear in a few seconds. The app may contain some sample data if being opened for the first time.\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"   * `list-client` : Lists all clients.","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"   * `add-client name/John Doe phone/98765432 email/johnd@example.com` : Adds a client named `John Doe` to the ArB.","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"   * `delete-client 3` : Deletes the 3rd client shown in the current client list.","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"## **Syntax**","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"`[ACTION VERB] [options]`","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"`\u003cRequired argument\u003e [optional argument]`","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"An asterisk `*` after any argument indicates that it can be entered a variable number of times.","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"All commands are case insensitive.","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"## **Prefixes**","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"1. `name/n` -\u003e name: name","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"2. `email/e` -\u003e email: valid email","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"3. `phone/p` -\u003e phone: valid phone","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"4. `deadline/d` -\u003e deadline: valid deadline","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"5. `price/pr` -\u003e price: valid price","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"6. `tag/t` -\u003e tag: valid tag","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"7. `client/c` -\u003e client: keywords to search for clients to link to a project","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"8. `option/o` -\u003e option: option to sort the project list with","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"9. `start/s` -\u003e start: valid start of a timeframe","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"10. `end/e` -\u003e end: valid end of a timeframe","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"11. `status/st` -\u003e status: valid status","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"## **Features**","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"  e.g. in `add-client name/NAME`, `NAME` is a parameter which can be used as `add-client name/John Doe`.","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"  e.g `name/NAME [tag/TAG]` can be used as `name/John Doe tag/friend` or as `name/John Doe`.","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"  e.g. `[tag/TAG]…​` can be used as ` ` (i.e. 0 times), `tag/friend`, `tag/friend tag/family` etc.","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"  e.g. if the command specifies `name/NAME phone/PHONE_NUMBER`, `phone/PHONE_NUMBER name/NAME` is also acceptable.","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"  e.g. if you specify `phone/12341234 phone/56785678`, only `phone/56785678` will be taken.","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"* Extraneous parameters for commands that do not take in parameters (such as [help](#viewing-help-help), [list-client](#list-all-clients-list-client), [list-project](#listing-all-projects--list-project), [list-tag](#listing-all-tags--list-tag), [exit](#exiting-the-program--exit), [clear-client](#clear), [clear-project](#clear) and [sort-client](#sorting-all-clients--sort-client)) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"* Most commands and parameters have shorter aliases that can be used the same way, such as [list-project](#listing-all-projects--list-project) having the alias `lp` and `name/` having the alias `n/`.\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"  e.g. specifying `list-project` is the same as specifying `lp` and specifying `add-project name/John Doe` is the same as specifying `add-project n/John Doe`.","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"## General commands","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"### Viewing help: `help`","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"Exits the program.","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"Format: `exit`","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"### Saving the data","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"ArB\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"### Editing the data file","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"ArB\u0027s data is saved as a JSON file `[JAR file location]/data/arb.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"If your changes to the data file makes its format invalid, ArB will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"## Client commands","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"### Listing all clients: `list-client`","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"#### Alias: `lc`","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"Lists out all clients and shows the client list.","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"Format: `list-client`","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"### Adding a client: `add-client`","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"#### Alias: `ac`","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"Adds a client to the application with the supplied details. The details that can be supplied are the name, email address and phone number of the client, along with any number of tags to be added.","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"Only the name of the client is compulsory. ","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"The email address and phone number must be in a valid format. E.g. `XXX@gmail.com` or ```XXX@yahoo.com``` for emails and `12345678` for phone numbers.","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"Format: `add-client \u003cname/NAME\u003e [email/EMAIL] [phone/PHONE_NUMBER] [tag/TAG]*`","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"Note: each tag to be added needs a separate `tag/TAG` flag.","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"* `add-client name/Bob phone/12345678 email/bob@gmail.com tag/friend tag/default`","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"* `add-client name/Alice`","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"* `add-client name/Clary phone/87654321 email/clary@gmail.com`","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"verydaftpunk"},"content":"### Editing a client : `edit-client`","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"mmaimer33"},"content":"#### Alias: `ec`","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"Edits the client at the given index of the client list, changing only the given field(s). Any fields that are mentioned but left empty will be deleted (apart from the name).","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"mmaimer33"},"content":"Fields that can be changed:","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"mmaimer33"},"content":"* Name","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"mmaimer33"},"content":"* Email address","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"mmaimer33"},"content":"* Phone number","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"mmaimer33"},"content":"* Tags","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"Note: ","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"* Using an empty `tag/` flag removes all tags of the client. This cannot be used with any non-empty `tag/` flags e.g. `edit-client 1 tag/ tag/friend` is not valid.","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"* At least one field to edit must be provided.","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"Format: `edit-client \u003cindex\u003e [name/NAME] [email/EMAIL] [phone/PHONE] [tag/TAG]*`","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"*  `edit-client 1 email/new@email.com` Edits the email address of the 1st client to be `new@email.com`.","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"*  `edit-client 3 name/Alice Risa phone/1234 tag/` Edits the name of the 3rd client to `Alice Risa` and phone number to `1234`. Removes any tags.","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"### Deleting a client : `delete-client`","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"#### Alias: `dc`","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"Deletes the client at the specified index of the client list.","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"Notes:","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"Format: `delete-client \u003cindex\u003e`","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"Example:","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"*  `list-client` followed by `delete-client 1` deletes the first client in the list (if there is one).","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"### Finding a client : `find-client`","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"#### Alias: `fc`","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"Finds a client based on the details provided. Details that can be supplied are the names and tags.","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"Note: ","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"* The matching with supplied names and tags are case-insensitive.","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"Format: `find-client [name/NAME]* [tag/tag]*`","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"* `find-client name/bob tag/friend` will find any client whose name contains the word `bob` and is tagged with `friend`.","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"* `find-client name/bob name/alice tag/friend tag/husband` will find any client whose name contains either `bob` or `alice`, and is tagged with either `friend` or `husband`.","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"### Sorting all clients : `sort-client`","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"#### Alias: `sc`","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"Sorts all clients that exist in the ArB by name in ascending order.","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"Format: `sort-client`","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"## Project commands","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"### Listing all projects : `list-project`","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"#### Alias: `lp`","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"Lists out all projects and shows the project list.","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"Format: `list-project`","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"### Adding a project: `add-project`","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"#### Alias: `ap`","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"Adds a project to the application with the supplied details. The details that can be supplied are the name, deadline, price, tags and linked client of the project.","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"Only the name of the project is compulsory. ","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"Deadlines can either be in natural language, such as `tomorrow` or in recognisable formats like `3pm 2023-03-03`.","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"Prices must be in a recognisable price format, such as `3.08` or `5`.","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"Clients can be linked by entering individual keywords that are part of the clients name. For example, if you wish to link the project to the client with the name `Alice Wheeler`, you can input `alice` or `wheeler`. Further steps to link to a client can be found [here](#linking-a-project-to-a-client).","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"Format: `add-project \u003cname/NAME\u003e [deadline/DEADLINE] [price/PRICE] [tag/TAG]* [client/CLIENT]*`","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"Note: ","lastModifiedDate":"2023-03-29"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"* Each tag to be added needs a separate `tag/TAG` flag.","lastModifiedDate":"2023-03-29"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"* Each client name keyword needs a separate `client/CLIENT` flag.","lastModifiedDate":"2023-03-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"* `add-project name/Background Commission deadline/2023-05-05 price/500 tag/painting client/alice client/wheeler` Adds a project with the name Background Commision, a deadline of 5th May 2023, a price of $500, is tagged painting; and links this project to a client whose name contains any of the keywords `alice` or `wheeler`.","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"* `add-project name/Oil Painting`","lastModifiedDate":"2023-03-29"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"* `ap n/Background Commission d/2023-05-05 pr/500 t/painting c/alice c/wheeler`","lastModifiedDate":"2023-03-29"},{"lineNumber":235,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"### Editing a project : `edit-project`","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"#### Alias: `ep`","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"Edits the project at the given index of the client list, changing only the given field(s). Any fields that are mentioned but left empty will be deleted (apart from the name).","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"Fields that can be changed:","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"* Name","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"* Deadline","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"* Price","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"* Tags","lastModifiedDate":"2023-03-29"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"* Linked client","lastModifiedDate":"2023-03-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"Note:","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"* Using an empty `tag/` flag removes all tags of the project. This cannot be used with any non-empty `tag/` flags e.g. `edit-project 1 tag/ tag/painting` is not valid.","lastModifiedDate":"2023-03-29"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"* At least one field to edit must be provided.","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"The steps to link to a client can be found [here](#linking-a-project-to-a-client).","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"Format: `edit-project \u003cindex\u003e [name/NAME] [deadline/DEADLINE] [price/PRICE] [client/CLIENT]`","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"Example:","lastModifiedDate":"2023-03-29"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"*  `edit-project 2 name/The Starry Night tag/` Edits the name of the 2nd project in the list to be `The Starry Night` and removes all tags.","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"* `edit-project 2 client/alice` Links the 2nd project in the list to a client whose name contains the keyword `alice`.","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"* `ep 2 n/The Starry Night pr/500`","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"### Marking a project as done : `mark`","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"#### Alias: `mp`","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"Marks the project at the specified index as done.","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"zrei"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"zrei"},"content":"Notes:","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"Johnchiahk"},"content":"* The index refers to the index number shown in the displayed list of projects.","lastModifiedDate":"2023-03-02"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"zrei"},"content":"* `list-project` followed by `mark 2` marks the 2nd project in the list of projects as done.","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"zrei"},"content":"### Unmarking a project as done : `unmark`","lastModifiedDate":"2023-03-29"},{"lineNumber":275,"author":{"gitId":"zrei"},"content":"#### Alias: `up`","lastModifiedDate":"2023-03-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":277,"author":{"gitId":"zrei"},"content":"Unmarks the project at the specified index, indicating that it is not done.","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"zrei"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"zrei"},"content":"Notes:","lastModifiedDate":"2023-03-29"},{"lineNumber":282,"author":{"gitId":"Johnchiahk"},"content":"* The index refers to the index number shown in the displayed list of projects.","lastModifiedDate":"2023-03-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-02"},{"lineNumber":286,"author":{"gitId":"zrei"},"content":"* `list-project` followed by `unmark 2` indcates that the 2nd project in the list of projects is not done.","lastModifiedDate":"2023-03-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":288,"author":{"gitId":"zrei"},"content":"### Deleting a project : `delete-project`","lastModifiedDate":"2023-03-29"},{"lineNumber":289,"author":{"gitId":"zrei"},"content":"#### Alias: dp","lastModifiedDate":"2023-03-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":291,"author":{"gitId":"zrei"},"content":"Deletes the project at the specified index of the project list.","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":293,"author":{"gitId":"zrei"},"content":"Notes:","lastModifiedDate":"2023-03-29"},{"lineNumber":294,"author":{"gitId":"zrei"},"content":"* The index refers to the index number shown in the displayed project list.","lastModifiedDate":"2023-03-29"},{"lineNumber":295,"author":{"gitId":"zrei"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":297,"author":{"gitId":"zrei"},"content":"Format: `delete-project \u003cindex\u003e`","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":299,"author":{"gitId":"zrei"},"content":"Example:","lastModifiedDate":"2023-03-29"},{"lineNumber":300,"author":{"gitId":"zrei"},"content":"*  `list-project` followed by `delete-project 1` deletes the first project in the list (if there is one).","lastModifiedDate":"2023-03-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":302,"author":{"gitId":"zrei"},"content":"### Finding a project: `find-project`","lastModifiedDate":"2023-03-29"},{"lineNumber":303,"author":{"gitId":"zrei"},"content":"#### Alias: fp","lastModifiedDate":"2023-03-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":305,"author":{"gitId":"zrei"},"content":"Finds a project based on details provided. Details that can be supplied are the name, the start and end of the timeframe the deadline of the project should fall into, price, tags, the client the project is linked to, and the status of the project.","lastModifiedDate":"2023-03-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":307,"author":{"gitId":"zrei"},"content":"Note: ","lastModifiedDate":"2023-03-29"},{"lineNumber":308,"author":{"gitId":"zrei"},"content":"* The matching with supplied names and tags are case-insensitive.","lastModifiedDate":"2023-03-29"},{"lineNumber":309,"author":{"gitId":"zrei"},"content":"* Status must be specified as either `not done` or `done`.","lastModifiedDate":"2023-03-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":311,"author":{"gitId":"zrei"},"content":"Format: `find-project [name/NAME]* [start/START] [end/END] [price/PRICE] [status/STATUS] [tag/TAG]* [client/CLIENT]*`","lastModifiedDate":"2023-03-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":313,"author":{"gitId":"zrei"},"content":"Examples:","lastModifiedDate":"2023-03-29"},{"lineNumber":314,"author":{"gitId":"zrei"},"content":"* `find-project name/sculpture client/alice tag/personal start/yesterday end/tomorrow price/500 status/done` will find any project whose name contains `sculpture`, is linked to a client whose name contains `alice`, is tagged `personal`, has a price of $500, is done and has a deadline that falls between yesterday and tomorrow.","lastModifiedDate":"2023-03-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":316,"author":{"gitId":"Johnchiahk"},"content":"### Sorting all projects : `sort-project`","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"zrei"},"content":"#### Alias: `sp`","lastModifiedDate":"2023-03-29"},{"lineNumber":318,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"zrei"},"content":"Sorts all projects that exist in the ArB. Projects can be sorted via the given options in ascending order:","lastModifiedDate":"2023-03-29"},{"lineNumber":320,"author":{"gitId":"zrei"},"content":"* Name","lastModifiedDate":"2023-03-29"},{"lineNumber":321,"author":{"gitId":"Johnchiahk"},"content":"* Deadline","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"Johnchiahk"},"content":"* Price","lastModifiedDate":"2023-03-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"zrei"},"content":"Format: `sort-project \u003coption/Option\u003e`","lastModifiedDate":"2023-03-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":326,"author":{"gitId":"zrei"},"content":"Examples: ","lastModifiedDate":"2023-03-29"},{"lineNumber":327,"author":{"gitId":"zrei"},"content":"* `sort-project option/name`","lastModifiedDate":"2023-03-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"zrei"},"content":"### Linking a Project to a Client","lastModifiedDate":"2023-03-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"zrei"},"content":"This is only applicable if the client parameter has been specified when [adding a project](#adding-a-project-add-project) or [editing a project](#editing-a-project--edit-project).","lastModifiedDate":"2023-03-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"zrei"},"content":"ArB will display a list of clients that match the provided keywords. Entering an index specifies the client in the list to link to a project.","lastModifiedDate":"2023-03-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"zrei"},"content":"Examples:","lastModifiedDate":"2023-03-29"},{"lineNumber":336,"author":{"gitId":"zrei"},"content":"* `1` links the 1st client in the shown list of clients","lastModifiedDate":"2023-03-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":338,"author":{"gitId":"zrei"},"content":"## Tag commands","lastModifiedDate":"2023-03-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":340,"author":{"gitId":"zrei"},"content":"### Listing all tags : `list-tag`","lastModifiedDate":"2023-03-29"},{"lineNumber":341,"author":{"gitId":"zrei"},"content":"#### Alias: `lt`","lastModifiedDate":"2023-03-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":343,"author":{"gitId":"zrei"},"content":"Lists all tags that exist in the ArB. These include tags added to both clients and projects. The list shows how many clients and how many projects a particular tag is used with.","lastModifiedDate":"2023-03-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"zrei"},"content":"Format: `list-tag`","lastModifiedDate":"2023-03-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"Johnchiahk"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous artistic addressbook home folder.","lastModifiedDate":"2023-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"mmaimer33"},"content":"| Action             | Format, Examples                                                                                                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":359,"author":{"gitId":"Johnchiahk"},"content":"|--------------------|-------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":360,"author":{"gitId":"zrei"},"content":"| **List Clients**    | `list-client` |","lastModifiedDate":"2023-03-29"},{"lineNumber":361,"author":{"gitId":"zrei"},"content":"| **Add a Client**     | `add-client \u003cname/NAME\u003e [email/EMAIL] [phone/PHONE_NUMBER] [tag/TAG]*​` \u003cbr\u003e e.g., `add-client name/Bob phone/12345678 email/bob@gmail.com tag/friend` |","lastModifiedDate":"2023-03-29"},{"lineNumber":362,"author":{"gitId":"zrei"},"content":"| **Edit a Client**    | `edit-client \u003cindex\u003e [name/NAME] [email/EMAIL] [phone/PHONE] [tag/TAG]*​` \u003cbr\u003e e.g.,`edit-client 3 name/Alice Risa phone/1234 tag/classmate` |","lastModifiedDate":"2023-03-29"},{"lineNumber":363,"author":{"gitId":"zrei"},"content":"| **Delete a Client**  | `delete-client \u003cindex\u003e`\u003cbr\u003e e.g., `delete-client 1`|","lastModifiedDate":"2023-03-29"},{"lineNumber":364,"author":{"gitId":"zrei"},"content":"| **Finding a Client** | `find-client [name/NAME]* [tag/TAG]*` \u003cbr\u003e e.g., `find-client name/bob name/alice tag/friend` |","lastModifiedDate":"2023-03-29"},{"lineNumber":365,"author":{"gitId":"zrei"},"content":"| **Sorting all Clients** | `sort-client` |","lastModifiedDate":"2023-03-29"},{"lineNumber":366,"author":{"gitId":"zrei"},"content":"| **List Projects**   | `list-project` |","lastModifiedDate":"2023-03-29"},{"lineNumber":367,"author":{"gitId":"zrei"},"content":"| **Add a Project**    | `add-project \u003cname/NAME\u003e [deadline/DEADLINE] [price/PRICE] [tag/TAG]*` \u003cbr\u003e e.g., `add-project name/Background Commission deadline/2023-05-05 price/400 tag/painting` |","lastModifiedDate":"2023-03-29"},{"lineNumber":368,"author":{"gitId":"zrei"},"content":"| **Edit a Project**   | `edit-project \u003cindex\u003e [name/NAME] [deadline/DEADLINE] [price/PRICE] [tag/TAG]*` \u003cbr\u003e e.g., `edit-project 2 name/The Starry Night` |","lastModifiedDate":"2023-03-29"},{"lineNumber":369,"author":{"gitId":"zrei"},"content":"| **Mark a Project**   | `mark \u003cindex\u003e` \u003cbr\u003e e.g., `mark 3` |","lastModifiedDate":"2023-03-29"},{"lineNumber":370,"author":{"gitId":"zrei"},"content":"| **Unmark a Project** | `unmark \u003cindex\u003e` \u003cbr\u003e e.g., `unmark 3` |","lastModifiedDate":"2023-03-29"},{"lineNumber":371,"author":{"gitId":"zrei"},"content":"| **Delete a Project** | `delete-project \u003cindex\u003e`\u003cbr\u003e e.g., `delete-project 1` |","lastModifiedDate":"2023-03-29"},{"lineNumber":372,"author":{"gitId":"zrei"},"content":"| **Finding a Project** | `find-project [name/NAME]* [start/START] [end/END] [tag/TAG]* [status/STATUS]` \u003cbr\u003e e.g., `find-project name/sky start/yesterday tag/painting` |","lastModifiedDate":"2023-03-29"},{"lineNumber":373,"author":{"gitId":"zrei"},"content":"| **Sorting all Project**   | `sort-project option/Option` \u003cbr\u003e e.g., `sort-project option/name` |","lastModifiedDate":"2023-03-29"},{"lineNumber":374,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"verydaftpunk":19,"zrei":191,"Johnchiahk":13,"-":133,"mmaimer33":18}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Johnchiahk"},"content":"    content: \"Artistic Addressbook\";","lastModifiedDate":"2023-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Johnchiahk":1,"-":294}},{"path":"docs/team/johnchiahk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"title: John Chia\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"### Project: Artistic AddressBook","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"`to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Johnchiahk":31}},{"path":"docs/team/mmaimer33.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"layout: page","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"title: Rishi Chousalkar\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"### Project: Artistic Addressbook","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"to be added soon (tbas)","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"* **New Feature**: tbas","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"* **Project management**:","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    tbas","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    tbas","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    tbas","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"* **Community**:","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"    tbas","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"* **Tools**:","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    tbas","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"mmaimer33":29}},{"path":"docs/team/verydaftpunk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"layout: page","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"title: Warren Yang\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"### Project: Artistic AddressBook","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"`to be added soon`","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"* **Project management**:","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"        * `to be added soon`","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"* **Community**:","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"* **Tools**:","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"verydaftpunk":31}},{"path":"docs/team/zrei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"title: Lim Zhe Rui\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"### Project: Artistic AddressBook","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"`to be added soon`","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"* **Tools**:","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"zrei":31}},{"path":"src/main/java/arb/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.commons.util.FileUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"zrei":3,"-":61}},{"path":"src/main/java/arb/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"zrei":1,"-":24}},{"path":"src/main/java/arb/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Config;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Version;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.commons.util.ConfigUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.commons.util.StringUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.Logic;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.logic.LogicManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.storage.AddressBookStorage;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import arb.storage.StorageManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import arb.storage.UserPrefsStorage;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import arb.ui.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import arb.ui.UiManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":25,"-":158}},{"path":"src/main/java/arb/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":1,"-":62}},{"path":"src/main/java/arb/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":1,"-":78}},{"path":"src/main/java/arb/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":1,"-":111}},{"path":"src/main/java/arb/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public static final String MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX \u003d \"The project index provided is invalid\";","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_PROJECTS_LISTED_OVERVIEW \u003d \"%1$d projects listed!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    public static final String MESSAGE_INVALID_LIST_PROJECT \u003d \"The project list is currently not being shown! \"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"            + \"You can switch to the project list with the command \u0027list-project\u0027\";","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    public static final String MESSAGE_INVALID_LIST_CLIENT \u003d \"The client list is currently not being shown! \"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"            + \"You can switch to the client list with the command \u0027list-client\u0027\";","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"The edited client at the index provided is the same as\"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"            + \" an existing client!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECT \u003d \"The edited project at the index provided is the same as\"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"            + \" an existing project!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"verydaftpunk":11,"zrei":4,"Johnchiahk":2,"-":9}},{"path":"src/main/java/arb/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":1,"-":115}},{"path":"src/main/java/arb/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core.index;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"zrei":1,"-":53}},{"path":"src/main/java/arb/commons/core/predicate/CombinedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core.predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"/** A predicate that tests an Object of type T against all given predicates. */","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"public class CombinedPredicate\u003cT\u003e implements Predicate\u003cT\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    private final Set\u003cPredicate\u003cT\u003e\u003e predicates;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    public CombinedPredicate(List\u003cPredicate\u003cT\u003e\u003e predicates) {","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"        this.predicates \u003d predicates.stream().collect(Collectors.toSet());","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public boolean test(T toTest) {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        return predicates.stream().allMatch(pre -\u003e pre.test(toTest));","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"                || (other instanceof CombinedPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 predicates.equals(((CombinedPredicate\u003c?\u003e) other).predicates)); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zrei":27}},{"path":"src/main/java/arb/commons/core/sorting/ProjectSortingOption.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core.sorting;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_DEADLINE_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import static arb.model.Model.PROJECT_PRICE_COMPARATOR;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_TITLE_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.EnumSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"/** Represents a sorting option to sort the project list by. */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"public enum ProjectSortingOption {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    DEADLINE(\"deadline\", \"d\", \"Sorted all projects by deadline!\", PROJECT_DEADLINE_COMPARATOR),","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    NAME(\"name\", \"n\", \"Sorted all projects by name!\", PROJECT_TITLE_COMPARATOR),","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"    PRICE(\"price\", \"pr\", \"Sorted all projects by price!\", PROJECT_PRICE_COMPARATOR);","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"            \"Sorting options should be either \\\u0027deadline\\\u0027 or \\\u0027name\\\u0027 or \\\u0027price\\\u0027\";","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    private static final EnumSet\u003cProjectSortingOption\u003e sortingOptions \u003d EnumSet.allOf(ProjectSortingOption.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private final Set\u003cString\u003e optionStrings;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private final String successMessage;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private final Comparator\u003cProject\u003e comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"     * ProjectSortingOption can only be created by calling {@link ProjectSortingOption#getSortingOption(String)}.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    private ProjectSortingOption(String optionString, String aliasOptionString, String successMessage,","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"            Comparator\u003cProject\u003e comparator) {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        this.optionStrings \u003d new HashSet\u003c\u003e(Arrays.asList(optionString, aliasOptionString));","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        this.successMessage \u003d successMessage;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    private boolean isOptionString(String optionString) {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        return this.optionStrings.contains(optionString);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"     * Returns if a given string is a valid project sorting option.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    public static boolean isValidSortingOption(String optionString) {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        return sortingOptions.stream().anyMatch(e -\u003e e.isOptionString(optionString));","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"     * Creates a new {@code {ProjectSortingOption}} using the given option string.","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    public static ProjectSortingOption getSortingOption(String optionString) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        Iterator\u003cProjectSortingOption\u003e iterator \u003d sortingOptions.iterator();","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"            ProjectSortingOption currentSortingOption \u003d iterator.next();","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"            if (currentSortingOption.isOptionString(optionString)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"                return currentSortingOption;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        throw new IllegalArgumentException();","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    public String getSuccessMessage() {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        return this.successMessage;","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"    public Comparator\u003cProject\u003e getComparator() {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        return this.comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":69,"Johnchiahk":4}},{"path":"src/main/java/arb/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":1,"-":10}},{"path":"src/main/java/arb/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":1,"-":20}},{"path":"src/main/java/arb/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.MainApp;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zrei":2,"-":40}},{"path":"src/main/java/arb/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":1,"-":34}},{"path":"src/main/java/arb/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Config;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zrei":3,"-":20}},{"path":"src/main/java/arb/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":1,"-":82}},{"path":"src/main/java/arb/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":3,"-":140}},{"path":"src/main/java/arb/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":2,"-":66}},{"path":"src/main/java/arb/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"     * Sets the variable that keeps track of which list is currently being shown","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"     * to the user.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     * @param newListType The new type of list.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    void setListType(ListType newListType);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"     * Sets the variable that keeps track of whether we are currently linking","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"     * a project to a client.","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"     * @param isInLinkMode Whether we are currently linking a project to a client.","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    void setLinkMode(boolean isInLinkMode);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"     * @see arb.model.Model#getAddressBook()","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    /** Returns an unmodifiable view of the sorted list of clients */","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cClient\u003e getSortedClientList();","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    /** Returns an unmodifiable view of the sorted list of projects */","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cProject\u003e getSortedProjectList();","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    /** Returns an unmodifiable view of the list of tag mappings */","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cTagMapping\u003e getTagMappingList();","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zrei":34,"-":39}},{"path":"src/main/java/arb/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.AddressBookParser;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.project.LinkProjectToClientCommandParser;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    private final LinkProjectToClientCommandParser linkToClientParser;","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    private ListType currentListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    private boolean isInLinkMode;","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        linkToClientParser \u003d new LinkProjectToClientCommandParser();","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        isInLinkMode \u003d false;","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        Command command;","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        if (isInLinkMode) {","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"            command \u003d linkToClientParser.parse(commandText);","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"            command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        commandResult \u003d command.execute(model, currentListType);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    public void setListType(ListType newListType) {","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        this.currentListType \u003d newListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    public void setLinkMode(boolean isInLinkMode) {","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        this.isInLinkMode \u003d isInLinkMode;","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cClient\u003e getSortedClientList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        return model.getSortedClientList();","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cProject\u003e getSortedProjectList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        return model.getSortedProjectList();","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cTagMapping\u003e getTagMappingList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"        return model.getTagMappingList();","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zrei":48,"-":67}},{"path":"src/main/java/arb/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"     * @param currentListBeingShown {@code ListType} that is currently being shown to the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    public abstract CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":7,"-":15}},{"path":"src/main/java/arb/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    /** The application should enter link mode. */","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    private final boolean enterLinkMode;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    /** What type of list should be shown to the user. */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private final ListType listToBeShown;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean enterLinkMode,","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"            ListType listToBeShown) {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        this.listToBeShown \u003d listToBeShown;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        this.enterLinkMode \u003d enterLinkMode;","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"     * {@code listToBeShown}, with all other fields set to their default value.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    public CommandResult(String feedbackToUser, ListType listToBeShown) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        this(feedbackToUser, false, false, false, listToBeShown);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"     * {@code listToBeShown} and {@code enterLinkMode}, with all other fields set to their default value.","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    public CommandResult(String feedbackToUser, boolean enterLinkMode, ListType listToBeShown) {","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        this(feedbackToUser, false, false, enterLinkMode, listToBeShown);","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    public boolean shouldEnterLinkMode() {","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        return enterLinkMode;","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    public ListType getListToBeShown() {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        return listToBeShown;","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 enterLinkMode \u003d\u003d otherCommandResult.enterLinkMode","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 listToBeShown \u003d\u003d otherCommandResult.listToBeShown;","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, enterLinkMode, listToBeShown);","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":37,"-":63}},{"path":"src/main/java/arb/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, ListType.NONE);","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"zrei":22,"-":12}},{"path":"src/main/java/arb/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, ListType.NONE);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":25,"-":12}},{"path":"src/main/java/arb/logic/commands/client/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":" * Adds a client to the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book\";","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"add-client\";","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"ac\";","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD + \": Adds a client to the address book. \"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    private final Client toAdd;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"     * Creates an AddClientCommand to add the specified {@code Client}","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    public AddClientCommand(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        toAdd \u003d client;","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        model.addClient(toAdd);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), ListType.CLIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"                || (other instanceof AddClientCommand // instanceof handles nulls","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 toAdd.equals(((AddClientCommand) other).toAdd));","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":50,"-":35}},{"path":"src/main/java/arb/logic/commands/client/ClearClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" * Clears the client list of the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"public class ClearClientCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Client list has been cleared!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"clear-client\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"cc\";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        if (currentListBeingShown !\u003d ListType.CLIENT) {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LIST_CLIENT);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        model.resetClientList();","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        return new CommandResult(MESSAGE_SUCCESS, ListType.CLIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":37,"-":12}},{"path":"src/main/java/arb/logic/commands/client/DeleteClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":" * Deletes a client identified using its displayed index from the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"public class DeleteClientCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"delete-client\";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"dc\";","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"     * Creates a DeleteClientCommand to delete the specified {@code Client}","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    public DeleteClientCommand(Index targetIndex) {","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getSortedClientList();","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        if (currentListBeingShown !\u003d ListType.CLIENT) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LIST_CLIENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        Client clientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        model.deleteClient(clientToDelete);","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete), ListType.CLIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"                || (other instanceof DeleteClientCommand // instanceof handles nulls","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteClientCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":46,"-":29,"mmaimer33":4}},{"path":"src/main/java/arb/logic/commands/client/EditClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.CLIENT_NO_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.commons.util.CollectionUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":" * Edits the details of an existing client in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"public class EditClientCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book.\";","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"edit-client\";","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"ec\";","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    private final EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"     * @param index of the client in the filtered client list to edit","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"     * @param editClientDescriptor details to edit the client with","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"    public EditClientCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        this.editClientDescriptor \u003d new EditClientDescriptor(editClientDescriptor);","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getSortedClientList();","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"        if (currentListBeingShown !\u003d ListType.CLIENT) {","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LIST_CLIENT);","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"verydaftpunk"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        model.updateSortedClientList(CLIENT_NO_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient), ListType.CLIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    private static Client createEditedClient(Client clientToEdit, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"verydaftpunk"},"content":"        Optional\u003cOptional\u003cPhone\u003e\u003e optionalUpdatedPhone \u003d editClientDescriptor.getPhone();","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"verydaftpunk"},"content":"        Phone updatedPhone \u003d clientToEdit.getPhone();","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"verydaftpunk"},"content":"        if (optionalUpdatedPhone.isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"verydaftpunk"},"content":"            updatedPhone \u003d optionalUpdatedPhone.get().orElse(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"verydaftpunk"},"content":"        Optional\u003cOptional\u003cEmail\u003e\u003e optionalUpdatedEmail \u003d editClientDescriptor.getEmail();","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"verydaftpunk"},"content":"        Email updatedEmail \u003d clientToEdit.getEmail();","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"verydaftpunk"},"content":"        if (optionalUpdatedEmail.isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"verydaftpunk"},"content":"            updatedEmail \u003d optionalUpdatedEmail.get().orElse(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"verydaftpunk"},"content":"        Set\u003cTag\u003e updatedTags \u003d editClientDescriptor.getTags().orElse(clientToEdit.getTags());","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedTags);","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"        if (!(other instanceof EditClientCommand)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"        EditClientCommand e \u003d (EditClientCommand) other;","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 editClientDescriptor.equals(e.editClientDescriptor);","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        private Optional\u003cPhone\u003e phone;","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"        private Optional\u003cEmail\u003e email;","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"        public EditClientDescriptor() {}","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"verydaftpunk"},"content":"            this.phone \u003d toCopy.phone;","lastModifiedDate":"2023-03-25"},{"lineNumber":170,"author":{"gitId":"verydaftpunk"},"content":"            this.email \u003d toCopy.email;","lastModifiedDate":"2023-03-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"verydaftpunk"},"content":"            this.phone \u003d Optional.ofNullable(phone);","lastModifiedDate":"2023-03-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"verydaftpunk"},"content":"        public Optional\u003cOptional\u003cPhone\u003e\u003e getPhone() {","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"verydaftpunk"},"content":"            return Optional.ofNullable(this.phone);","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"verydaftpunk"},"content":"            this.email \u003d Optional.ofNullable(email);","lastModifiedDate":"2023-03-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"verydaftpunk"},"content":"        public Optional\u003cOptional\u003cEmail\u003e\u003e getEmail() {","lastModifiedDate":"2023-03-25"},{"lineNumber":202,"author":{"gitId":"verydaftpunk"},"content":"            return Optional.ofNullable(this.email);","lastModifiedDate":"2023-03-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"            EditClientDescriptor e \u003d (EditClientDescriptor) other;","lastModifiedDate":"2023-02-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"verydaftpunk":24,"zrei":81,"-":138}},{"path":"src/main/java/arb/logic/commands/client/FindClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" * Finds and lists all clients in address book whose name contains any of the argument keywords given","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":" * and contains any of the tags given. Keyword matching is case insensitive.","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"public class FindClientCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"find-client\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"fc\";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"            + \"the specified keywords (case-insensitive) and contains any of the given tags (case-insensitive) \"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"            + \"Parameters: name/NAME tag/TAG [MORE KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" name/alice name/bob name/charlie tag/friend\";","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    private final Predicate\u003cClient\u003e predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public FindClientCommand(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getFilteredClientList().size()),","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"                ListType.CLIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"                || (other instanceof FindClientCommand // instanceof handles nulls","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 predicate.equals(((FindClientCommand) other).predicate)); // state check","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"zrei":42,"-":23}},{"path":"src/main/java/arb/logic/commands/client/ListClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.CLIENT_NO_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" * Lists all clients in the address book to the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"public class ListClientCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"list-client\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"lc\";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        model.updateSortedClientList(CLIENT_NO_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        return new CommandResult(MESSAGE_SUCCESS, ListType.CLIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":34,"-":11}},{"path":"src/main/java/arb/logic/commands/client/SortClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.CLIENT_NAME_COMPARATOR;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" * Sorts all clients in the address book by name.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"public class SortClientCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all clients by name!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"sort-client\";","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"sc\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        model.updateSortedClientList(CLIENT_NAME_COMPARATOR);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        return new CommandResult(MESSAGE_SUCCESS, ListType.CLIENT);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zrei":43}},{"path":"src/main/java/arb/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"zrei":1,"-":16}},{"path":"src/main/java/arb/logic/commands/project/AddProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_CLIENT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":" * Adds a project to the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"public class AddProjectCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New project added: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECT \u003d \"This project already exists in the address book\";","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_CANNOT_FIND_CLIENT \u003d \"Cannot find this client: %1$s\";","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"add-project\";","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"ap\";","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD + \": Adds a project to the address book. \"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"            + PREFIX_DEADLINE + \"DEADLINE \"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"            + PREFIX_PRICE + \"PRICE \"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"            + PREFIX_CLIENT + \"CLIENT\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"            + PREFIX_NAME + \"Oil Painting \"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"            + PREFIX_DEADLINE + \"2023-04-05 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"            + PREFIX_PRICE + \"2.07\"","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"            + PREFIX_CLIENT + \"Alice\";","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    private final Project toAdd;","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    private final Optional\u003cString\u003e clientToBeLinked;","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"     * Creates an AddProjectCommand to add the specified {@code Project}","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    public AddProjectCommand(Project project, Optional\u003cString\u003e clientToBeLinked) {","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        toAdd \u003d project;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        this.clientToBeLinked \u003d clientToBeLinked;","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        if (model.hasProject(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        String message \u003d String.format(MESSAGE_SUCCESS, toAdd);","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        ListType toBeShown \u003d ListType.PROJECT;","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        if (clientToBeLinked.isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"            model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(clientToBeLinked.get())));","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"            if (model.getFilteredClientList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"                throw new CommandException(String.format(MESSAGE_CANNOT_FIND_CLIENT, clientToBeLinked.get()));","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"            model.setProjectToLink(toAdd);","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        model.addProject(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        if (clientToBeLinked.isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"            model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(clientToBeLinked.get())));","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"            message \u003d LinkProjectToClientCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"            toBeShown \u003d ListType.CLIENT;","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        return new CommandResult(message, clientToBeLinked.isPresent(), toBeShown);","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"                || (other instanceof AddProjectCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 toAdd.equals(((AddProjectCommand) other).toAdd)","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 clientToBeLinked.equals(((AddProjectCommand) other).clientToBeLinked));","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zrei":100,"Johnchiahk":5}},{"path":"src/main/java/arb/logic/commands/project/ClearProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" * Clears the project list of the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"public class ClearProjectCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Project list has been cleared!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"clear-project\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"cp\";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        if (currentListBeingShown !\u003d ListType.PROJECT) {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LIST_PROJECT);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        model.resetProjectList();","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        return new CommandResult(MESSAGE_SUCCESS, ListType.PROJECT);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"zrei":50}},{"path":"src/main/java/arb/logic/commands/project/DeleteProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":" * Deletes a project identified using its displayed index from the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"public class DeleteProjectCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_DELETE_PROJECT_SUCCESS \u003d \"Deleted Project: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"delete-project\";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"dp\";","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"            + \": Deletes the project identified by the index number used in the displayed list.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"            + \"Parameters: INDEX(must be a positive integer)\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"     * Creates a DeleteProjectCommand to delete the specified {@code Project}","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"    public DeleteProjectCommand(Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getSortedProjectList();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"        if (currentListBeingShown !\u003d ListType.PROJECT) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LIST_PROJECT);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"        Project projectToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"        model.deleteProject(projectToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PROJECT_SUCCESS, projectToDelete), ListType.PROJECT);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"        return other \u003d\u003d this // short-circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"                || (other instanceof DeleteProjectCommand // handles null","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"mmaimer33"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteProjectCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":21,"mmaimer33":57}},{"path":"src/main/java/arb/logic/commands/project/EditProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import static arb.model.Model.PREDICATE_SHOW_ALL_PROJECTS;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_NO_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"import arb.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":" * Edits the details of an existing project in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"public class EditProjectCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_EDIT_PROJECT_SUCCESS \u003d \"Edited Project: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECT \u003d \"This project already exists in the address book.\";","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_CANNOT_FIND_CLIENT \u003d \"Cannot find client %1$s\";","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"edit-project\";","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"ep\";","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD + \": Edits the details of the project identified \"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"            + \"by the index number used in the displayed project list. \"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"            + \"[\" + PREFIX_NAME + \"TITLE] \"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE] \"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"            + \"[\" + PREFIX_PRICE + \"PRICE] \"","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"            + PREFIX_NAME + \"Sunset painting \"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"            + PREFIX_DEADLINE + \"2023-07-05 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"            + PREFIX_PRICE + \"2.07\";","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    public final Index index;","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    public final EditProjectDescriptor editProjectDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"     * @param index of the project in the filtered project list to edit","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"     * @param editProjectDescriptor details to edit the project with","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"    public EditProjectCommand(Index index, EditProjectDescriptor editProjectDescriptor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"        requireNonNull(editProjectDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"        this.editProjectDescriptor \u003d new EditProjectDescriptor(editProjectDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"verydaftpunk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getSortedProjectList();","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"        if (currentListBeingShown !\u003d ListType.PROJECT) {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"verydaftpunk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LIST_PROJECT);","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"verydaftpunk"},"content":"        Project projectToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"verydaftpunk"},"content":"        Project editedProject \u003d createEditedProject(projectToEdit, editProjectDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"        if (!projectToEdit.isSameProject(editedProject) \u0026\u0026 model.hasProject(editedProject)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"verydaftpunk"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        Optional\u003cOptional\u003cString\u003e\u003e optionalUpdatedClient \u003d editProjectDescriptor.getClient();","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"        String updatedClientName \u003d projectToEdit.getClientName();","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        if (optionalUpdatedClient.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"            updatedClientName \u003d optionalUpdatedClient.get().orElse(null);","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        if (updatedClientName \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"            model.unlinkClientFromProject(projectToEdit);","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"            model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"                    .asList(updatedClientName)));","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"            if (model.getFilteredClientList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"                throw new CommandException(String.format(MESSAGE_CANNOT_FIND_CLIENT,","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"                        updatedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"            model.setProjectToLink(editedProject);","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"verydaftpunk"},"content":"        model.setProject(projectToEdit, editedProject);","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        String message \u003d String.format(MESSAGE_EDIT_PROJECT_SUCCESS, editedProject);","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        ListType toBeShown \u003d ListType.PROJECT;","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        if (updatedClientName !\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"            model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"                    .asList(updatedClientName)));","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"            message \u003d LinkProjectToClientCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"            toBeShown \u003d ListType.CLIENT;","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"verydaftpunk"},"content":"            model.updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"            model.updateSortedProjectList(PROJECT_NO_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        return new CommandResult(message, updatedClientName !\u003d null, toBeShown);","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"verydaftpunk"},"content":"     * Creates and returns a {@code Project} with the details of {@code projectToEdit}","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"verydaftpunk"},"content":"     * edited with {@code editProjectDescriptor}.","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"verydaftpunk"},"content":"    private static Project createEditedProject(Project projectToEdit,","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"verydaftpunk"},"content":"                                               EditProjectDescriptor editProjectDescriptor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"verydaftpunk"},"content":"        assert projectToEdit !\u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"verydaftpunk"},"content":"        Title updatedTitle \u003d editProjectDescriptor.getTitle().orElse(projectToEdit.getTitle());","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"verydaftpunk"},"content":"        Optional\u003cOptional\u003cDeadline\u003e\u003e optionalUpdatedDeadline \u003d editProjectDescriptor.getDeadline();","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"verydaftpunk"},"content":"        Deadline updatedDeadline \u003d projectToEdit.getDeadline();","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"verydaftpunk"},"content":"        if (optionalUpdatedDeadline.isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"verydaftpunk"},"content":"            updatedDeadline \u003d optionalUpdatedDeadline.get().orElse(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"verydaftpunk"},"content":"        Optional\u003cOptional\u003cPrice\u003e\u003e optionalUpdatedPrice \u003d editProjectDescriptor.getPrice();","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"verydaftpunk"},"content":"        Price updatedPrice \u003d projectToEdit.getPrice();","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"verydaftpunk"},"content":"        if (optionalUpdatedPrice.isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"verydaftpunk"},"content":"            updatedPrice \u003d optionalUpdatedPrice.get().orElse(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        Set\u003cTag\u003e updatedTags \u003d editProjectDescriptor.getTags().orElse(projectToEdit.getTags());","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        return new Project(updatedTitle, updatedDeadline, updatedPrice, updatedTags);","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"verydaftpunk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"verydaftpunk"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"verydaftpunk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"verydaftpunk"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"verydaftpunk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"verydaftpunk"},"content":"        if (!(other instanceof EditProjectCommand)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"verydaftpunk"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"verydaftpunk"},"content":"        // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"verydaftpunk"},"content":"        EditProjectCommand e \u003d (EditProjectCommand) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"verydaftpunk"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"verydaftpunk"},"content":"                \u0026\u0026 editProjectDescriptor.equals(e.editProjectDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"verydaftpunk"},"content":"     * Stores the details to edit the project with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"verydaftpunk"},"content":"     * corresponding field value of the project.","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"verydaftpunk"},"content":"    public static class EditProjectDescriptor {","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"verydaftpunk"},"content":"        private Title title;","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"        private Optional\u003cDeadline\u003e deadline;","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"        private Optional\u003cPrice\u003e price;","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"        private Optional\u003cString\u003e clientName;","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"verydaftpunk"},"content":"        public EditProjectDescriptor() {}","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"verydaftpunk"},"content":"        /**","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"verydaftpunk"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"verydaftpunk"},"content":"         */","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"verydaftpunk"},"content":"        public EditProjectDescriptor(EditProjectDescriptor toCopy) {","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"verydaftpunk"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"verydaftpunk"},"content":"            this.deadline \u003d toCopy.deadline;","lastModifiedDate":"2023-03-25"},{"lineNumber":204,"author":{"gitId":"verydaftpunk"},"content":"            this.price \u003d toCopy.price;","lastModifiedDate":"2023-03-25"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"            this.clientName \u003d toCopy.clientName;","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-03-20"},{"lineNumber":207,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"verydaftpunk"},"content":"        /**","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"verydaftpunk"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"verydaftpunk"},"content":"         */","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"verydaftpunk"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"            return CollectionUtil.isAnyNonNull(title, deadline, price, tags, clientName);","lastModifiedDate":"2023-03-26"},{"lineNumber":214,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"verydaftpunk"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"verydaftpunk"},"content":"            this.title \u003d title;","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":219,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"verydaftpunk"},"content":"        public void setDeadline(Deadline deadline) {","lastModifiedDate":"2023-03-12"},{"lineNumber":221,"author":{"gitId":"verydaftpunk"},"content":"            this.deadline \u003d Optional.ofNullable(deadline);","lastModifiedDate":"2023-03-25"},{"lineNumber":222,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":223,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":224,"author":{"gitId":"Johnchiahk"},"content":"        public void setPrice(Price price) {","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"verydaftpunk"},"content":"            this.price \u003d Optional.ofNullable(price);","lastModifiedDate":"2023-03-25"},{"lineNumber":226,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        public void setClient(String clientName) {","lastModifiedDate":"2023-03-26"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"            this.clientName \u003d Optional.ofNullable(clientName).filter(c -\u003e !c.isBlank());","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":232,"author":{"gitId":"verydaftpunk"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2023-03-12"},{"lineNumber":233,"author":{"gitId":"verydaftpunk"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2023-03-12"},{"lineNumber":234,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":235,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":236,"author":{"gitId":"verydaftpunk"},"content":"        public Optional\u003cOptional\u003cDeadline\u003e\u003e getDeadline() {","lastModifiedDate":"2023-03-25"},{"lineNumber":237,"author":{"gitId":"verydaftpunk"},"content":"            return Optional.ofNullable(this.deadline);","lastModifiedDate":"2023-03-25"},{"lineNumber":238,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":239,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":240,"author":{"gitId":"verydaftpunk"},"content":"        public Optional\u003cOptional\u003cPrice\u003e\u003e getPrice() {","lastModifiedDate":"2023-03-25"},{"lineNumber":241,"author":{"gitId":"Johnchiahk"},"content":"            return Optional.ofNullable(price);","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"        public Optional\u003cOptional\u003cString\u003e\u003e getClient() {","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"            return Optional.ofNullable(clientName);","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"        /**","lastModifiedDate":"2023-03-20"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-20"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-20"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"         */","lastModifiedDate":"2023-03-20"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-20"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-20"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"        /**","lastModifiedDate":"2023-03-20"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-20"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-20"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-20"},{"lineNumber":260,"author":{"gitId":"zrei"},"content":"         */","lastModifiedDate":"2023-03-20"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-03-20"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-03-20"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":264,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":265,"author":{"gitId":"verydaftpunk"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":266,"author":{"gitId":"verydaftpunk"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":267,"author":{"gitId":"verydaftpunk"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":268,"author":{"gitId":"verydaftpunk"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":269,"author":{"gitId":"verydaftpunk"},"content":"                return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":270,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":271,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":272,"author":{"gitId":"verydaftpunk"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":273,"author":{"gitId":"verydaftpunk"},"content":"            if (!(other instanceof EditProjectDescriptor)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":274,"author":{"gitId":"verydaftpunk"},"content":"                return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":275,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":276,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":277,"author":{"gitId":"verydaftpunk"},"content":"            // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":278,"author":{"gitId":"verydaftpunk"},"content":"            EditProjectDescriptor e \u003d (EditProjectDescriptor) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":279,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":280,"author":{"gitId":"verydaftpunk"},"content":"            return getTitle().equals(e.getTitle())","lastModifiedDate":"2023-03-12"},{"lineNumber":281,"author":{"gitId":"zrei"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2023-03-20"},{"lineNumber":282,"author":{"gitId":"zrei"},"content":"                    \u0026\u0026 getPrice().equals(e.getPrice())","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"zrei"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2023-03-26"},{"lineNumber":284,"author":{"gitId":"zrei"},"content":"                    \u0026\u0026 getClient().equals(e.getClient());","lastModifiedDate":"2023-03-26"},{"lineNumber":285,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":286,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":287,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"verydaftpunk":174,"zrei":101,"Johnchiahk":12}},{"path":"src/main/java/arb/logic/commands/project/FindProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" * Finds and lists all projects in address book whose title contains any of the argument keywords given","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":" * and contains any of the tags given and falls within the provided timeframe. Keyword matching is case insensitive.","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"public class FindProjectCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"find-project\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"fp\";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD + \": Finds all projects whose titles contain any of \"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"            + \"the specified keywords (case-insensitive). contains any of the tags given (case-insensitive), \"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"            + \"falls within the given timeframe and is linked to the client with the provided client name and displays \"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"            + \"them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"            + \"Parameters: name/TITLE status/STATUS tag/TAG client/CLIENT \"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"            + \"start/START OF TIMEFRAME end/END OF TIMEFRAME...\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" name/sculpture name/digital status/not done client/alice \"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"            + \"tag/personal start/last \"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"            + \"week end/next year\";","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    private final Predicate\u003cProject\u003e predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    public FindProjectCommand(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        model.updateFilteredProjectList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"                String.format(Messages.MESSAGE_PROJECTS_LISTED_OVERVIEW, model.getFilteredProjectList().size()),","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"                ListType.PROJECT);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"                || (other instanceof FindProjectCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 predicate.equals(((FindProjectCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":65,"mmaimer33":4}},{"path":"src/main/java/arb/logic/commands/project/LinkProjectToClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" * Links {@code projectToBeLinked} in the model to the client identified using its displayed index from","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" * the address book.","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"public class LinkProjectToClientCommand extends Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_LINK_PROJECT_TO_CLIENT_SUCCESS \u003d \"Successfully linked the project to %1$s\";","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d \"Please select a client to link this project to.\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"            + \"For example, enter 1 to select the first client in the list.\";","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"     * Creates a LinkProjectToClient to link the client at {@code targetIndex} to","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"     * {@code projectToBeLinked} in the model.","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    public LinkProjectToClientCommand(Index targetIndex) {","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        assert currentListBeingShown \u003d\u003d ListType.CLIENT : \"This command should only be executed \"","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"                + \"with a client list being shown\";","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getSortedClientList();","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        Client clientToLinkTo \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        model.linkProjectToClient(clientToLinkTo);","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        return new CommandResult(String.format(MESSAGE_LINK_PROJECT_TO_CLIENT_SUCCESS,","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"                clientToLinkTo.getName().fullName), ListType.PROJECT);","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short-circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"                || (other instanceof LinkProjectToClientCommand // handles null","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 targetIndex.equals(((LinkProjectToClientCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"zrei":62}},{"path":"src/main/java/arb/logic/commands/project/ListProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PREDICATE_SHOW_ALL_PROJECTS;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_NO_COMPARATOR;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" * Lists all projects in the address book to the user.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"public class ListProjectCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all projects\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"    public static final String MESSAGE_PROJECTS_CONTENT \u003d \"%s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"list-project\";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"lp\";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        model.updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        model.updateSortedProjectList(PROJECT_NO_COMPARATOR);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"        String message \u003d String.format(MESSAGE_PROJECTS_CONTENT, model.getProjectsContent());","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"        return new CommandResult(MESSAGE_SUCCESS + \"\\n\" + message, ListType.PROJECT);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":44,"Johnchiahk":4}},{"path":"src/main/java/arb/logic/commands/project/MarkProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import static arb.model.Model.PREDICATE_SHOW_ALL_PROJECTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_NO_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":" * Marks a project identified using its displayed index from the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"public class MarkProjectCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_MARK_PROJECT_SUCCESS \u003d \"Marked Project: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"mp\";","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"            + \": Marks the project identified by the index number used in the displayed project list.\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"    public MarkProjectCommand(Index targetIndex) {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getSortedProjectList();","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"        if (currentListBeingShown !\u003d ListType.PROJECT) {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LIST_PROJECT);","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"        Project projectToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        model.markProjectAsDone(projectToMark);","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"        model.updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        model.updateSortedProjectList(PROJECT_NO_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_PROJECT_SUCCESS, projectToMark), ListType.PROJECT);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"                || (other instanceof MarkProjectCommand // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"                \u0026\u0026 targetIndex.equals(((MarkProjectCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zrei":24,"Johnchiahk":55}},{"path":"src/main/java/arb/logic/commands/project/SortProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.commons.core.sorting.ProjectSortingOption;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" * Sorts all projects in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"public class SortProjectCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"sort-project\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"sp\";","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD + \": Sorts the project list. \"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"            + PREFIX_OPTION + \"OPTION\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"            + \"The options are \\\u0027name\\\u0027 and \\\u0027deadline\\\u0027 and \\\u0027price\\\u0027\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"            + PREFIX_OPTION + \"name\";","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    private final ProjectSortingOption sorter;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"     * @param sorter to sort the project list with","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public SortProjectCommand(ProjectSortingOption sorter) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        this.sorter \u003d sorter;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        model.updateSortedProjectList(sorter.getComparator());","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        return new CommandResult(sorter.getSuccessMessage(), ListType.PROJECT);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"                || (other instanceof SortProjectCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 sorter.equals(((SortProjectCommand) other).sorter)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zrei":64,"Johnchiahk":1}},{"path":"src/main/java/arb/logic/commands/project/UnmarkProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import static arb.model.Model.PREDICATE_SHOW_ALL_PROJECTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import static arb.model.Model.PROJECT_NO_COMPARATOR;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":" * Unmarks a project identified using its displayed index from the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"public class UnmarkProjectCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_UNMARK_PROJECT_SUCCESS \u003d \"Unmarked Project: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"up\";","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_USAGE \u003d MAIN_COMMAND_WORD","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"            + \": Unmarks the project identified by the index number used in the displayed project list.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"            + \"Example: \" + MAIN_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"    public UnmarkProjectCommand(Index targetIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getSortedProjectList();","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"        if (currentListBeingShown !\u003d ListType.PROJECT) {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LIST_PROJECT);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"        Project projectToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        model.markProjectAsNotDone(projectToUnmark);","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"        model.updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"        model.updateSortedProjectList(PROJECT_NO_COMPARATOR);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_PROJECT_SUCCESS, projectToUnmark), ListType.PROJECT);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"                || (other instanceof UnmarkProjectCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"                \u0026\u0026 targetIndex.equals(((UnmarkProjectCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zrei":22,"Johnchiahk":57}},{"path":"src/main/java/arb/logic/commands/tag/ListTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" * Lists all tags in the address book to the user.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"public class ListTagCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tags\";","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    private static final String MAIN_COMMAND_WORD \u003d \"list-tag\";","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    private static final String ALIAS_COMMAND_WORD \u003d \"lt\";","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private static final Set\u003cString\u003e COMMAND_WORDS \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"            new HashSet\u003c\u003e(Arrays.asList(MAIN_COMMAND_WORD, ALIAS_COMMAND_WORD));","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public CommandResult execute(Model model, ListType currentListBeingShown) {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        return new CommandResult(MESSAGE_SUCCESS, ListType.TAG);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    public static boolean isCommandWord(String commandWord) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        return COMMAND_WORDS.contains(commandWord);","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public static List\u003cString\u003e getCommandWords() {","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(COMMAND_WORDS);","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":41}},{"path":"src/main/java/arb/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.ExitCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.HelpCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.ClearClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.FindClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.ListClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.SortClientCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.AddProjectCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.ClearProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.commands.project.DeleteProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.EditProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.FindProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.ListProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.commands.project.MarkProjectCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.SortProjectCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.commands.project.UnmarkProjectCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.tag.ListTagCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.client.AddClientCommandParser;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.client.DeleteClientCommandParser;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.client.EditClientCommandParser;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.client.FindClientCommandParser;","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.project.AddProjectCommandParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.parser.project.DeleteProjectCommandParser;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.project.EditProjectCommandParser;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.project.FindProjectCommandParser;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.parser.project.MarkProjectCommandParser;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.project.SortProjectCommandParser;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.parser.project.UnmarkProjectCommandParser;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":" * Parses user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"public class AddressBookParser {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        if (AddClientCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"            return new AddClientCommandParser().parse(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        } else if (AddProjectCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"            return new AddProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        } else if (MarkProjectCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"            return new MarkProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        } else if (UnmarkProjectCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"            return new UnmarkProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        } else if (EditClientCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"            return new EditClientCommandParser().parse(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        } else if (EditProjectCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"            return new EditProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        } else if (DeleteClientCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"            return new DeleteClientCommandParser().parse(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        } else if (DeleteProjectCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"mmaimer33"},"content":"            return new DeleteProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"        } else if (ClearClientCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"            return new ClearClientCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        } else if (ClearProjectCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"            return new ClearProjectCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        } else if (FindClientCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"            return new FindClientCommandParser().parse(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        } else if (FindProjectCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"            return new FindProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        } else if (ListClientCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"            return new ListClientCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        } else if (ListProjectCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"            return new ListProjectCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        } else if (ListTagCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"            return new ListTagCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"        } else if (SortClientCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"            return new SortClientCommand();","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"        } else if (SortProjectCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"            return new SortProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        } else if (ExitCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        } else if (HelpCommand.isCommandWord(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zrei":102,"Johnchiahk":6,"mmaimer33":3}},{"path":"src/main/java/arb/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        return getValue(new Prefix(\"\", null)).orElse(\"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"zrei":2,"-":58}},{"path":"src/main/java/arb/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        int mainPrefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        while (mainPrefixPosition !\u003d -1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, mainPrefixPosition, true);","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"            mainPrefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), mainPrefixPosition);","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        int aliasPrefixPosition \u003d findPrefixPosition(argsString, prefix.getAlias(), 0);","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        while (aliasPrefixPosition !\u003d -1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, aliasPrefixPosition, false);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"            aliasPrefixPosition \u003d findPrefixPosition(argsString, prefix.getAlias(), aliasPrefixPosition);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\", null), 0, true);","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\", null), argsString.length(), true);","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"        int lengthOfPrefix \u003d currentPrefixPosition.isUsingMainPrefix()","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"                ? prefix.getPrefix().length()","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"                : prefix.getAlias().length();","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + lengthOfPrefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"        private final int startPosition;","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        private final boolean isUsingMainPrefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        PrefixPosition(Prefix prefix, int startPosition, boolean isUsingMainPrefix) {","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"            this.isUsingMainPrefix \u003d isUsingMainPrefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        boolean isUsingMainPrefix() {","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"            return this.isUsingMainPrefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"zrei":27,"-":138}},{"path":"src/main/java/arb/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"name/\", \"n/\");","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"phone/\", \"p/\");","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"email/\", \"e/\");","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\", \"t/\");","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"deadline/\", \"d/\");","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"price/\", \"pr/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    public static final Prefix PREFIX_CLIENT \u003d new Prefix(\"client/\", \"c/\");","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    public static final Prefix PREFIX_OPTION \u003d new Prefix(\"option/\", \"o/\");","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"status/\", \"st/\");","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"start/\", \"s/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    public static final Prefix PREFIX_END \u003d new Prefix(\"end/\", \"e/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zrei":10,"Johnchiahk":1,"-":8,"mmaimer33":1}},{"path":"src/main/java/arb/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"zrei":3,"-":13}},{"path":"src/main/java/arb/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.commons.core.sorting.ProjectSortingOption;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.commons.util.StringUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Status;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"     * Parses {@code sortingOption} into an {@code ProjectSortingOption} and returns it. Leading and","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"     * trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"     * @throws ParseException if the given {@code sortingOption} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    public static ProjectSortingOption parseSortingOption(String sortingOption) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        String trimmedSortingOption \u003d sortingOption.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        String lowercaseTrimmedSortingOption \u003d trimmedSortingOption.toLowerCase();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        if (!ProjectSortingOption.isValidSortingOption(lowercaseTrimmedSortingOption)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"            throw new ParseException(ProjectSortingOption.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        return ProjectSortingOption.getSortingOption(lowercaseTrimmedSortingOption);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"        if (trimmedPhone.isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"            return null;","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"        if (trimmedEmail.isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"verydaftpunk"},"content":"            return null;","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"        String lowercaseTrimmedTag \u003d trimmedTag.toLowerCase();","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        if (!Tag.isValidTagName(lowercaseTrimmedTag)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"        return new Tag(lowercaseTrimmedTag);","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"     * Parses a {@code String tag} into a {@code Deadline}.","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"verydaftpunk"},"content":"        if (trimmedDeadline.isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"verydaftpunk"},"content":"            return null;","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        return new Deadline(trimmedDeadline);","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"mmaimer33"},"content":"     * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"mmaimer33"},"content":"     * Leading and trailing whitespace will be trimmed.","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"mmaimer33"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"mmaimer33"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"mmaimer33"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"mmaimer33"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"mmaimer33"},"content":"        String augmentedStatus \u003d status.trim().toUpperCase();","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"mmaimer33"},"content":"        if (augmentedStatus.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"mmaimer33"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"mmaimer33"},"content":"        if (Status.STATUS_DONE.contains(augmentedStatus)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"mmaimer33"},"content":"            return new Status(true);","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"mmaimer33"},"content":"        } else if (Status.STATUS_NOT_DONE.contains(augmentedStatus)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"mmaimer33"},"content":"            return new Status(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"mmaimer33"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"mmaimer33"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"mmaimer33"},"content":"     * Parses a {@code String tag} into a {@code Price}.","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"mmaimer33"},"content":"     * Leading and trailing whitespace will be trimmed.","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"mmaimer33"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"mmaimer33"},"content":"     * @throws ParseException if the given {@code price} is invalid.","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"mmaimer33"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"mmaimer33"},"content":"        requireNonNull(price);","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"mmaimer33"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"mmaimer33"},"content":"        if (trimmedPrice.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"mmaimer33"},"content":"            return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"mmaimer33"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"mmaimer33"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"mmaimer33"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"verydaftpunk":9,"zrei":58,"Johnchiahk":1,"-":98,"mmaimer33":41}},{"path":"src/main/java/arb/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    private final String mainPrefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    private final Optional\u003cString\u003e aliasPrefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"     * Main prefix must be present and not null.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    public Prefix(String mainPrefix, String aliasPrefix) {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        requireNonNull(mainPrefix);","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        assert !mainPrefix.equals(aliasPrefix);","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        this.mainPrefix \u003d mainPrefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        this.aliasPrefix \u003d Optional.ofNullable(aliasPrefix);","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        return this.mainPrefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"     * Returns true if this prefix has an alias.","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    public boolean isAliasPresent() {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        return this.aliasPrefix.isPresent();","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    public String getAlias() {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        return this.aliasPrefix.orElse(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        return Objects.hash(mainPrefix, aliasPrefix);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        return otherPrefix.getPrefix().equals(getPrefix())","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherPrefix.aliasPrefix.equals(aliasPrefix);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"zrei":31,"-":32}},{"path":"src/main/java/arb/logic/parser/client/AddClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Prefix;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":" * Parses input arguments and creates a new AddClientCommand object","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"public class AddClientCommandParser implements Parser\u003cAddClientCommand\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     * Parses the given {@code String} of arguments in the context of the AddClientCommand","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"     * and returns an AddClientCommand object for execution.","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    public AddClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        Optional\u003cString\u003e phoneString \u003d argMultimap.getValue(PREFIX_PHONE);","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        Phone phone \u003d null;","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        if (phoneString.isPresent()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"            phone \u003d ParserUtil.parsePhone((phoneString.get()));","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        Optional\u003cString\u003e emailString \u003d argMultimap.getValue(PREFIX_EMAIL);","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        Email email \u003d null;","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        if (emailString.isPresent()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"            email \u003d ParserUtil.parseEmail(emailString.get());","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        Client client \u003d new Client(name, phone, email, tagList);","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        return new AddClientCommand(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"zrei":42,"-":32}},{"path":"src/main/java/arb/logic/parser/client/DeleteClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" * Parses input arguments and creates a new DeleteClientCommand object","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class DeleteClientCommandParser implements Parser\u003cDeleteClientCommand\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteClientCommand","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"     * and returns a DeleteClientCommand object for execution.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    public DeleteClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"            return new DeleteClientCommand(index);","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"            throw new ParseException(","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zrei":31}},{"path":"src/main/java/arb/logic/parser/client/EditClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":" * Parses input arguments and creates a new EditClientCommand object","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"public class EditClientCommandParser implements Parser\u003cEditClientCommand\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"     * Parses the given {@code String} of arguments in the context of the EditClientCommand","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     * and returns an EditClientCommand object for execution.","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public EditClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"                    EditClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor editClientDescriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"            editClientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"            editClientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editClientDescriptor::setTags);","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        if (!editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"            throw new ParseException(EditClientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        return new EditClientCommand(index, editClientDescriptor);","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"zrei":32,"-":51}},{"path":"src/main/java/arb/logic/parser/client/FindClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.commons.core.predicate.CombinedPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.FindClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Prefix;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.ClientContainsTagPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":" * Parses input arguments and creates a new FindClientCommand object","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"public class FindClientCommandParser implements Parser\u003cFindClientCommand\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_NAME_ERROR \u003d \"Name cannot be empty!\";","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_TAG_ERROR \u003d \"Tag cannot be empty!\";","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     * Parses the given {@code String} of arguments in the context of the FindClientCommand","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"     * and returns a FindClientCommand object for execution.","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    public FindClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"                PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        if (!areAnyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_TAG)","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        ArrayList\u003cPredicate\u003cClient\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e tags \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        if (tags.stream().anyMatch(t -\u003e t.isEmpty())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EMPTY_TAG_ERROR));","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"            predicates.add(new ClientContainsTagPredicate(tags));","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        if (nameKeywords.stream().anyMatch(t -\u003e t.isEmpty())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EMPTY_NAME_ERROR));","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        if (!nameKeywords.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"            predicates.add(new NameContainsKeywordsPredicate(nameKeywords));","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        return new FindClientCommand(new CombinedPredicate\u003c\u003e(predicates));","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"     * Returns true if any of the prefixes contains non-empty {@code Optional} values in the given","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    private static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zrei":73}},{"path":"src/main/java/arb/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"zrei":2,"-":15}},{"path":"src/main/java/arb/logic/parser/project/AddProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_CLIENT;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.AddProjectCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Prefix;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":" * Parses input arguments and creates a new AddProjectCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"public class AddProjectCommandParser implements Parser\u003cAddProjectCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    //public static provided","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"     * Parses the given {@code String} of arguments in the context of the AddProjectCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"     * and returns an AddProjectCommand object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public AddProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DEADLINE, PREFIX_PRICE, PREFIX_TAG,","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"                PREFIX_CLIENT);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        Optional\u003cString\u003e deadlineString \u003d argMultimap.getValue(PREFIX_DEADLINE);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        Deadline deadline \u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        if (deadlineString.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"            deadline \u003d ParserUtil.parseDeadline(deadlineString.get());","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"        Optional\u003cString\u003e priceString \u003d argMultimap.getValue(PREFIX_PRICE);","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"        Price price \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"        if (priceString.isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"            price \u003d ParserUtil.parsePrice(priceString.get());","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        Optional\u003cString\u003e clientName \u003d argMultimap.getValue(PREFIX_CLIENT);","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        Project project \u003d new Project(title, deadline, price, tagList);","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        return new AddProjectCommand(project, clientName);","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zrei":71,"Johnchiahk":8}},{"path":"src/main/java/arb/logic/parser/project/DeleteProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.commands.project.DeleteProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":" * Parses input arguments and creates a new DeleteProjectCommand object.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"public class DeleteProjectCommandParser implements Parser\u003cDeleteProjectCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"     * Parses the given {@code String} or arguments in the context of the DeleteProjectCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"     * and returns a DeleteProjectCommand for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    public DeleteProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"            return new DeleteProjectCommand(index);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"mmaimer33":30}},{"path":"src/main/java/arb/logic/parser/project/EditProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_CLIENT;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.commands.project.EditProjectCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.commands.project.EditProjectCommand.EditProjectDescriptor;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":" * Parses input arguments and creates a new EditProjectCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"public class EditProjectCommandParser implements Parser\u003cEditProjectCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"     * Parses the given {@code String} of arguments in the context of the EditProjectCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"     * and returns an EditProjectCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"    public EditProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DEADLINE, PREFIX_PRICE, PREFIX_TAG,","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"                PREFIX_CLIENT);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditProjectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"        EditProjectDescriptor editProjectDescriptor \u003d new EditProjectDescriptor();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"        if (argumentMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"            editProjectDescriptor.setTitle(ParserUtil.parseTitle(argumentMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"        if (argumentMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"            editProjectDescriptor.setDeadline(ParserUtil.parseDeadline(argumentMultimap.getValue(PREFIX_DEADLINE)","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"                                                                                        .get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"        if (argumentMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"            editProjectDescriptor.setPrice(ParserUtil.parsePrice(argumentMultimap.getValue(PREFIX_PRICE)","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"                    .get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        if (argumentMultimap.getValue(PREFIX_CLIENT).isPresent()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"            // throw exception if not valid name","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"            String clientName \u003d argumentMultimap.getValue(PREFIX_CLIENT).get();","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"            if (!clientName.isBlank() \u0026\u0026 !Name.isValidName(clientName)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"                throw new ParseException(\"Provided client name is not valid\");","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"            editProjectDescriptor.setClient(clientName);","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        parseTagsForEdit(argumentMultimap.getAllValues(PREFIX_TAG)).ifPresent(editProjectDescriptor::setTags);","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"        if (!editProjectDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"verydaftpunk"},"content":"            throw new ParseException(EditProjectCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"        return new EditProjectCommand(index, editProjectDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"verydaftpunk":52,"zrei":42,"Johnchiahk":5}},{"path":"src/main/java/arb/logic/parser/project/FindProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_CLIENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.commons.core.predicate.CombinedPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.FindProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Prefix;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Status;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.predicates.IsOfStatusPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.LinkedClientNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.ProjectContainsTagsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.ProjectWithinTimeframePredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":" * Parses input arguments and creates a new FindProjectCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"public class FindProjectCommandParser implements Parser\u003cFindProjectCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_NAME_ERROR \u003d \"Name cannot be empty!\";","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_TAG_ERROR \u003d \"Tag cannot be empty!\";","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_CLIENT_NAME_ERROR \u003d \"Client name cannot be empty!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"     * Parses the given {@code String} of arguments in the context of the FindProjectCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"     * and returns a FindProjectCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    public FindProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"                PREFIX_NAME, PREFIX_STATUS, PREFIX_START, PREFIX_END, PREFIX_TAG, PREFIX_CLIENT);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"        if (!areAnyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_STATUS, PREFIX_START,","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"                PREFIX_END, PREFIX_TAG, PREFIX_CLIENT) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        ArrayList\u003cPredicate\u003cProject\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e tags \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        if (tags.stream().anyMatch(t -\u003e t.isEmpty())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EMPTY_TAG_ERROR));","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"            predicates.add(new ProjectContainsTagsPredicate(tags));","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e titleKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        if (titleKeywords.stream().anyMatch(t -\u003e t.isEmpty())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EMPTY_NAME_ERROR));","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        if (!titleKeywords.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"            predicates.add(new TitleContainsKeywordsPredicate(titleKeywords));","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e clientNameKeywords \u003d argMultimap.getAllValues(PREFIX_CLIENT);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        if (clientNameKeywords.stream().anyMatch(c -\u003e c.isEmpty())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EMPTY_CLIENT_NAME_ERROR));","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        if (!clientNameKeywords.isEmpty()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"            predicates.add(new LinkedClientNameContainsKeywordsPredicate(clientNameKeywords));","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"mmaimer33"},"content":"        Optional\u003cString\u003e statusString \u003d argMultimap.getValue(PREFIX_STATUS);","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"mmaimer33"},"content":"        Status status \u003d null;","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"mmaimer33"},"content":"        if (statusString.isPresent()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"mmaimer33"},"content":"            status \u003d ParserUtil.parseStatus(statusString.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"mmaimer33"},"content":"        if (status !\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"mmaimer33"},"content":"            predicates.add(new IsOfStatusPredicate(status));","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        Optional\u003cString\u003e startString \u003d argMultimap.getValue(PREFIX_START);","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        Deadline startOfTimeframe \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        if (startString.isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"            startOfTimeframe \u003d ParserUtil.parseDeadline(startString.get());","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        Optional\u003cString\u003e endString \u003d argMultimap.getValue(PREFIX_END);","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"        Deadline endOfTimeframe \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        if (endString.isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"            endOfTimeframe \u003d ParserUtil.parseDeadline(endString.get());","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        if (startString.isPresent() || endString.isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"            predicates.add(new ProjectWithinTimeframePredicate(startOfTimeframe, endOfTimeframe));","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"        return new FindProjectCommand(new CombinedPredicate\u003c\u003e(predicates));","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"     * Returns true if any of the prefixes contains non-empty {@code Optional} values in the given","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"    private static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":104,"mmaimer33":15}},{"path":"src/main/java/arb/logic/parser/project/LinkProjectToClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.LinkProjectToClientCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" * Parses input arguments and creates a new LinkProjectToClientCommand object","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class LinkProjectToClientCommandParser implements Parser\u003cLinkProjectToClientCommand\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"     * Parses the given {@code String} or arguments in the context of the LinkProjectToClientCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"     * and returns a LinkProjectToClientCommand for execution.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    public LinkProjectToClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"            return new LinkProjectToClientCommand(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkProjectToClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"zrei":29}},{"path":"src/main/java/arb/logic/parser/project/MarkProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.commands.project.MarkProjectCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":" * Parses input arguments and creates a new MarkProjectCommand object","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"public class MarkProjectCommandParser implements Parser\u003cMarkProjectCommand\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkProjectCommand","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"     * and returns an MarkProjectCommand object for execution.","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"    public MarkProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"            return new MarkProjectCommand(index);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkProjectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Johnchiahk":31}},{"path":"src/main/java/arb/logic/parser/project/SortProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.core.sorting.ProjectSortingOption;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.SortProjectCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Prefix;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" * Parses input arguments and creates a new SortProjectCommand object","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"public class SortProjectCommandParser implements Parser\u003cSortProjectCommand\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"     * Parses the given {@code String} of arguments in the context of the SortProjectCommand","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"     * and returns a SortProjectCommand object for execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public SortProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_OPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_OPTION) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        ProjectSortingOption sorter \u003d ParserUtil.parseSortingOption(argMultimap.getValue(PREFIX_OPTION).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        return new SortProjectCommand(sorter);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zrei":48}},{"path":"src/main/java/arb/logic/parser/project/UnmarkProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.commands.project.UnmarkProjectCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.Parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":" * Parses input arguments and creates a new UnmarkProjectCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class UnmarkProjectCommandParser implements Parser\u003cUnmarkProjectCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkProjectCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"     * and returns an UnmarkProjectCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"    public UnmarkProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"            return new UnmarkProjectCommand(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkProjectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zrei":3,"Johnchiahk":28}},{"path":"src/main/java/arb/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.client.UniqueClientList;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.project.UniqueProjectList;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.tag.UniqueTagMappingList;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":" * Duplicates are not allowed (by .isSameClient comparison)","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBook.class);","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private final UniqueProjectList projects;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    private final UniqueTagMappingList tagMappings;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    private Optional\u003cProject\u003e projectToLink;","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        projects \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        tagMappings \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        projectToLink \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"     * Creates an AddressBook using the Clients and Projects in the {@code toBeCopied}","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"     * Replaces the contents of the project list with {@code projects}.","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"     * {@code projects} must not contain duplicate projects.","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    public void setProjects(List\u003cProject\u003e projects) {","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        this.projects.setProjects(projects);","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"     * Replaces the contents of the tag mapping list with the client and project tags","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"     * of {@code clients} and {@code projects}.","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"    public void setTagMappings(List\u003cClient\u003e clients, List\u003cProject\u003e projects) {","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        this.tagMappings.setTagMappings(clients, projects);","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"     * Removes all client tag mappings in the tag mapping list.","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"    public void resetClientTagMappings() {","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        this.tagMappings.resetClientTagMappings();","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"     * Removes all project tag mappings in the tag mapping list.","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"    public void resetProjectTagMappings() {","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        this.tagMappings.resetProjectTagMappings();","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"     * Unlinks all linked projects from clients in the client list.","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"    public void resetClientLinkings() {","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        logger.info(\"Resetting client links\");","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        this.clients.resetProjectLinkings();","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"     * Unlinks all linked clients from projects in the project list.","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"    public void resetProjectLinkings() {","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        logger.info(\"Resetting project links\");","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"        this.projects.resetClientLinkings();","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        setProjects(newData.getProjectList());","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        setTagMappings(newData.getClientList(), newData.getProjectList());","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"    //// client-level operations","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        return clients.contains(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"     * Returns true if a client with {@code clientName} exists in the client list.","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"    public boolean hasClient(Name clientName) {","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"        requireNonNull(clientName);","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"        return clients.contains(clientName);","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"     * Returns true if a project with the same identity as {@code project} exists in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"    public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"        return projects.contains(project);","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"     * Adds a client to the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"     * The client must not already exist in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"    public void addClient(Client c) {","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"        clients.add(c);","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        tagMappings.addClientTags(c);","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"     * Adds a project to the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"     * The project must not already exist in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"    public void addProject(Project p) {","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"        projects.add(p);","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"        tagMappings.addProjectTags(p);","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"        projects.transferLinkedProjects(target, editedClient);","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"        tagMappings.editClientTags(target, editedClient);","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"     * Replaces the given project {@code target} in the list with {@code editedProject}.","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"     * The project identity of {@code editedProject} must not be the same as another existing project","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"     * in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"        requireNonNull(editedProject);","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"        tagMappings.editProjectTags(target, editedProject);","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"        clients.transferLinkedClients(target, editedProject);","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"        projects.setProject(target, editedProject);","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"     * Removes {@code key} from the client list in this {@code AddressBook}.","lastModifiedDate":"2023-03-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"    public void removeClient(Client key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"        clients.remove(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"        projects.removeAllLinks(key);","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"        tagMappings.deleteClientTags(key);","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"     * Removes {@code key} from the project list in this {@code AddressBook}.","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"    public void removeProject(Project key) {","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"        projects.remove(key);","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"        clients.unlinkClientFromProject(key);","lastModifiedDate":"2023-03-26"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"        tagMappings.deleteProjectTags(key);","lastModifiedDate":"2023-03-20"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"     * Sets the {@code project} that should be linked to a client.","lastModifiedDate":"2023-03-25"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"    public void setProjectToLink(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"        this.projectToLink \u003d Optional.of(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"     * Links {@code projectToLink} to {@code client}.","lastModifiedDate":"2023-03-26"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"    public void linkProjectToClient(Client client) {","lastModifiedDate":"2023-03-25"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"        assert projectToLink.isPresent();","lastModifiedDate":"2023-03-26"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"        clients.unlinkClientFromProject(projectToLink.get());","lastModifiedDate":"2023-03-26"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        projects.linkProjectToClient(projectToLink.get(), client);","lastModifiedDate":"2023-03-26"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"        clients.linkClientToProject(client, projectToLink.get());","lastModifiedDate":"2023-03-26"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"        logger.info(\"Linking project \" + projectToLink.get() + \" to client \" + client);","lastModifiedDate":"2023-03-26"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"        this.projectToLink \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"     * Links the project {@code toLink} to the client with {@code clientName}.","lastModifiedDate":"2023-03-26"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"    public void linkProjectToClient(Name clientName, Project toLink) {","lastModifiedDate":"2023-03-26"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"        clients.linkClientToProject(clientName, toLink);","lastModifiedDate":"2023-03-26"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"     * Unlinks the client linked to {@code project}.","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"    public void unlinkClientFromProject(Project project) {","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"        clients.unlinkClientFromProject(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"        projects.unlinkProjectFromClient(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"     * Marks {@code project} as done.","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"    public void markProjectAsDone(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"        projects.markProjectAsDone(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"     * Marks {@code project} as not done.","lastModifiedDate":"2023-03-26"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"    public void markProjectAsNotDone(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":260,"author":{"gitId":"zrei"},"content":"        projects.markProjectAsNotDone(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":263,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"Johnchiahk"},"content":"    public String getProjectsContent() {","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"Johnchiahk"},"content":"        return projects.getProjectsContent();","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"zrei"},"content":"        return clients.asUnmodifiableObservableList().size() + \" clients, \"","lastModifiedDate":"2023-03-05"},{"lineNumber":273,"author":{"gitId":"zrei"},"content":"                + projects.asUnmodifiableObservableList().size() + \" projects, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"zrei"},"content":"                + tagMappings.asUnmodifiableObservableList().size() + \" tags\";","lastModifiedDate":"2023-03-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":280,"author":{"gitId":"zrei"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":283,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":284,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cProject\u003e getProjectList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":285,"author":{"gitId":"zrei"},"content":"        return projects.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-05"},{"lineNumber":286,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":287,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":288,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":289,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cTagMapping\u003e getTagMappingList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":290,"author":{"gitId":"zrei"},"content":"        return tagMappings.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-20"},{"lineNumber":291,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":292,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":297,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 clients.equals(((AddressBook) other).clients)","lastModifiedDate":"2023-03-20"},{"lineNumber":298,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 projects.equals(((AddressBook) other).projects)","lastModifiedDate":"2023-03-20"},{"lineNumber":299,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 tagMappings.equals(((AddressBook) other).tagMappings)","lastModifiedDate":"2023-03-26"},{"lineNumber":300,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 projectToLink.equals(((AddressBook) other).projectToLink));","lastModifiedDate":"2023-03-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":305,"author":{"gitId":"zrei"},"content":"        return Objects.hash(clients, projects, tagMappings, projectToLink);","lastModifiedDate":"2023-03-26"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":218,"Johnchiahk":5,"-":84}},{"path":"src/main/java/arb/model/ListType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":" * Enum to represent the type of list currently being shown to the user and the","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":" * type of list a command should show to the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"public enum ListType {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"    NONE, PROJECT, CLIENT, TAG","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"zrei":9}},{"path":"src/main/java/arb/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    /** {@code Predicate} for filtered client list that always evaluates to true */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    /** {@code Predicate} for filtered project list that always evaluates to true */","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    Predicate\u003cProject\u003e PREDICATE_SHOW_ALL_PROJECTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    /** {@code comparator} for sorted client list that compares using client names */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    Comparator\u003cClient\u003e CLIENT_NAME_COMPARATOR \u003d (c1, c2) -\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        return c1.getName().compareTo(c2.getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    };","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    /** {@code comparator} for sorted project list that compares using project titles */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    Comparator\u003cProject\u003e PROJECT_TITLE_COMPARATOR \u003d (p1, p2) -\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        return p1.getTitle().compareTo(p2.getTitle());","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    };","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    /** {@code comparator} for sorted project list that compares using project deadlines */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    Comparator\u003cProject\u003e PROJECT_DEADLINE_COMPARATOR \u003d (p1, p2) -\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        if (!p1.isDeadlinePresent() \u0026\u0026 !p2.isDeadlinePresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"            return 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        } else if (!p1.isDeadlinePresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"            return 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        } else if (!p2.isDeadlinePresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"            return -1;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        return p1.getDeadline().compareTo(p2.getDeadline());","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    };","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"    /** {@code comparator} for sorted project list that compares using project prices */","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"    Comparator\u003cProject\u003e PROJECT_PRICE_COMPARATOR \u003d (p1, p2) -\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"        if (!p1.isPricePresent() \u0026\u0026 !p2.isPricePresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"            return 0;","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"        } else if (!p1.isPricePresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"            return 1;","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"        } else if (!p2.isPricePresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"            return -1;","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"        return p1.getPrice().compareTo(p2.getPrice());","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"    };","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    /** Null {@code comparator} for sorted client list */","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    Comparator\u003cClient\u003e CLIENT_NO_COMPARATOR \u003d null;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    /** Null {@code comparator} for sorted project list */","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    Comparator\u003cProject\u003e PROJECT_NO_COMPARATOR \u003d null;","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"    /** Empties the project list of the address book. */","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"    void resetProjectList();","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    /** Empties the client list of the address book. */","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"    void resetClientList();","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"     * Returns true if a project with the same identity as {@code project} exists in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"    boolean hasProject(Project project);","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"     * Deletes the given client.","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"     * The client must exist in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"     * Deletes the given project.","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"     * The project must exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"    void deleteProject(Project target);","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"     * Adds the given client.","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"     * {@code client} must not already exist in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    void addClient(Client client);","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"     * Adds the given project.","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"     * {@code project} must not already exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"    void addProject(Project project);","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"     * Replaces the given project {@code target} with {@code editedProject}.","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"     * The project identity of {@code editedProject} must not be the same as another existing project","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"     * in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"    void setProject(Project target, Project editedProject);","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"     * Sets the {@code project} to be linked to a client.","lastModifiedDate":"2023-03-25"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"    void setProjectToLink(Project project);","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"     * Links a project to {@code client}.","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"    void linkProjectToClient(Client client);","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"     * Unlinks the client from {@code project}.","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"    void unlinkClientFromProject(Project project);","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"     * Marks {@code project} as done.","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"    public void markProjectAsDone(Project project);","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"     * Marks {@code project} as not done.","lastModifiedDate":"2023-03-26"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"    public void markProjectAsNotDone(Project project);","lastModifiedDate":"2023-03-26"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"    /** Returns an unmodifiable view of the filtered client list */","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"    /** Returns an unmodifiable view of the filtered project list */","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cProject\u003e getFilteredProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"     * Updates the filter of the filtered project list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"    void updateFilteredProjectList(Predicate\u003cProject\u003e predicate);","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"    /** Returns an unmodifiable view of the sorted client list */","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cClient\u003e getSortedClientList();","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"    /** Returns an unmodifiable view of the sorted project list */","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cProject\u003e getSortedProjectList();","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"     * Updates the comparator of the sorted client list to filter by the given {@code comparator}.","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"    void updateSortedClientList(Comparator\u003cClient\u003e comparator);","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"     * Updates the comparator of the sorted project list to filter by the given {@code comparator}.","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"    void updateSortedProjectList(Comparator\u003cProject\u003e comparator);","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"    /** Returns an unmodifiable view of the tag mapping list */","lastModifiedDate":"2023-03-20"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cTagMapping\u003e getTagMappingList();","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"Johnchiahk"},"content":"     * Returns contents of list of project.","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"Johnchiahk"},"content":"    String getProjectsContent();","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zrei":139,"Johnchiahk":17,"-":66}},{"path":"src/main/java/arb/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    private final SortedList\u003cClient\u003e sortedClients;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    private final FilteredList\u003cProject\u003e filteredProjects;","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    private final SortedList\u003cProject\u003e sortedProjects;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    private final ObservableList\u003cTagMapping\u003e tagMappings;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.addressBook.getClientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        sortedClients \u003d new SortedList\u003c\u003e(this.filteredClients);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        filteredProjects \u003d new FilteredList\u003c\u003e(this.addressBook.getProjectList());","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        sortedProjects \u003d new SortedList\u003c\u003e(this.filteredProjects);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        tagMappings \u003d this.addressBook.getTagMappingList();","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"    public void resetProjectList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        logger.info(\"Resetting the project list\");","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        addressBook.resetProjectTagMappings();","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"        addressBook.resetClientLinkings(); // unlink clients","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"        addressBook.setProjects(new ArrayList\u003cProject\u003e());","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"    public void resetClientList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"        logger.info(\"Resetting the client list\");","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"        addressBook.resetClientTagMappings();","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        addressBook.resetProjectLinkings(); // unlink projects","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        addressBook.setClients(new ArrayList\u003cClient\u003e());","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        return addressBook.hasClient(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"    public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        return addressBook.hasProject(project);","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"        addressBook.removeClient(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"    public void deleteProject(Project target) {","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"        addressBook.removeProject(target);","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        updateSortedClientList(CLIENT_NO_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"    public void addProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"        addressBook.addProject(project);","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"        updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        updateSortedProjectList(PROJECT_NO_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        addressBook.setClient(target, editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(target, editedProject);","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"        addressBook.setProject(target, editedProject);","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"    public void setProjectToLink(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-25"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"        addressBook.setProjectToLink(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"    public void linkProjectToClient(Client client) {","lastModifiedDate":"2023-03-25"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-03-25"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"        addressBook.linkProjectToClient(client);","lastModifiedDate":"2023-03-25"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"    public void unlinkClientFromProject(Project project) {","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"        addressBook.unlinkClientFromProject(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"    public void markProjectAsDone(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"        addressBook.markProjectAsDone(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"    public void markProjectAsNotDone(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"        addressBook.markProjectAsNotDone(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"Johnchiahk"},"content":"    public String getProjectsContent() {","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"Johnchiahk"},"content":"        return addressBook.getProjectsContent();","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"     * Returns an unmodifiable view of the list of {@code Client} backed by the internal list of","lastModifiedDate":"2023-02-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"        return filteredClients;","lastModifiedDate":"2023-02-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Project List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"     * Returns an unmodifiable view of the list of {@code Project} backed by the internal list of","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"        return filteredProjects;","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"    public void updateFilteredProjectList(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2023-03-07"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"        filteredProjects.setPredicate(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sorted Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"    public SortedList\u003cClient\u003e getSortedClientList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"        return sortedClients;","lastModifiedDate":"2023-03-09"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"    public void updateSortedClientList(Comparator\u003cClient\u003e comparator) {","lastModifiedDate":"2023-03-20"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"        sortedClients.setComparator(comparator);","lastModifiedDate":"2023-03-20"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sorted Project List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"    public SortedList\u003cProject\u003e getSortedProjectList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"        return sortedProjects;","lastModifiedDate":"2023-03-20"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":260,"author":{"gitId":"zrei"},"content":"    public void updateSortedProjectList(Comparator\u003cProject\u003e comparator) {","lastModifiedDate":"2023-03-09"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"        sortedProjects.setComparator(comparator);","lastModifiedDate":"2023-03-09"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":264,"author":{"gitId":"zrei"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tag Mapping List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":265,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":266,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":267,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cTagMapping\u003e getTagMappingList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":268,"author":{"gitId":"zrei"},"content":"        return tagMappings;","lastModifiedDate":"2023-03-20"},{"lineNumber":269,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":270,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":285,"author":{"gitId":"zrei"},"content":"        // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":288,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients)","lastModifiedDate":"2023-03-05"},{"lineNumber":289,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 filteredProjects.equals(other.filteredProjects)","lastModifiedDate":"2023-03-13"},{"lineNumber":290,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 sortedClients.equals(other.sortedClients)","lastModifiedDate":"2023-03-13"},{"lineNumber":291,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 sortedProjects.equals(other.sortedProjects)","lastModifiedDate":"2023-03-20"},{"lineNumber":292,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 new HashSet\u003c\u003e(tagMappings).equals(new HashSet\u003c\u003e(other.tagMappings));","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":172,"Johnchiahk":6,"-":117}},{"path":"src/main/java/arb/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"     * Returns an unmodifiable view of the projects list.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"     * This list will not contain any duplicate projects.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cProject\u003e getProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"     * Returns an unmodifiable view of the tag mappings list.","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"     * This list will not contain any duplicate tag mappings.","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    ObservableList\u003cTagMapping\u003e getTagMappingList();","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":19,"-":11}},{"path":"src/main/java/arb/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"zrei":2,"-":14}},{"path":"src/main/java/arb/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"arb.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":3,"-":84}},{"path":"src/main/java/arb/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.project.UniqueProjectList;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" * Represents a Client in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" * Guarantees: name and tags are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"public class Client {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    private final Optional\u003cPhone\u003e phone;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private final Optional\u003cEmail\u003e email;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    private final UniqueProjectList linkedProjects;","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"     * Name and tags must be present and not null.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public Client(Name name, Phone phone, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(name, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        this.phone \u003d Optional.ofNullable(phone);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        this.email \u003d Optional.ofNullable(email);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        this.linkedProjects \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        return this.name;","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"     * Returns true if this client has a phone.","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    public boolean isPhonePresent() {","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        return this.phone.isPresent();","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        return this.phone.orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"     * Returns true if this client has an email.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    public boolean isEmailPresent() {","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        return this.email.isPresent();","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        return this.email.orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"     * Links {@code project} to this client.","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"    public void linkProject(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        if (!linkedProjects.contains(project)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"            linkedProjects.add(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"     * Unlinks {@code project} from this client.","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"    public void unlinkProject(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        assert linkedProjects.contains(project) : getName() + \": \" + linkedProjects.toString();","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        linkedProjects.remove(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"     * Unlinks all linked projects from this client.","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"    public void unlinkAllProjects() {","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        linkedProjects.setProjects(new UniqueProjectList());","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"    public int getNumberOfProjectsLinked() {","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        return linkedProjects.asUnmodifiableObservableList().size();","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cProject\u003e getLinkedProjects() {","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        return linkedProjects.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"     * Returns true if both clients have the same name.","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherClient.getName().equals(getName());","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"        return otherClient.getName().equals(getName())","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherClient.phone.equals(phone)","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherClient.email.equals(email)","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherClient.getTags().equals(getTags())","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherClient.linkedProjects.equals(linkedProjects);","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"        return Objects.hash(name, phone, email, tags, linkedProjects);","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        builder.append(getName());","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        if (isPhonePresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"            builder.append(\"; Phone: \").append(getPhone());","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"        if (isEmailPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"            builder.append(\"; Email: \").append(getEmail());","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":93,"-":78}},{"path":"src/main/java/arb/model/client/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":" * Represents a Client\u0027s email in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":3,"-":68}},{"path":"src/main/java/arb/model/client/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":" * Represents a Client\u0027s name in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"    public int compareTo(Name otherName) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        return this.fullName.compareTo(otherName.fullName);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":9,"-":55}},{"path":"src/main/java/arb/model/client/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":" * Represents a Client\u0027s phone number in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":3,"-":50}},{"path":"src/main/java/arb/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" * clients uses Client#isSameClient(Client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":" *","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":" *","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"     * Returns true if the list contains an equivalent client with {@code Name}.","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    public boolean contains(Name toCheck) {","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        return internalList.stream().anyMatch(c -\u003e c.getName().equals(toCheck));","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"     * Adds a client to the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"     * The client must exist in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"     * Unlinks all linked projects from the clients in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"    public void resetProjectLinkings() {","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"        internalList.stream().forEach(c -\u003e unlinkAllProjectsFromClient(c));","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"     * Unlinks all linked projects from {@code client}.","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"    private void unlinkAllProjectsFromClient(Client client) {","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        assert contains(client);","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        client.unlinkAllProjects();","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        setClient(client, client);","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"     * Unlinks the linked client from {@code project}.","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"    public void unlinkClientFromProject(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"        project.getLinkedClient().ifPresent(c -\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"            c.unlinkProject(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"            setClient(c, c);","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"        });","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"     * Links {@code client} to {@code project}.","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"    public void linkClientToProject(Client client, Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(client, project);","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"        assert contains(client);","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"        client.linkProject(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        setClient(client, client);","lastModifiedDate":"2023-03-26"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"     * Links the client with {@code clientName} to {@code project}.","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"    public void linkClientToProject(Name clientName, Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"        assert contains(clientName);","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"        Iterator\u003cClient\u003e iterator \u003d iterator();","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"            Client toMatch \u003d iterator.next();","lastModifiedDate":"2023-03-26"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"            if (toMatch.getName().equals(clientName)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"                toMatch.linkProject(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"                project.linkToClient(toMatch);","lastModifiedDate":"2023-03-26"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"                return;","lastModifiedDate":"2023-03-26"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"     * Transfers all clients linked to {@code original} to {@code target}.","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"    public void transferLinkedClients(Project original, Project target) {","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(original, target);","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"        original.getLinkedClient().ifPresent(c -\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"            c.unlinkProject(original);","lastModifiedDate":"2023-03-26"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"            c.linkProject(target);","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"            target.linkToClient(c);","lastModifiedDate":"2023-03-26"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"            setClient(c, c);","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"        });","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"                        \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2023-02-28"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2023-02-28"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2023-02-28"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2023-02-28"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2023-02-28"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2023-02-28"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"                    return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"        return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"zrei":213}},{"path":"src/main/java/arb/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client.exceptions;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"public class ClientNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"zrei":6}},{"path":"src/main/java/arb/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client.exceptions;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":" * Signals that the operation will result in duplicate Clients (Clients are considered duplicates if they have the same","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":" * identity).","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"zrei":11}},{"path":"src/main/java/arb/model/client/predicates/ClientContainsTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" * Tests that a {@code Client}\u0027s contains any of the tags given.","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class ClientContainsTagPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public ClientContainsTagPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        this.tags \u003d keywords.stream().map(s -\u003e new Tag(s.toLowerCase())).collect(Collectors.toSet());","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        return tags.stream()","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"                .anyMatch(t -\u003e client.getTags().contains(t));","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"                || (other instanceof ClientContainsTagPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 tags.equals(((ClientContainsTagPredicate) other).tags)); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        return tags.hashCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zrei":38}},{"path":"src/main/java/arb/model/client/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.util.StringUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" * Tests that a {@code Client}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    private final Set\u003cString\u003e keywords;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        this.keywords \u003d new HashSet\u003c\u003e(keywords);","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getName().fullName, keyword));","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        return keywords.hashCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zrei":16,"-":23}},{"path":"src/main/java/arb/model/project/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static arb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import org.ocpsoft.prettytime.nlp.PrettyTimeParser;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":" * Represents a Project\u0027s deadline date in the address book.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadline(String)}","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"public class Deadline implements Comparable\u003cDeadline\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"            \"Deadline must be in a recognisable format, e.g. DD/MM/YYYY or \\\u00273pm tomorrow\\\u0027.\";","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    public final LocalDateTime dueDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"     * Constructs a {@code Deadline}.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"     * @param date A valid due date.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    public Deadline(String date) {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"        checkArgument(isValidDeadline(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        dueDate \u003d parseDate(date);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // @@author zrei-reused","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Reused from https://stackoverflow.com/questions/21242110/convert-java-util-date-to-java-time-localdate","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private LocalDateTime parseDate(String dateString) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Date date \u003d getPossibleDatesFromDateString(dateString).get(0);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return date.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param test String to test.","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return True if valid.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cDate\u003e dates \u003d getPossibleDatesFromDateString(test);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return dates.size() !\u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static List\u003cDate\u003e getPossibleDatesFromDateString(String date) {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new PrettyTimeParser().parse(date);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof Deadline) // handles null","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 dueDate.equals(((Deadline) other).dueDate); // checks date","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int compareTo(Deadline otherDeadline) {","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this.dueDate.compareTo(otherDeadline.dueDate);","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return dueDate.hashCode();","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"zrei":14,"-":44,"mmaimer33":20}},{"path":"src/main/java/arb/model/project/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import static arb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import static java.lang.Double.compare;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":" * Represents a Project\u0027s price in the address book.","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"public class Price implements Comparable\u003cPrice\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"            \"Price must be in a recognisable format, e.g. 4098.09 or 380 or 0.35\";","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    public static final String VALIDATION_REGEX \u003d \"(([1-9]\\\\d{0,2})|(([1-9]\\\\d*)?\\\\d))(\\\\.\\\\d\\\\d)?$\";","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"    private static final DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"    private double fullPrice;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"     * @param price A valid price.","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    public Price(String price) {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"        requireNonNull(price);","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"        this.fullPrice \u003d Double.parseDouble(price);","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"     * Returns true if a given string is a valid price.","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"     * @param test String to test.","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"     * @return True if valid.","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"    public String getPrice() {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"        return df.format(this.fullPrice);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"    public String toString() {","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        return \"Price: $\" + getPrice();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"                || (other instanceof Price) // handles null","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"                \u0026\u0026 fullPrice \u003d\u003d (((Price) other).fullPrice); // check price","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"    public int compareTo(Price otherPrice) {","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"        return compare(this.fullPrice, otherPrice.fullPrice);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        return df.format(fullPrice).hashCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zrei":1,"Johnchiahk":66}},{"path":"src/main/java/arb/model/project/Project.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static arb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":" * Represents a Project in the address book.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" * Guarantees: title and status is present and not null; field values are validated \u0026 immutable.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"public class Project {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Project.class);","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    // Details fields. Deadline is optional.","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"    private final Title title;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private final Optional\u003cDeadline\u003e deadline;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"    private final Optional\u003cPrice\u003e price;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"    private final Status status;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    // Data fields","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    // Linked client","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    private Optional\u003cClient\u003e linkedClient;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"     * Constructs a {@code Project}.","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"     * Title and tags must be present and not null.","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    public Project(Title title, Deadline deadline, Price price, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(title, tags);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        this.deadline \u003d Optional.ofNullable(deadline);","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"        this.price \u003d Optional.ofNullable(price);","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        this.status \u003d new Status();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        this.linkedClient \u003d Optional.empty();","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"    public Title getTitle() {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"        return title;","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"     * Returns true if this project has a deadline.","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    public boolean isDeadlinePresent() {","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        return deadline.isPresent();","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"     * Returns true if this project has a price.","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"    public boolean isPricePresent() {","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"        return price.isPresent();","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"     * Returns true if this project has a linked client.","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"    public boolean isClientPresent() {","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        return linkedClient.isPresent();","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"mmaimer33"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        return deadline.orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"     * Returns true if this project has is overdue","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"        if (!isDeadlinePresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"verydaftpunk"},"content":"        logger.info(currentDate.toString());","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"        Deadline currentDateAsDeadline \u003d new Deadline(currentDate.toString());","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"        logger.info(currentDateAsDeadline.toString());","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"        logger.info(Integer.toString(this.getDeadline().compareTo(currentDateAsDeadline)));","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"verydaftpunk"},"content":"        return this.getDeadline().compareTo(currentDateAsDeadline) \u003c 0 \u0026\u0026 !this.status.getStatus();","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"mmaimer33"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"mmaimer33"},"content":"        return status;","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Johnchiahk"},"content":"    public Price getPrice() {","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"Johnchiahk"},"content":"        return price.orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"    public String getClientName() {","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        return linkedClient.map(c -\u003e c.getName().fullName).orElse(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"Johnchiahk"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Johnchiahk"},"content":"        this.status.setTrue();","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Johnchiahk"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"Johnchiahk"},"content":"        this.status.setFalse();","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"     * Links {@code client} to this project.","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"    public void linkToClient(Client client) {","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        linkedClient \u003d Optional.of(client);","lastModifiedDate":"2023-03-25"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"     * Unlinks any linked client from this project.","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    public void unlinkFromClient() {","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"        linkedClient \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"    public Optional\u003cClient\u003e getLinkedClient() {","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"        return linkedClient;","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"     * Returns true if both projects have the same title.","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"     * This defines a weaker notion of equality between two projects.","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"    public boolean isSameProject(Project otherProject) {","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        if (otherProject \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"        return otherProject !\u003d null","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherProject.getTitle().equals(getTitle());","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"mmaimer33"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"        builder.append(getTitle());","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"        if (isDeadlinePresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"            builder.append(\", due by: \").append(getDeadline());","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"Johnchiahk"},"content":"        if (isPricePresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"Johnchiahk"},"content":"            builder.append(\", \").append(getPrice());","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"mmaimer33"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"mmaimer33"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"mmaimer33"},"content":"            return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"mmaimer33"},"content":"        if (!(other instanceof Project)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"mmaimer33"},"content":"            return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"mmaimer33"},"content":"        Project otherProject \u003d (Project) other;","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"        return otherProject.getTitle().equals(getTitle())","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherProject.deadline.equals(deadline)","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherProject.price.equals(price)","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherProject.getStatus().equals(getStatus())","lastModifiedDate":"2023-03-21"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherProject.getTags().equals(getTags())","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 otherProject.linkedClient.equals(linkedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":195,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":196,"author":{"gitId":"mmaimer33"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"        return Objects.hash(title, deadline, status, price, tags, linkedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"verydaftpunk":17,"zrei":108,"Johnchiahk":22,"mmaimer33":52}},{"path":"src/main/java/arb/model/project/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":" * Represents a Project\u0027s completion status in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"public class Status {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status must be \u0027done\u0027 / \u0027d\u0027 or \u0027not done\u0027 / \u0027nd\u0027 \"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"            + \"(case-insensitive).\"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"            + \"\\n Not done includes overdue status. Status must not be empty.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"     * List of possible string representations of \"done\" status.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    public static final List\u003cString\u003e STATUS_DONE \u003d List.of(new String[]{\"DONE\", \"D\"});","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"     * List of possible string representations of \"not done\" status.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    public static final List\u003cString\u003e STATUS_NOT_DONE \u003d List.of(new String[]{\"NOT DONE\", \"ND\"});","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"     * Constructs a {@code Status}: False by default.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    public Status() {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"     * Constructs a {@code Status} with the given value.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"     * @param status The value.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"    public Status(boolean status) {","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"        isDone \u003d status;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"     * Returns the completion status as a boolean.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"        return isDone;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"     * Sets the completion status to True.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"    public void setTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"     * Sets the completion status to False.","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"    public void setFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"        return isDone ? STATUS_DONE.get(0) : STATUS_NOT_DONE.get(0);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"mmaimer33"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"mmaimer33"},"content":"        return other \u003d\u003d this // Short-circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"mmaimer33"},"content":"                || (other instanceof Status) // Handles null","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"mmaimer33"},"content":"                \u0026\u0026 isDone \u003d\u003d ((Status) other).isDone; // Check isDone","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"mmaimer33"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"mmaimer33"},"content":"        return Boolean.hashCode(isDone);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Johnchiahk":1,"mmaimer33":78}},{"path":"src/main/java/arb/model/project/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static arb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":" * Represents a Project\u0027s title in the address book.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"public class Title implements Comparable\u003cTitle\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"            \"Titles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    /*","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"    public final String fullTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"     * @param title A valid title.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"    public Title(String title) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"        fullTitle \u003d title;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"     * @param test String to test.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"     * @return True if valid.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"        return fullTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"                || (other instanceof Title) // handles null","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"                \u0026\u0026 fullTitle.equals(((Title) other).fullTitle); // check title","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"    public int compareTo(Title otherTitle) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        return this.fullTitle.compareTo(otherTitle.fullTitle);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"        return fullTitle.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"verydaftpunk":5,"zrei":6,"mmaimer33":52}},{"path":"src/main/java/arb/model/project/UniqueProjectList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.project.exceptions.ProjectNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" * A list of projects that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" * A project is considered unique by comparing using {@code Project#isSameProject(Project)}. As such,","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" * adding and updating of projects uses Project#isSameProject(Project) for equality so as to ensure that","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" * the project being added or updated is unique in terms of identity in the UniqueProjectList. However, the","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" * removal of a project uses Project#equals(Object) so as to ensure that the project with exactly the same","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":" * fields will be removed.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":" *","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":" *","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":" * @see Project#isSameProject(Project)","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"public class UniqueProjectList implements Iterable\u003cProject\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private final ObservableList\u003cProject\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    private final ObservableList\u003cProject\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"     * Returns true if the list contains an equivalent project as the given argument.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    public boolean contains(Project toCheck) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        return internalList.stream().anyMatch(toCheck::isSameProject);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"     * Adds a project to the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"     * The project must not already exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    public void add(Project toAdd) {","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"     * Replaces the project {@code target} in the list with {@code editedProject}.","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"     * The project identity of {@code editedProject} must not be the same as another existing project in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(target, editedProject);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"            throw new ProjectNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        if (!target.isSameProject(editedProject) \u0026\u0026 contains(editedProject)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        internalList.set(index, editedProject);","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"     * Removes the equivalent project from the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"     * The project must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    public void remove(Project toRemove) {","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"            throw new ProjectNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    public void setProjects(UniqueProjectList replacement) {","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"     * Replaces the contents of this list with {@code projects}.","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"     * {@code projects} must not contain duplicate projects.","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"    public void setProjects(List\u003cProject\u003e projects) {","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(projects);","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        if (!projectsAreUnique(projects)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"        internalList.setAll(projects);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"     * Links {@code client} to {@code project}.","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    public void linkProjectToClient(Project project, Client client) {","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(project, client);","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        project.linkToClient(client);","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        setProject(project, project);","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"     * Unlinks the linked client from {@code project}.","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"    public void unlinkProjectFromClient(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"        project.unlinkFromClient();","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        setProject(project, project);","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"     * Unlinks all linked clients from the projects in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"    public void resetClientLinkings() {","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        internalList.stream().forEach(p -\u003e unlinkProjectFromClient(p));","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"     * Transfers all projects linked to {@code original} to {@code target}.","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"    public void transferLinkedProjects(Client original, Client target) {","lastModifiedDate":"2023-03-26"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(original, target);","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"        Iterator\u003cProject\u003e linkedProjects \u003d original.getLinkedProjects().iterator();","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        while (linkedProjects.hasNext()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"            Project linkedProject \u003d linkedProjects.next();","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"            linkedProject.linkToClient(target);","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"            target.linkProject(linkedProject);","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"            setProject(linkedProject, linkedProject);","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"     * Unlinks all linked projects from {@code client}.","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"    public void removeAllLinks(Client client) {","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        Iterator\u003cProject\u003e linkedProjectsIterator \u003d client.getLinkedProjects().iterator();","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        while (linkedProjectsIterator.hasNext()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"            Project toRemove \u003d linkedProjectsIterator.next();","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"            toRemove.unlinkFromClient();","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"            setProject(toRemove, toRemove);","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"     * Marks {@code project} as done.","lastModifiedDate":"2023-03-26"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"    public void markProjectAsDone(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"        project.markAsDone();","lastModifiedDate":"2023-03-26"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"        setProject(project, project);","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"     * Marks {@code project} as not done.","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"    public void markProjectAsNotDone(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"        project.markAsUndone();","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"        setProject(project, project);","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"Johnchiahk"},"content":"     * Returns number of Overdue projects.","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"Johnchiahk"},"content":"    public int noOverdueProjects() {","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"Johnchiahk"},"content":"        int overdueProjects \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"Johnchiahk"},"content":"        int projectSize \u003d this.internalList.size();","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"Johnchiahk"},"content":"        ObservableList\u003cProject\u003e projectList \u003d this.internalList;","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"Johnchiahk"},"content":"        for (int i \u003d 0; i \u003c projectSize; i++) {","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"Johnchiahk"},"content":"            if (projectList.get(i).isOverdue()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"Johnchiahk"},"content":"                overdueProjects++;","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"Johnchiahk"},"content":"        return overdueProjects;","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"Johnchiahk"},"content":"     * Returns number of Done projects.","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"Johnchiahk"},"content":"    public int noDoneProjects() {","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"Johnchiahk"},"content":"        int doneProjects \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"Johnchiahk"},"content":"        ObservableList\u003cProject\u003e projectList \u003d this.internalList;","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"Johnchiahk"},"content":"        int projectSize \u003d this.internalList.size();","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"Johnchiahk"},"content":"        for (int i \u003d 0; i \u003c projectSize; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"Johnchiahk"},"content":"            if (projectList.get(i).getStatus().getStatus()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"Johnchiahk"},"content":"                doneProjects++;","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"Johnchiahk"},"content":"        return doneProjects;","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"Johnchiahk"},"content":"     * Returns number of Not Done projects.","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"Johnchiahk"},"content":"    public int noNotDoneProjects() {","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"Johnchiahk"},"content":"        int projectSize \u003d this.internalList.size();","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"Johnchiahk"},"content":"        ObservableList\u003cProject\u003e projectList \u003d this.internalList;","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"Johnchiahk"},"content":"        int notDoneProjects \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"Johnchiahk"},"content":"        for (int i \u003d 0; i \u003c projectSize; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"Johnchiahk"},"content":"            if (!projectList.get(i).getStatus().getStatus()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"Johnchiahk"},"content":"                notDoneProjects++;","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"Johnchiahk"},"content":"        return notDoneProjects;","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"Johnchiahk"},"content":"     * Returns contents of list of project.","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":219,"author":{"gitId":"Johnchiahk"},"content":"    public String getProjectsContent() {","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"Johnchiahk"},"content":"        int projectSize \u003d this.internalList.size();","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"Johnchiahk"},"content":"        ObservableList\u003cProject\u003e projectList \u003d this.internalList;","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"Johnchiahk"},"content":"        int overdueProjects \u003d noOverdueProjects();","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"Johnchiahk"},"content":"        int doneProjects \u003d noDoneProjects();","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"Johnchiahk"},"content":"        int notDoneProjects \u003d noNotDoneProjects();","lastModifiedDate":"2023-03-29"},{"lineNumber":225,"author":{"gitId":"Johnchiahk"},"content":"        return \"Total number of Projects: \" + projectSize + \"\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"Johnchiahk"},"content":"                + \"Total number of Projects OVERDUE: \" + overdueProjects + \"\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"Johnchiahk"},"content":"                + \"Total number of Projects DONE: \" + doneProjects + \"\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"Johnchiahk"},"content":"                + \"Total number of Projects NOT DONE: \" + notDoneProjects + \"\\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-05"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cProject\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"    public Iterator\u003cProject\u003e iterator() {","lastModifiedDate":"2023-03-07"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-05"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"                || (other instanceof UniqueProjectList // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"                        \u0026\u0026 internalList.equals(((UniqueProjectList) other).internalList));","lastModifiedDate":"2023-03-05"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-05"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-05"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"     * Returns true if {@code projects} contains only unique projects.","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"    private boolean projectsAreUnique(List\u003cProject\u003e projects) {","lastModifiedDate":"2023-03-07"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"        for (int i \u003d 0; i \u003c projects.size() - 1; i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"zrei"},"content":"            for (int j \u003d i + 1; j \u003c projects.size(); j++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"                if (projects.get(i).isSameProject(projects.get(j))) {","lastModifiedDate":"2023-03-06"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"                    return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"                }","lastModifiedDate":"2023-03-05"},{"lineNumber":264,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":265,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":266,"author":{"gitId":"zrei"},"content":"        return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":267,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":268,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"zrei":208,"Johnchiahk":60}},{"path":"src/main/java/arb/model/project/exceptions/DuplicateProjectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":" * Signals that the operation will result in duplicate Projects (Projects are considered duplicates if","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":" * they have the same identity).","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"public class DuplicateProjectException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"    public DuplicateProjectException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"        super(\"Operation would result in duplicate projects\");","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"zrei":11}},{"path":"src/main/java/arb/model/project/exceptions/ProjectNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":" * Signals that the operation is unable to find the specified project.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"public class ProjectNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"zrei":6}},{"path":"src/main/java/arb/model/project/predicates/IsOfStatusPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.model.project.predicates;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Status;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":" * Tests that a {@code Project} is of the given {@code Status}.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"public class IsOfStatusPredicate implements Predicate\u003cProject\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    private final Status statusToCheck;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     * Constructs a {@code IsOfStatusPredicate} using the given {@code Status}.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    public IsOfStatusPredicate(Status status) {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"        statusToCheck \u003d status;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    public boolean test(Project project) {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        return project.getStatus().equals(statusToCheck);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"                || (other instanceof IsOfStatusPredicate // handles null","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"                \u0026\u0026 statusToCheck.equals(((IsOfStatusPredicate) other).statusToCheck));","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        return statusToCheck.hashCode();","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"mmaimer33":38}},{"path":"src/main/java/arb/model/project/predicates/LinkedClientNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.util.StringUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" * Tests that a {@code Project}\u0027s linked client\u0027s name contains any of the keywords given.","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class LinkedClientNameContainsKeywordsPredicate implements Predicate\u003cProject\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    private final Set\u003cString\u003e keywords;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public LinkedClientNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        this.keywords \u003d new HashSet\u003c\u003e(keywords);","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public boolean test(Project project) {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"                .anyMatch(n -\u003e project.isClientPresent()","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"                        \u0026\u0026 StringUtil.containsWordIgnoreCase(project.getClientName(), n));","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                || (other instanceof LinkedClientNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 keywords.equals(((LinkedClientNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        return keywords.hashCode();","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"zrei":39}},{"path":"src/main/java/arb/model/project/predicates/ProjectContainsTagsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":" * Tests that a {@code Project} contains any of the tags given.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class ProjectContainsTagsPredicate implements Predicate\u003cProject\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public ProjectContainsTagsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"        tags \u003d keywords.stream().map(s -\u003e new Tag(s.toLowerCase())).collect(Collectors.toSet());","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public boolean test(Project project) {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        return tags.stream()","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"                .anyMatch(t -\u003e project.getTags().contains(t));","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"                || (other instanceof ProjectContainsTagsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 tags.equals(((ProjectContainsTagsPredicate) other).tags)); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        return tags.hashCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"zrei":36,"mmaimer33":2}},{"path":"src/main/java/arb/model/project/predicates/ProjectWithinTimeframePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":" * Tests that a {@code Project}\u0027s deadline falls within the given timeframe.","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"public class ProjectWithinTimeframePredicate implements Predicate\u003cProject\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    private final Optional\u003cDeadline\u003e start;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    private final Optional\u003cDeadline\u003e end;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    * Builds a {@code ProjectWithinTimeframePredicate} tjat tests if a","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    * {@code Project}\u0027s deadline falls within the timeframe {@code start} to","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    * {@code end}.","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    */","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public ProjectWithinTimeframePredicate(Deadline start, Deadline end) {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        this.start \u003d Optional.ofNullable(start);","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        this.end \u003d Optional.ofNullable(end);","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public boolean test(Project project) {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        return project.isDeadlinePresent()","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"            \u0026\u0026 start.map(d -\u003e project.getDeadline().compareTo(d) \u003e\u003d 0).orElse(true)","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"            \u0026\u0026 end.map(d -\u003e d.compareTo(project.getDeadline()) \u003e\u003d 0).orElse(true);","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"                || (other instanceof ProjectWithinTimeframePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 start.equals(((ProjectWithinTimeframePredicate) other).start) // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 end.equals(((ProjectWithinTimeframePredicate) other).end));","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        return Objects.hash(start, end);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zrei":46}},{"path":"src/main/java/arb/model/project/predicates/TitleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" * Tests that a {@code Project}\u0027s {@code Title} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class TitleContainsKeywordsPredicate implements Predicate\u003cProject\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    private final Set\u003cString\u003e keywords;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public TitleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        this.keywords \u003d new HashSet\u003c\u003e(keywords);","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public boolean test(Project project) {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(project.getTitle().fullTitle, keyword));","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"                || (other instanceof TitleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 keywords.equals(((TitleContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        return keywords.hashCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"verydaftpunk":1,"zrei":37}},{"path":"src/main/java/arb/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zrei":2,"-":52}},{"path":"src/main/java/arb/model/tag/TagMapping.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":" * Stores how many clients and projects is tagged by a certain {@code Tag}.","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":" * Guarantees: {@code Tag} tags at least one client or project in the address book.","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"public class TagMapping {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    private final Tag tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    private int numberOfClientsTagged;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    private int numberOfProjectsTagged;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"     * Constructs a {@code TagMapping}.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"     * @param tag A tag to store the mappings of.","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    public TagMapping(Tag tag) {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        this.numberOfClientsTagged \u003d 0;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        this.numberOfProjectsTagged \u003d 0;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"     * Increases the number of clients tagged by the {@code Tag}.","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public void tagClient() {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        this.numberOfClientsTagged +\u003d 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"     * Increases the number of projects tagged by the {@code Tag}.","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public void tagProject() {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        this.numberOfProjectsTagged +\u003d 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"     * Decreases the number of clients tagged by the {@code Tag}.","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    public void untagClient() {","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        this.numberOfClientsTagged -\u003d 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        assert this.numberOfClientsTagged \u003e\u003d 0 : \"Number of client tags are negative\";","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"     * Decreases the number of projects tagged by the {@code Tag}.","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    public void untagProject() {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        this.numberOfProjectsTagged -\u003d 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        assert this.numberOfProjectsTagged \u003e\u003d 0 : \"Number of project tags are negative\";","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"     * Resets the number of clients tagged by the {@code Tag} to 0.","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    public void resetClientTaggings() {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        this.numberOfClientsTagged \u003d 0;","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"     * Resets the number of projects tagged by the {@code Tag} to 0.","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    public void resetProjectTaggings() {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        this.numberOfProjectsTagged \u003d 0;","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"     * Returns true if {@code otherTagMapping} wraps around the same","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"     * {@Tag}.","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    public boolean isSameTagMapping(TagMapping otherTagMapping) {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        return this.tag.equals(otherTagMapping.tag);","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"     * Returns true if {@code otherTag} is the same tag as the","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"     * wrapped around {@code Tag}.","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    public boolean isSameTagMapping(Tag otherTag) {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        return this.tag.equals(otherTag);","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"     * Returns true if {@code Tag} is not tagging any client or project.","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    public boolean noObjectsTagged() {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        return this.numberOfClientsTagged \u003d\u003d 0","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 this.numberOfProjectsTagged \u003d\u003d 0;","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    public int getNumberOfClientsTagged() {","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        return this.numberOfClientsTagged;","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    public int getNumberOfProjectsTagged() {","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        return this.numberOfProjectsTagged;","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    public Tag getTag() {","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        return this.tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object otherObject) {","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        if (this \u003d\u003d otherObject) {","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"        return (otherObject instanceof TagMapping)","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 ((TagMapping) otherObject).tag.equals(tag)","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 ((TagMapping) otherObject).numberOfClientsTagged \u003d\u003d numberOfClientsTagged","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 ((TagMapping) otherObject).numberOfProjectsTagged \u003d\u003d numberOfProjectsTagged;","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        return Objects.hash(tag, numberOfClientsTagged, numberOfProjectsTagged);","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":123}},{"path":"src/main/java/arb/model/tag/UniqueTagMappingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.tag.exceptions.DuplicateTagMappingException;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.tag.exceptions.TagMappingNotFoundException;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" * A list of tag mappings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" * A tag mapping is considered unique by comparing using {@code TagMapping#isSameTagMapping(TagMapping)}. As such,","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":" * adding and updating of tag mappings uses TagMapping#isSameTagMapping(TagMapping) for equality so as to ensure that","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":" * the tag mapping being added or updated is unique in terms of identity in the UniqueTagMappingList. However, the","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":" * removal of a tag mapping uses TagMapping#equals(Object) so as to ensure that the tag mapping with exactly the same","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":" * fields will be removed.","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":" *","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":" *","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":" * @see TagMapping#isSameTagMapping(TagMapping)","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"public class UniqueTagMappingList implements Iterable\u003cTagMapping\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    private final ObservableList\u003cTagMapping\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    private final ObservableList\u003cTagMapping\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"     * Returns true if the list contains an equivalent tag mapping as the given argument.","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    private boolean contains(TagMapping toCheck) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTagMapping);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"     * Returns true if the list contains a tag mapping wrapping around the given tag.","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    private boolean contains(Tag tag) {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        return internalList.stream().anyMatch(t -\u003e t.isSameTagMapping(tag));","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"     * Adds a tag mapping to the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"     * The tag mapping must not already exist in the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    private void add(TagMapping toAdd) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"            throw new DuplicateTagMappingException();","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"     * Replaces the tag mapping {@code target} in the list with {@code editedTagMapping}.","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"     * The tag mapping identity of {@code editedTagMapping} must not be the same as another existing tag mapping","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"     * in the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    private void setTagMapping(TagMapping target, TagMapping editedTagMapping) {","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(target, editedTagMapping);","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"            throw new TagMappingNotFoundException();","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        if (!target.isSameTagMapping(editedTagMapping) \u0026\u0026 contains(editedTagMapping)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"            throw new DuplicateTagMappingException();","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        internalList.set(index, editedTagMapping);","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"     * Removes the equivalent tag mapping from the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"     * The tag mapping must exist in the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    private void remove(TagMapping toRemove) {","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"            throw new TagMappingNotFoundException();","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"     * Replaces the contents of this list with {@code tagMappings}.","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"     * {@code tagMappings} must not contain duplicate tag mappings.","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    public void setTagMappings(List\u003cTagMapping\u003e tagMappings) {","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(tagMappings);","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        if (!tagMappingsAreUnique(tagMappings)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"            throw new DuplicateTagMappingException();","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        internalList.setAll(tagMappings);","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"     * Replaces the contents of this list with the client and project tags","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"     * of {@code clients} and {@code projects}.","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"    public void setTagMappings(List\u003cClient\u003e clients, List\u003cProject\u003e projects) {","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(clients, projects);","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"        internalList.clear();","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"        clients.stream().forEach(c -\u003e addClientTags(c));","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        projects.stream().forEach(p -\u003e addProjectTags(p));","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"    public ObservableList\u003cTagMapping\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"     * Updates the list with the tag mappings from the newly added {@code client}.","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"    public void addClientTags(Client client) {","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"        for (Tag t : client.getTags()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"            addClientTag(t);","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"     * Updates the list with the tag mappings from the newly added {@code project}.","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"    public void addProjectTags(Project project) {","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"        for (Tag t : project.getTags()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"            addProjectTag(t);","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"     * Updates the tag mappings in the list to match {@code editedClient}.","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"    public void editClientTags(Client originalClient, Client editedClient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(originalClient, editedClient);","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"        for (Tag t : originalClient.getTags()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"            removeClientTag(t);","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        for (Tag t : editedClient.getTags()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"            addClientTag(t);","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"     * Updates the tag mappings in the list to match {@code editedProject}.","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"    public void editProjectTags(Project originalProject, Project editedProject) {","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"        requireAllNonNull(originalProject, editedProject);","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"        for (Tag t : originalProject.getTags()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"            removeProjectTag(t);","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"        for (Tag t : editedProject.getTags()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"            addProjectTag(t);","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"     * Updates the tag mappings in the list to remove mappings for {@code deletedClient}.","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"    public void deleteClientTags(Client deletedClient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        requireNonNull(deletedClient);","lastModifiedDate":"2023-03-21"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"        for (Tag t : deletedClient.getTags()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"            removeClientTag(t);","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"     * Updates the tag mappings in the list to remove mappings for {@code deletedProject}.","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"    public void deleteProjectTags(Project deletedProject) {","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"        requireNonNull(deletedProject);","lastModifiedDate":"2023-03-21"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"        for (Tag t : deletedProject.getTags()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"            removeProjectTag(t);","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"     * Resets any client tag mappings in the list.","lastModifiedDate":"2023-03-21"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"    public void resetClientTagMappings() {","lastModifiedDate":"2023-03-21"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"        internalList.stream().forEach(t -\u003e t.resetClientTaggings());","lastModifiedDate":"2023-03-21"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"        setTagMappings(internalList.stream().filter(t -\u003e !t.noObjectsTagged())","lastModifiedDate":"2023-03-21"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-21"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"     * Resets any project tag mappings in the list.","lastModifiedDate":"2023-03-21"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"    public void resetProjectTagMappings() {","lastModifiedDate":"2023-03-21"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"        internalList.stream().forEach(t -\u003e t.resetProjectTaggings());","lastModifiedDate":"2023-03-21"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"        setTagMappings(internalList.stream().filter(t -\u003e !t.noObjectsTagged())","lastModifiedDate":"2023-03-21"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-21"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"    private void addClientTag(Tag tag) {","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"        if (!contains(tag)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"            add(new TagMapping(tag));","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"        TagMapping mapping \u003d getTagMapping(tag);","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        mapping.tagClient();","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"        setTagMapping(mapping, mapping);","lastModifiedDate":"2023-03-20"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"    private void removeClientTag(Tag tag) {","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"        TagMapping mapping \u003d getTagMapping(tag);","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"        mapping.untagClient();","lastModifiedDate":"2023-03-20"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"        setTagMapping(mapping, mapping);","lastModifiedDate":"2023-03-20"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        if (mapping.noObjectsTagged()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"            remove(mapping);","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"    private void addProjectTag(Tag tag) {","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"        if (!contains(tag)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"            add(new TagMapping(tag));","lastModifiedDate":"2023-03-20"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"        TagMapping mapping \u003d getTagMapping(tag);","lastModifiedDate":"2023-03-20"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"        mapping.tagProject();","lastModifiedDate":"2023-03-20"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"        setTagMapping(mapping, mapping);","lastModifiedDate":"2023-03-20"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"    private void removeProjectTag(Tag tag) {","lastModifiedDate":"2023-03-20"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"        TagMapping mapping \u003d getTagMapping(tag);","lastModifiedDate":"2023-03-20"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"        mapping.untagProject();","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"        setTagMapping(mapping, mapping);","lastModifiedDate":"2023-03-20"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"        if (mapping.noObjectsTagged()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"            remove(mapping);","lastModifiedDate":"2023-03-20"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"    private TagMapping getTagMapping(Tag tag) {","lastModifiedDate":"2023-03-20"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"        Iterator\u003cTagMapping\u003e iterator \u003d iterator();","lastModifiedDate":"2023-03-20"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"            TagMapping mapping \u003d iterator.next();","lastModifiedDate":"2023-03-20"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"            if (mapping.isSameTagMapping(tag)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"                return mapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":260,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"        throw new TagMappingNotFoundException();","lastModifiedDate":"2023-03-20"},{"lineNumber":264,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":265,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":266,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":267,"author":{"gitId":"zrei"},"content":"    public Iterator\u003cTagMapping\u003e iterator() {","lastModifiedDate":"2023-03-20"},{"lineNumber":268,"author":{"gitId":"zrei"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-20"},{"lineNumber":269,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":270,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":271,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":272,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":273,"author":{"gitId":"zrei"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-21"},{"lineNumber":274,"author":{"gitId":"zrei"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":275,"author":{"gitId":"zrei"},"content":"        } else if (other instanceof UniqueTagMappingList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":276,"author":{"gitId":"zrei"},"content":"            // disregard order of tag mappings in the list using a set","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"zrei"},"content":"            return new HashSet\u003c\u003e(internalList)","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"zrei"},"content":"                    .equals(new HashSet\u003c\u003e(((UniqueTagMappingList) other).internalList));","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":280,"author":{"gitId":"zrei"},"content":"        return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":281,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":282,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":283,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":284,"author":{"gitId":"zrei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":285,"author":{"gitId":"zrei"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-20"},{"lineNumber":286,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":287,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":288,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":289,"author":{"gitId":"zrei"},"content":"     * Returns true if {@code tagMappings} contains only unique tag mappings.","lastModifiedDate":"2023-03-20"},{"lineNumber":290,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":291,"author":{"gitId":"zrei"},"content":"    private boolean tagMappingsAreUnique(List\u003cTagMapping\u003e tagMappings) {","lastModifiedDate":"2023-03-20"},{"lineNumber":292,"author":{"gitId":"zrei"},"content":"        for (int i \u003d 0; i \u003c tagMappings.size() - 1; i++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":293,"author":{"gitId":"zrei"},"content":"            for (int j \u003d i + 1; j \u003c tagMappings.size(); j++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":294,"author":{"gitId":"zrei"},"content":"                if (tagMappings.get(i).isSameTagMapping(tagMappings.get(j))) {","lastModifiedDate":"2023-03-20"},{"lineNumber":295,"author":{"gitId":"zrei"},"content":"                    return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":296,"author":{"gitId":"zrei"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":297,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":298,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":299,"author":{"gitId":"zrei"},"content":"        return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":300,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":301,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":301}},{"path":"src/main/java/arb/model/tag/exceptions/DuplicateTagMappingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.tag.exceptions;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":" * Signals that the operation will result in duplicate TagMappings (TagMappings are considered","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":" * duplicates if they have the same name).","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"public class DuplicateTagMappingException extends RuntimeException {","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"    public DuplicateTagMappingException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"        super(\"Operation would result in duplicate tags\");","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":11}},{"path":"src/main/java/arb/model/tag/exceptions/TagMappingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.tag.exceptions;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":" * Signals that the operation is unable to find the specified tag mapping.","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"public class TagMappingNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":6}},{"path":"src/main/java/arb/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        return new Client[] {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"            new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"            new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"            new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"            new Client(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"            new Client(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"            new Client(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public static Project[] getSampleProjects() {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        return new Project[] {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"            new Project(new Title(\"Sky Painting\"), new Deadline(\"today\"), new Price(\"3\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"                getTagSet(\"painting\", \"commission\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"            new Project(new Title(\"Tree Sculpture\"), null, null,","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"                getTagSet(\"sculpture\", \"personal\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"            new Project(new Title(\"Self Portrait\"), new Deadline(\"next week\"), null,","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"                getTagSet(\"personal\", \"painting\"))","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        };","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"            sampleAb.addClient(sampleClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        for (Project sampleProject : getSampleProjects()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"            sampleAb.addProject(sampleProject);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"zrei":35,"-":35}},{"path":"src/main/java/arb/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":" * Represents a storage for {@link arb.model.AddressBook}.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zrei":4,"-":41}},{"path":"src/main/java/arb/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        this.phone \u003d Optional.ofNullable(phone).orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        this.email \u003d Optional.ofNullable(email).orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        phone \u003d Optional.ofNullable(source.getPhone()).map(p -\u003e p.value).orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        email \u003d Optional.ofNullable(source.getEmail()).map(e -\u003e e.value).orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Client} object.","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        final List\u003cTag\u003e clientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"            clientTags.add(tag.toModelType());","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        if (phone !\u003d null \u0026\u0026 !Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        final Phone modelPhone \u003d Optional.ofNullable(phone).map(p -\u003e new Phone(p)).orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        if (email !\u003d null \u0026\u0026 !Email.isValidEmail(email)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        final Email modelEmail \u003d Optional.ofNullable(email).map(e -\u003e new Email(e)).orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(clientTags);","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"        return new Client(modelName, modelPhone, modelEmail, modelTags);","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zrei":31,"-":61}},{"path":"src/main/java/arb/storage/JsonAdaptedProject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package arb.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.project.Status;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":" * Jackson-friendly version of {@link Project}.","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"public class JsonAdaptedProject {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Project\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAdaptedProject.class);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"    private final String title;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"    private final String deadline;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"    private final String status;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"    private final String price;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    private final String linkedClient;","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a {@code JsonAdaptedProject} with the given project details.","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    public JsonAdaptedProject(@JsonProperty(\"title\") String title,","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"            @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"            @JsonProperty(\"status\") String status,","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"            @JsonProperty(\"price\") String price,","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"            @JsonProperty(\"linkedClient\") String linkedClient,","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"        this.deadline \u003d Optional.ofNullable(deadline).orElse(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"        this.price \u003d Optional.ofNullable(price).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        this.linkedClient \u003d Optional.ofNullable(linkedClient).orElse(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"     * Converts a given {@code Project} into this class for Jackson use.","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"    public JsonAdaptedProject(Project source) {","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        logger.info(\"Logging project: \" + source);","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"        this.title \u003d source.getTitle().fullTitle;","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"        this.deadline \u003d Optional.ofNullable(source.getDeadline()).map(d -\u003e d.dueDate.toString()).orElse(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        this.status \u003d Boolean.toString(source.getStatus().getStatus());","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"        this.price \u003d Optional.ofNullable(source.getPrice()).map(pr -\u003e pr.getPrice().toString()).orElse(null);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        this.linkedClient \u003d Optional.ofNullable(source.getClientName()).orElse(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        this.tagged.addAll(source.getTags().stream()","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"     * Converts this Jackson-friendly adapted project object into the model\u0027s {@code Project} object.","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted project.","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"    public Project toModelType(AddressBook ab) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        final List\u003cTag\u003e projectTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"            projectTags.add(tag.toModelType());","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"Johnchiahk"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"Johnchiahk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"Johnchiahk"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"Johnchiahk"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"Johnchiahk"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"Johnchiahk"},"content":"        if (deadline !\u003d null \u0026\u0026 !Deadline.isValidDeadline(deadline)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"Johnchiahk"},"content":"            throw new IllegalValueException((Deadline.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"Johnchiahk"},"content":"        final Deadline modelDeadline \u003d Optional.ofNullable(deadline).map(d -\u003e new Deadline(d)).orElse(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"Johnchiahk"},"content":"        if (price !\u003d null \u0026\u0026 !Price.isValidPrice(price)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"Johnchiahk"},"content":"            throw new IllegalValueException((Price.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"Johnchiahk"},"content":"        final Price modelPrice \u003d Optional.ofNullable(price).map(pr -\u003e new Price(pr)).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(projectTags);","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        Project project \u003d new Project(modelTitle, modelDeadline, modelPrice, modelTags);","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"        if (Boolean.parseBoolean(status)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"Johnchiahk"},"content":"            project.markAsDone();","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        if (linkedClient !\u003d null \u0026\u0026 !Name.isValidName(linkedClient)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        if (linkedClient !\u003d null \u0026\u0026 !ab.hasClient(new Name(linkedClient))) {","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"            throw new IllegalValueException(\"This client is not found in the addressbook!\");","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        if (linkedClient !\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"            ab.linkProjectToClient(new Name(linkedClient), project);","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"Johnchiahk"},"content":"        return project;","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":48,"Johnchiahk":81}},{"path":"src/main/java/arb/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zrei":3,"-":45}},{"path":"src/main/java/arb/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.commons.util.FileUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.commons.util.JsonUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zrei":7,"-":73}},{"path":"src/main/java/arb/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Clients list contains duplicate client(s).\";","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECT \u003d \"Projects list contains duplicate project(s).\";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"    private final List\u003cJsonAdaptedProject\u003e projects \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given clients and projects.","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients,","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"            @JsonProperty(\"projects\") List\u003cJsonAdaptedProject\u003e projects) {","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"        this.projects.addAll(projects);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"        projects.addAll(source.getProjectList().stream().map(JsonAdaptedProject::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"            if (addressBook.hasClient(client)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"            addressBook.addClient(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"        for (JsonAdaptedProject jsonAdaptedProject: projects) {","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"            Project project \u003d jsonAdaptedProject.toModelType(addressBook);","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"            if (addressBook.hasProject(project)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"                throw new IllegalValueException((MESSAGE_DUPLICATE_PROJECT));","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"            addressBook.addProject(project);","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zrei":15,"Johnchiahk":17,"-":44}},{"path":"src/main/java/arb/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.util.JsonUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zrei":5,"-":42}},{"path":"src/main/java/arb/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zrei":5,"-":27}},{"path":"src/main/java/arb/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":6,"-":72}},{"path":"src/main/java/arb/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" * Represents a storage for {@link arb.model.UserPrefs}.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"     * Saves the given {@link arb.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zrei":6,"-":30}},{"path":"src/main/java/arb/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"         * @see arb.logic.Logic#execute(String)","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"zrei":5,"-":80}},{"path":"src/main/java/arb/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zrei":3,"-":99}},{"path":"src/main/java/arb/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.logic.Logic;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.ui.client.ClientListPanel;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.ui.project.ProjectListPanel;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.ui.tag.TagMappingListPanel;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    private ProjectListPanel projectListPanel;","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    private TagMappingListPanel tagMappingListPanel;","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"    private Label listLabel;","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getSortedClientList());","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"        projectListPanel \u003d new ProjectListPanel(logic.getSortedProjectList());","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        tagMappingListPanel \u003d new TagMappingListPanel(logic.getTagMappingList());","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        setCurrentlyShownList(ListType.CLIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"mmaimer33"},"content":"        listLabel.prefWidth(primaryStage.getWidth());","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"mmaimer33"},"content":"        listLabel.setFont(new Font(24));","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"    public ClientListPanel getClientListPanel() {","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"        return clientListPanel;","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"    public ProjectListPanel getProjectListPanel() {","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"        return projectListPanel;","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"    public TagMappingListPanel getTagMappingListPanel() {","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"        return tagMappingListPanel;","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"    private void replaceShownList(Node newList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"        this.listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"        this.listPanelPlaceholder.getChildren().add(newList);","lastModifiedDate":"2023-03-20"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"    private void showClientList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"        this.logic.setListType(ListType.CLIENT);","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"mmaimer33"},"content":"        this.listLabel.setText(\"Client List\");","lastModifiedDate":"2023-03-22"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"        this.replaceShownList(clientListPanel.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"    private void showProjectList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"        this.logic.setListType(ListType.PROJECT);","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"mmaimer33"},"content":"        this.listLabel.setText(\"Project List\");","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"        this.replaceShownList(projectListPanel.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"    private void showTagList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"        this.logic.setListType(ListType.TAG);","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        this.listLabel.setText(\"Tag List\");","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"        this.replaceShownList(tagMappingListPanel.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"    private void setCurrentlyShownList(ListType listToBeShown) {","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"        switch (listToBeShown) {","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"        case PROJECT:","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"            showProjectList();","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"        case CLIENT:","lastModifiedDate":"2023-03-05"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"            showClientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"        case TAG:","lastModifiedDate":"2023-03-20"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"            showTagList();","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"        default:","lastModifiedDate":"2023-03-05"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"     * @see arb.logic.Logic#execute(String)","lastModifiedDate":"2023-02-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"            logic.setLinkMode(commandResult.shouldEnterLinkMode());","lastModifiedDate":"2023-03-25"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"            logger.info(\"Display \" + commandResult.getListToBeShown() + \" list.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"            setCurrentlyShownList(commandResult.getListToBeShown());","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zrei":72,"-":185,"mmaimer33":9}},{"path":"src/main/java/arb/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zrei":1,"-":27}},{"path":"src/main/java/arb/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":1,"-":27}},{"path":"src/main/java/arb/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zrei":1,"-":12}},{"path":"src/main/java/arb/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.MainApp;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.commons.util.StringUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.logic.Logic;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zrei":5,"-":83}},{"path":"src/main/java/arb/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.MainApp;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zrei":2,"-":86}},{"path":"src/main/java/arb/ui/client/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui.client;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"public class ClientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    private static final String FXML \u003d \"client/ClientListCard.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public final Client client;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    private VBox contentsPane;;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    private Label numberOfProjectsLinked;","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"     * Creates a {@code ClientCard} with the given {@code Client} and index to display.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        this.client \u003d client;","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        if (client.isPhonePresent()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"            phone.setText(client.getPhone().value);","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"            contentsPane.getChildren().remove(phone);","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        if (client.isEmailPresent()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"            email.setText(client.getEmail().value);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"            contentsPane.getChildren().remove(email);","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        numberOfProjectsLinked.setText(\"Number of projects: \" + client.getNumberOfProjectsLinked());","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        client.getTags().stream()","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        if (!(other instanceof ClientCard)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        ClientCard card \u003d (ClientCard) other;","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zrei":35,"-":60}},{"path":"src/main/java/arb/ui/client/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui.client;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    private static final String FXML \u003d \"client/ClientListPanel.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public ClientListPanel(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        super(FXML);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Client} using a {@code ClientCard}.","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    class ClientListViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"                setGraphic(null);","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"                setText(null);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"            } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"                setGraphic(new ClientCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"zrei":50}},{"path":"src/main/java/arb/ui/project/ProjectCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui.project;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":" * A UI component that displays information of a {@code Project}.","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"public class ProjectCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    private static final String FXML \u003d \"project/ProjectListCard.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public final Project project;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    private VBox contentsPane;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    private Label title;","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    private Label deadline;","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    private Label status;","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"    private Label price;","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"    @FXML","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    private Label forClient;","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    private Label id;","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"     * Creates a {@code ProjectCard} with the given {@code Project} and index to display.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    public ProjectCard(Project project, int displayedIndex) {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        super(FXML);","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        this.project \u003d project;","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"        title.setText(project.getTitle().fullTitle);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        if (project.isDeadlinePresent()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"            deadline.setText(project.getDeadline().toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"            contentsPane.getChildren().remove(deadline);","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"        if (project.isPricePresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"            price.setText(project.getPrice().toString());","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"            contentsPane.getChildren().remove(price);","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        if (project.isClientPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"            forClient.setText(\"For Client: \" + project.getClientName());","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"            contentsPane.getChildren().remove(forClient);","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"        status.setText(\"Status: \" + (project.isOverdue() ? \"OVERDUE\" : project.getStatus().toString()));","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"mmaimer33"},"content":"        if (project.isOverdue()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"mmaimer33"},"content":"            status.setStyle(\"-fx-text-fill: #8112db;\");","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        project.getTags().stream()","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        if (!(other instanceof ProjectCard)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        // state check","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"        ProjectCard card \u003d (ProjectCard) other;","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 project.equals(card.project);","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"verydaftpunk":2,"zrei":89,"Johnchiahk":7,"mmaimer33":4}},{"path":"src/main/java/arb/ui/project/ProjectListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui.project;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":" * Panel containing the list of projects.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"public class ProjectListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    private static final String FXML \u003d \"project/ProjectListPanel.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ProjectListPanel.class);","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    private ListView\u003cProject\u003e projectListView;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"     * Creates a {@code ProjectListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public ProjectListPanel(ObservableList\u003cProject\u003e projectList) {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        super(FXML);","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        projectListView.setItems(projectList);","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        projectListView.setCellFactory(listView -\u003e new ProjectListViewCell());","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Project} using a {@code ProjectCard}.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    class ProjectListViewCell extends ListCell\u003cProject\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        protected void updateItem(Project project, boolean empty) {","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"            super.updateItem(project, empty);","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"            if (empty || project \u003d\u003d null) {","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"                setText(null);","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"            } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"                setGraphic(new ProjectCard(project, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zrei":50}},{"path":"src/main/java/arb/ui/tag/TagMappingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui.tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import arb.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" * An UI component that displays information of a {@code TagMapping}.","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class TagMappingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    private static final String FXML \u003d \"tag/TagMappingListCard.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    public final TagMapping tagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    private VBox contentsPane;;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    private Label name;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    private Label id;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    private Label numberOfClientsTagged;","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    private Label numberOfProjectsTagged;","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"     * Creates a {@code TagMappingCard} with the given {@code TagMapping} and index to display.","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    public TagMappingCard(TagMapping tagMapping, int displayedIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        super(FXML);","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        this.tagMapping \u003d tagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        name.setText(tagMapping.getTag().tagName);","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        numberOfClientsTagged.setText(\"Number of clients tagged: \" + tagMapping.getNumberOfClientsTagged());","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        numberOfProjectsTagged.setText(\"Number of projects tagged: \" + tagMapping.getNumberOfProjectsTagged());","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        if (!(other instanceof TagMappingCard)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        // state check","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        TagMappingCard card \u003d (TagMappingCard) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"                \u0026\u0026 tagMapping.equals(card.tagMapping);","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zrei":70}},{"path":"src/main/java/arb/ui/tag/TagMappingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui.tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.commons.core.LogsCenter;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":" * Panel containing the list of tags.","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"public class TagMappingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    private static final String FXML \u003d \"tag/TagMappingListPanel.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TagMappingListPanel.class);","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    private ListView\u003cTagMapping\u003e tagMappingListView;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"     * Creates a {@code TagMappingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public TagMappingListPanel(ObservableList\u003cTagMapping\u003e tagMappingList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        super(FXML);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        tagMappingListView.setItems(tagMappingList);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        tagMappingListView.setCellFactory(listView -\u003e new TagMappingListViewCell());","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code TagMapping}","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"     * using a {@code TagMappingCard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    class TagMappingListViewCell extends ListCell\u003cTagMapping\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        protected void updateItem(TagMapping tagMapping, boolean empty) {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"            super.updateItem(tagMapping, empty);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"            if (empty || tagMapping \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"                setText(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"            } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"                setGraphic(new TagMappingCard(tagMapping, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":51}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" style\u003d\"-fx-background-color: #DAD6C9; -fx-text-fill: #181A19; -fx-border-width: 0px;\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"         \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"      \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"mmaimer33":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"mmaimer33"},"content":"    -fx-background-color: #7DAF9C;","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"mmaimer33"},"content":"    -fx-background-color: #23967F","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"mmaimer33"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"mmaimer33"},"content":"     -fx-border-width: 0.5px","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"mmaimer33"},"content":"    -fx-background-color: #DB93B0;","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"mmaimer33"},"content":"    -fx-control-inner-background: #DB93B0;","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"mmaimer33"},"content":"    -fx-font-family: \"Amiko\";","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"mmaimer33"},"content":"    -fx-text-fill: #181A19;","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"mmaimer33"},"content":"    -fx-border-width: 0px;","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":160,"author":{"gitId":"mmaimer33"},"content":"    -fx-text-fill: #181A19;","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":283,"author":{"gitId":"mmaimer33"},"content":"    -fx-background-color: derive(#2B2A2A, 20%);","lastModifiedDate":"2023-03-22"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"mmaimer33"},"content":"    -fx-background-color: derive(#8D8C8C, 50%);","lastModifiedDate":"2023-03-22"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"zrei"},"content":"#filterField, #clientListPanel, #clientWebpage {","lastModifiedDate":"2023-02-28"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"mmaimer33"},"content":"    -fx-background-color: transparent, #DB93B0, transparent, #DB93B0;","lastModifiedDate":"2023-03-22"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"mmaimer33"},"content":"    -fx-text-fill: #E3E3E3;","lastModifiedDate":"2023-03-22"},{"lineNumber":345,"author":{"gitId":"mmaimer33"},"content":"    -fx-background-color: #453A89;","lastModifiedDate":"2023-03-22"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"zrei":1,"-":334,"mmaimer33":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Artistic AddressBook (ArB)\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-background-color: #5B4B49; -fx-text-fill: #E3E3E3; -fx-font: 20 Amiko;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: #DAD6C9;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" style\u003d\"-fx-background-color: #DB93B0; -fx-control-inner-background: #DB93B0;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"        \u003cVBox fx:id\u003d\"clientList\" alignment\u003d\"CENTER\" minWidth\u003d\"340\" prefWidth\u003d\"340\" style\u003d\"-fx-background-color: #F7BFB4;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"          \u003cLabel fx:id\u003d\"listLabel\" alignment\u003d\"TOP_CENTER\" contentDisplay\u003d\"CENTER\" minWidth\u003d\"340\" prefWidth\u003d\"340\" style\u003d\"-fx-text-fill: #413A3A; -fx-font-size: 18; -fx-font-weight: bold;\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"          \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"            \u003cInsets top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":48,"mmaimer33":12}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" style\u003d\"-fx-background-color: #DB93B0;\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" style\u003d\"-fx-border-width: 0px; -fx-background-color: #DB93B0; -fx-control-inner-background: #DB93B0;\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"mmaimer33":2}},{"path":"src/main/resources/view/client/ClientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    \u003cVBox id\u003d\"contentsPane\" fx:id\u003d\"contentsPane\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"      \u003cLabel fx:id\u003d\"numberOfProjectsLinked\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$numberOfLinkedProjects\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":2,"-":34}},{"path":"src/main/resources/view/client/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"  \u003cListView fx:id\u003d\"clientListView\" prefHeight\u003d\"200.0\" prefWidth\u003d\"248.0\" style\u003d\"-fx-background-color: #F7BFB4;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":6,"mmaimer33":2}},{"path":"src/main/resources/view/project/ProjectListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    \u003cVBox id\u003d\"contentsPane\" fx:id\u003d\"contentsPane\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"      \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"      \u003cLabel fx:id\u003d\"forClient\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$for client\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"      \u003cLabel fx:id\u003d\"price\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$price\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"      \u003c!--Temp: need to change--\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zrei":36,"Johnchiahk":1,"mmaimer33":1}},{"path":"src/main/resources/view/project/ProjectListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"  \u003cListView fx:id\u003d\"projectListView\" style\u003d\"-fx-background-color: #F7BFB4;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zrei":6,"mmaimer33":2}},{"path":"src/main/resources/view/tag/TagMappingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    \u003cVBox id\u003d\"contentsPane\" fx:id\u003d\"contentsPane\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"      \u003cLabel fx:id\u003d\"numberOfClientsTagged\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$numberOfClientsTagged\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"      \u003cLabel fx:id\u003d\"numberOfProjectsTagged\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$numberOfProjectsTagged\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":3,"-":31}},{"path":"src/main/resources/view/tag/TagMappingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"  \u003cListView fx:id\u003d\"tagMappingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":1,"-":7}},{"path":"src/test/java/arb/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"zrei":1,"-":57}},{"path":"src/test/java/arb/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"zrei":1,"-":26}},{"path":"src/test/java/arb/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":2,"-":133}},{"path":"src/test/java/arb/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core.index;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        final Index fifthClientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        assertTrue(fifthClientIndex.equals(fifthClientIndex));","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        assertFalse(fifthClientIndex.equals(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        assertFalse(fifthClientIndex.equals(5.0f));","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        assertFalse(fifthClientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"zrei":9,"-":51}},{"path":"src/test/java/arb/commons/core/predicate/CombinedPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core.predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class CombinedPredicateTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"        Predicate\u003cString\u003e firstPredicate \u003d s -\u003e true;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        Predicate\u003cString\u003e secondPredicate \u003d s -\u003e false;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        CombinedPredicate\u003cString\u003e firstCombinedPredicate \u003d new CombinedPredicate\u003c\u003e(Arrays.asList(firstPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        CombinedPredicate\u003cString\u003e secondCombinedPredicate \u003d new CombinedPredicate\u003c\u003e(Arrays.asList(secondPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        CombinedPredicate\u003cString\u003e thirdCombinedPredicate \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"                new CombinedPredicate\u003c\u003e(Arrays.asList(firstPredicate, secondPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        CombinedPredicate\u003cString\u003e fourthCombinedPredicate \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"                new CombinedPredicate\u003c\u003e(Arrays.asList(secondPredicate, firstPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        assertTrue(firstCombinedPredicate.equals(firstCombinedPredicate)); // same object","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        assertFalse(firstCombinedPredicate.equals(secondCombinedPredicate)); // different predicates","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        assertFalse(firstCombinedPredicate.equals(null)); // null","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        assertFalse(firstCombinedPredicate.equals(0)); // different type","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        assertTrue(thirdCombinedPredicate.equals(fourthCombinedPredicate)); // same predicates, different order","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Ben\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Ben\", \"Alice\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        CombinedPredicate\u003cClient\u003e firstClientCombinedPredicate \u003d new CombinedPredicate\u003c\u003e(Arrays.asList(namePredicate));","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        CombinedPredicate\u003cClient\u003e secondClientCombinedPredicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"                new CombinedPredicate\u003c\u003e(Arrays.asList(secondNamePredicate));","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        assertTrue(firstClientCombinedPredicate.equals(secondClientCombinedPredicate));","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zrei":42}},{"path":"src/test/java/arb/commons/core/sorting/ProjectSortingOptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.core.sorting;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_SORTING_OPTION_DEADLINE;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_SORTING_OPTION_DEADLINE_ALIAS;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_SORTING_OPTION_PRICE;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_SORTING_OPTION_PRICE_ALIAS;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_SORTING_OPTION_TITLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_SORTING_OPTION_TITLE_ALIAS;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_DEADLINE_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"import static arb.model.Model.PROJECT_PRICE_COMPARATOR;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_TITLE_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"public class ProjectSortingOptionTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public void createProjectSortingOption() {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        // invalid sorting option","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ProjectSortingOption.getSortingOption(\"invalid\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        // check equality","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        assertEquals(PROJECT_DEADLINE_COMPARATOR, ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_DEADLINE)","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"                .getComparator());","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        assertEquals(PROJECT_TITLE_COMPARATOR, ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_TITLE)","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"                .getComparator());","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(PROJECT_PRICE_COMPARATOR, ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_PRICE)","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"                .getComparator());","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        // check equality when using aliases","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        assertEquals(PROJECT_DEADLINE_COMPARATOR, ProjectSortingOption","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"                .getSortingOption(VALID_SORTING_OPTION_DEADLINE_ALIAS)","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"                .getComparator());","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        assertEquals(PROJECT_TITLE_COMPARATOR, ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_TITLE_ALIAS)","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"                .getComparator());","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(PROJECT_PRICE_COMPARATOR, ProjectSortingOption","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"                .getSortingOption(VALID_SORTING_OPTION_PRICE_ALIAS)","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"                .getComparator());","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        final ProjectSortingOption byDeadline \u003d ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_DEADLINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"        final ProjectSortingOption byPrice \u003d ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_PRICE);","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        // same sorting option -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        assertTrue(byDeadline.equals(ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_DEADLINE)));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(byPrice.equals(ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_PRICE)));","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        // same sorting option from alias -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        assertTrue(byDeadline.equals(ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_DEADLINE_ALIAS)));","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(byPrice.equals(ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_PRICE_ALIAS)));","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        assertTrue(byDeadline.equals(byDeadline));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(byPrice.equals(byPrice));","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        assertFalse(byDeadline.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(byPrice.equals(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        assertFalse(byDeadline.equals(5.0f));","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(byPrice.equals(\"abcd\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        // different sorting option -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        assertFalse(byDeadline.equals(ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_TITLE)));","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(byPrice.equals(ProjectSortingOption.getSortingOption(VALID_SORTING_OPTION_TITLE)));","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":59,"Johnchiahk":16}},{"path":"src/test/java/arb/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"zrei":2,"-":34}},{"path":"src/test/java/arb/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"zrei":3,"-":105}},{"path":"src/test/java/arb/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Config;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zrei":4,"-":112}},{"path":"src/test/java/arb/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":2,"-":21}},{"path":"src/test/java/arb/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.testutil.SerializableTestClass;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.testutil.TestUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":3,"-":42}},{"path":"src/test/java/arb/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.commons.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"zrei":2,"-":141}},{"path":"src/test/java/arb/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.AMY;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.ListClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import arb.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import arb.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"import arb.storage.StorageManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"arb.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"        String deleteClientCommand \u003d \"delete-client 9\";","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        assertCommandException(deleteClientCommand, MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        String listClientCommand \u003d ListClientCommand.getCommandWords().get(0);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(listClientCommand, ListClientCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        // Execute add client command","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        String addClientCommand \u003d AddClientCommand.getCommandWords().get(0) + NAME_DESC_AMY","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(addClientCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    public void getSortedClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getSortedClientList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    public void getSortedProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getSortedProjectList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"    public void getTagMappingList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getTagMappingList().remove(0));","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zrei":44,"-":126,"mmaimer33":1}},{"path":"src/test/java/arb/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", ListType.NONE);","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", ListType.NONE)));","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, ListType.NONE)));","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\", ListType.NONE)));","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, ListType.NONE)));","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, ListType.NONE)));","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        // different enter link mode value -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true, ListType.NONE)));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        // different list type value -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", ListType.CLIENT)));","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", ListType.NONE);","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\", ListType.NONE).hashCode());","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\", ListType.NONE).hashCode());","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"                false, ListType.NONE).hashCode());","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"                false, ListType.NONE).hashCode());","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        // different enter link mode value -\u003e returns different hashcode","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"                true, ListType.NONE));","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        // different list type value -\u003e returns different hashcode","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", ListType.CLIENT).hashCode());","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"zrei":29,"-":42}},{"path":"src/test/java/arb/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_CLIENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.commands.project.EditProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import arb.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"import arb.testutil.EditProjectDescriptorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public static final String VALID_CLIENT_NAME_ALICE \u003d \"alice\";","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    public static final String VALID_CLIENT_NAME_BOB \u003d \"bob\";","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    public static final String VALID_TITLE_SKY_PAINTING \u003d \"Sky Painting\";","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    public static final String VALID_TITLE_OIL_PAINTING \u003d \"Oil Painting\";","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    public static final String VALID_DEADLINE_SKY_PAINTING \u003d \"6pm 2023-02-02\";","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    public static final String VALID_DEADLINE_OIL_PAINTING \u003d \"midnight 2023-05-05\";","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    public static final String VALID_PRICE_SKY_PAINTING \u003d \"3\";","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    public static final String VALID_PRICE_OIL_PAINTING \u003d \"5\";","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"    public static final String VALID_TAG_PAINTING \u003d \"painting\";","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    public static final String VALID_TAG_POTTERY \u003d \"pottery\";","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    public static final String VALID_SORTING_OPTION_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    public static final String VALID_SORTING_OPTION_DEADLINE_ALIAS \u003d \"d\";","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    public static final String VALID_SORTING_OPTION_TITLE \u003d \"name\";","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    public static final String VALID_SORTING_OPTION_TITLE_ALIAS \u003d \"n\";","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"    public static final String VALID_SORTING_OPTION_PRICE \u003d \"price\";","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"    public static final String VALID_SORTING_OPTION_PRICE_ALIAS \u003d \"pr\";","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"    public static final String NAME_DESC_ALIAS_AMY \u003d \" \" + PREFIX_NAME.getAlias() + VALID_NAME_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    public static final String NAME_DESC_ALIAS_BOB \u003d \" \" + PREFIX_NAME.getAlias() + VALID_NAME_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    public static final String PHONE_DESC_ALIAS_AMY \u003d \" \" + PREFIX_PHONE.getAlias() + VALID_PHONE_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    public static final String PHONE_DESC_ALIAS_BOB \u003d \" \" + PREFIX_PHONE.getAlias() + VALID_PHONE_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"    public static final String EMAIL_DESC_ALIAS_AMY \u003d \" \" + PREFIX_EMAIL.getAlias() + VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    public static final String EMAIL_DESC_ALIAS_BOB \u003d \" \" + PREFIX_EMAIL.getAlias() + VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    public static final String TAG_DESC_ALIAS_FRIEND \u003d \" \" + PREFIX_TAG.getAlias() + VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"    public static final String TAG_DESC_ALIAS_HUSBAND \u003d \" \" + PREFIX_TAG.getAlias() + VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"    public static final String CLIENT_DESC_ALICE \u003d \" \" + PREFIX_CLIENT + VALID_CLIENT_NAME_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"    public static final String CLIENT_DESC_ALIAS_ALICE \u003d \" \" + PREFIX_CLIENT.getAlias() + VALID_CLIENT_NAME_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    public static final String CLIENT_DESC_BOB \u003d \" \" + PREFIX_CLIENT + VALID_CLIENT_NAME_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    public static final String CLIENT_DESC_ALIAS_BOB \u003d \" \" + PREFIX_CLIENT.getAlias() + VALID_CLIENT_NAME_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"    public static final String TITLE_DESC_SKY_PAINTING \u003d \" \" + PREFIX_NAME + VALID_TITLE_SKY_PAINTING;","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"    public static final String TITLE_DESC_ALIAS_SKY_PAINTING \u003d \" \" + PREFIX_NAME.getAlias()","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"            + VALID_TITLE_SKY_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    public static final String TITLE_DESC_OIL_PAINTING \u003d \" \" + PREFIX_NAME + VALID_TITLE_OIL_PAINTING;","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"    public static final String TITLE_DESC_ALIAS_OIL_PAINTING \u003d \" \" + PREFIX_NAME.getAlias()","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"            + VALID_TITLE_OIL_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"    public static final String DEADLINE_DESC_SKY_PAINTING \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_SKY_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"    public static final String DEADLINE_DESC_ALIAS_SKY_PAINTING \u003d \" \" + PREFIX_DEADLINE.getAlias()","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"            + VALID_DEADLINE_SKY_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"    public static final String DEADLINE_DESC_OIL_PAINTING \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_OIL_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    public static final String DEADLINE_DESC_ALIAS_OIL_PAINTING \u003d \" \" + PREFIX_DEADLINE.getAlias()","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"            + VALID_DEADLINE_OIL_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"    public static final String PRICE_DESC_SKY_PAINTING \u003d \" \" + PREFIX_PRICE + VALID_PRICE_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"    public static final String PRICE_DESC_ALIAS_SKY_PAINTING \u003d \" \" + PREFIX_PRICE.getAlias() + VALID_PRICE_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    public static final String PRICE_DESC_OIL_PAINTING \u003d \" \" + PREFIX_PRICE + VALID_PRICE_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"    public static final String PRICE_DESC_ALIAS_OIL_PAINTING \u003d \" \" + PREFIX_PRICE.getAlias() + VALID_PRICE_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"    public static final String TAG_DESC_PAINTING \u003d \" \" + PREFIX_TAG + VALID_TAG_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"    public static final String TAG_DESC_ALIAS_PAINTING \u003d \" \" + PREFIX_TAG.getAlias() + VALID_TAG_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    public static final String TAG_DESC_POTTERY \u003d \" \" + PREFIX_TAG + VALID_TAG_POTTERY;","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"    public static final String TAG_DESC_ALIAS_POTTERY \u003d \" \" + PREFIX_TAG.getAlias() + VALID_TAG_POTTERY;","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"    public static final String SORTING_OPTION_DESC \u003d \" \" + PREFIX_OPTION + VALID_SORTING_OPTION_DEADLINE;","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"    public static final String INVALID_TITLE_DESC \u003d \" \" + PREFIX_NAME","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"            + \"watercolour painting\u0026\"; // \u0027\u0026\u0027 not allowed in titles","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"    public static final String INVALID_DEADLINE_DESC \u003d \" \" + PREFIX_DEADLINE","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"            + \"ocean\"; // \u0027ocean\u0027 is not able to be parsed into a date","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"    public static final String INVALID_PRICE_DESC \u003d \" \" + PREFIX_PRICE + \"and\";","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"    public static final String INVALID_SORTING_OPTION_DESC \u003d \" \" + PREFIX_OPTION","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"            + \"deadline\u0026\"; // does not match \u0027deadline\u0027 or \u0027name\u0027","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_TAG \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_TAG_ALIAS \u003d \" \" + PREFIX_TAG.getAlias();","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_PHONE \u003d \" \" + PREFIX_PHONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_PHONE_ALIAS \u003d \" \" + PREFIX_PHONE.getAlias();","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_EMAIL \u003d \" \" + PREFIX_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_EMAIL_ALIAS \u003d \" \" + PREFIX_EMAIL.getAlias();","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_DEADLINE \u003d \" \" + PREFIX_DEADLINE;","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_DEADLINE_ALIAS \u003d \" \" + PREFIX_DEADLINE.getAlias();","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_PRICE \u003d \" \" + PREFIX_PRICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_PRICE_ALIAS \u003d \" \" + PREFIX_PRICE.getAlias();","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_CLIENT \u003d \" \" + PREFIX_CLIENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"    public static final String EMPTY_CLIENT_ALIAS \u003d \" \" + PREFIX_CLIENT.getAlias();","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"    public static final EditClientCommand.EditClientDescriptor DESC_AMY;","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"    public static final EditClientCommand.EditClientDescriptor DESC_BOB;","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"        DESC_AMY \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        DESC_BOB \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":151,"author":{"gitId":"verydaftpunk"},"content":"    public static final EditProjectCommand.EditProjectDescriptor DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"verydaftpunk"},"content":"    public static final EditProjectCommand.EditProjectDescriptor DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"verydaftpunk"},"content":"    static {","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"verydaftpunk"},"content":"        DESC_SKY_PAINTING \u003d new EditProjectDescriptorBuilder().withTitle(VALID_TITLE_SKY_PAINTING)","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"                .withDeadline(VALID_DEADLINE_SKY_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"                .withPrice(VALID_PRICE_SKY_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"                .withTags(VALID_TAG_PAINTING, VALID_TAG_POTTERY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"verydaftpunk"},"content":"        DESC_OIL_PAINTING \u003d new EditProjectDescriptorBuilder().withTitle(VALID_TITLE_OIL_PAINTING)","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"verydaftpunk"},"content":"                .withDeadline(VALID_DEADLINE_OIL_PAINTING)","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"                .withPrice(VALID_PRICE_OIL_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"                .withTags(VALID_TAG_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"verydaftpunk"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"    public static void assertCommandSuccess(Command command, ListType currentListBeingShown, ListType listToBeShown,","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"            Model actualModel, CommandResult expectedCommandResult, Model expectedModel) {","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"            CommandResult result \u003d command.execute(actualModel, currentListBeingShown);","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"mmaimer33"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, ListType, ListType, Model, CommandResult, Model)}","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"     * that takes a string {@code expectedMessage}, {@code currentListBeingShown} and {@code listToBeShown}.","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"    public static void assertCommandSuccess(Command command, ListType currentListBeingShown, ListType listToBeShown,","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"            Model actualModel, String expectedMessage, Model expectedModel) {","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, listToBeShown);","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(command, currentListBeingShown, listToBeShown, actualModel, expectedCommandResult,","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"     * - the address book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2023-02-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"    public static void assertCommandFailure(Command command, ListType currentListBeingShown, Model actualModel,","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"            String expectedMessage) {","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel,","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"                currentListBeingShown));","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"     * Updates {@code model}\u0027s filtered client list to show only the client at the given {@code targetIndex}","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"     * in the {@code model}\u0027s address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-02-28"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2023-02-28"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-28"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-02-28"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-02-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2023-02-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"     * Updates {@code model}\u0027s filtered project list to show only the project at the given {@code targetIndex}","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"     * in the {@code model}\u0027s address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"    public static void showProjectAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredProjectList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"        Project project \u003d model.getFilteredProjectList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"        final String[] splitTitle \u003d project.getTitle().fullTitle.split(\"\\\\s+\");","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"        model.updateFilteredProjectList(new TitleContainsKeywordsPredicate(Arrays.asList(splitTitle[0])));","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"        assertEquals(1, model.getFilteredProjectList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"verydaftpunk":13,"zrei":146,"Johnchiahk":2,"-":79,"mmaimer33":1}},{"path":"src/test/java/arb/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public void execute_exitSuccess_withCurrentListTypeClient() {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false,","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"                ListType.NONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ExitCommand(), ListType.CLIENT, ListType.NONE, model, expectedCommandResult,","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    public void execute_exitSuccess_withCurrentListTypeProject() {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false,","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"                ListType.NONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ExitCommand(), ListType.PROJECT, ListType.NONE, model, expectedCommandResult,","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    public void execute_exitSuccess_withCurrentListTypeTag() {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false,","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"                ListType.NONE);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ExitCommand(), ListType.TAG, ListType.NONE, model, expectedCommandResult,","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"zrei":30,"-":10}},{"path":"src/test/java/arb/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public void execute_helpSuccess_withCurrentListTypeClient() {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false,","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"                ListType.NONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new HelpCommand(), ListType.CLIENT, ListType.NONE, model, expectedCommandResult,","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    public void execute_helpSuccess_withCurrentListTypeProject() {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false,","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"                ListType.NONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new HelpCommand(), ListType.PROJECT, ListType.NONE, model, expectedCommandResult,","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    public void execute_helpSuccess_withCurrentListTypeTag() {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false,","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"                ListType.NONE);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new HelpCommand(), ListType.TAG, ListType.NONE, model, expectedCommandResult,","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"zrei":30,"-":10}},{"path":"src/test/java/arb/logic/commands/client/AddClientCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" * Contains integration tests (interaction with the Model) for {@code AddClientCommand}.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"public class AddClientCommandIntegrationTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    private Model model;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public void executeSuccess_newClient_withCurrentListTypeClient() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new AddClientCommand(validClient), ListType.CLIENT, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"                String.format(AddClientCommand.MESSAGE_SUCCESS, validClient), expectedModel);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    public void executeSuccess_newClient_withCurrentListTypeProject() {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new AddClientCommand(validClient), ListType.PROJECT, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"                String.format(AddClientCommand.MESSAGE_SUCCESS, validClient), expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(0);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new AddClientCommand(clientInList), ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"                AddClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zrei":59}},{"path":"src/test/java/arb/logic/commands/client/AddClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"public class AddClientCommandTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    public void constructor_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddClientCommand(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        CommandResult commandResult \u003d new AddClientCommand(validClient).execute(modelStub, ListType.CLIENT);","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        assertEquals(String.format(AddClientCommand.MESSAGE_SUCCESS, validClient), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        assertEquals(ListType.CLIENT, commandResult.getListToBeShown());","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.clientsAdded);","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        AddClientCommand addClientCommand \u003d new AddClientCommand(validClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        ModelStub modelStub \u003d new ModelStubWithClient(validClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"                AddClientCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addClientCommand.execute(modelStub, ListType.CLIENT));","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        Client alice \u003d new ClientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        Client bob \u003d new ClientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        AddClientCommand addAliceCommand \u003d new AddClientCommand(alice);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        AddClientCommand addBobCommand \u003d new AddClientCommand(bob);","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        AddClientCommand addAliceCommandCopy \u003d new AddClientCommand(alice);","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        public void resetProjectList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"        public void resetClientList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"        public void addProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"        public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"        public void deleteProject(Project target) {","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"        public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"        public void setProjectToLink(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"        public void linkProjectToClient(Client client) {","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"        public void unlinkClientFromProject(Project project) {","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"        public void markProjectAsDone(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"        public void markProjectAsNotDone(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-07"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cClient\u003e getSortedClientList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cProject\u003e getSortedProjectList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"        public void updateFilteredProjectList(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2023-03-07"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-07"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"        public void updateSortedClientList(Comparator\u003cClient\u003e comparator) {","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"        public void updateSortedProjectList(Comparator\u003cProject\u003e comparator) {","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cTagMapping\u003e getTagMappingList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":247,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"Johnchiahk"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"Johnchiahk"},"content":"        public String getProjectsContent() {","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"Johnchiahk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"     * A Model stub that contains a single client.","lastModifiedDate":"2023-02-28"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"    private class ModelStubWithClient extends ModelStub {","lastModifiedDate":"2023-02-28"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"        private final Client client;","lastModifiedDate":"2023-02-28"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"        ModelStubWithClient(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"            this.client \u003d client;","lastModifiedDate":"2023-02-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"zrei"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":268,"author":{"gitId":"zrei"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":269,"author":{"gitId":"zrei"},"content":"            return this.client.isSameClient(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"zrei"},"content":"     * A Model stub that always accept the client being added.","lastModifiedDate":"2023-02-28"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"zrei"},"content":"    private class ModelStubAcceptingClientAdded extends ModelStub {","lastModifiedDate":"2023-02-28"},{"lineNumber":277,"author":{"gitId":"zrei"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":280,"author":{"gitId":"zrei"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":281,"author":{"gitId":"zrei"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":282,"author":{"gitId":"zrei"},"content":"            return clientsAdded.stream().anyMatch(client::isSameClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"zrei"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":287,"author":{"gitId":"zrei"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":288,"author":{"gitId":"zrei"},"content":"            clientsAdded.add(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"zrei":152,"Johnchiahk":6,"-":139}},{"path":"src/test/java/arb/logic/commands/client/ClearClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.testutil.TypicalProjects;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"public class ClearClientCommandTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ClearClientCommand(), ListType.CLIENT, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"                ClearClientCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(TypicalProjects.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ClearClientCommand(), ListType.CLIENT, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"                ClearClientCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    public void execute_withCurrentListTypeProject_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new ClearClientCommand(), ListType.PROJECT, new ModelManager(),","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"                Messages.MESSAGE_INVALID_LIST_CLIENT);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zrei":42}},{"path":"src/test/java/arb/logic/commands/client/DeleteClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":" * {@code DeleteClientCommand}.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"public class DeleteClientCommandTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(deleteClientCommand, ListType.CLIENT, ListType.CLIENT, model, expectedMessage,","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(deleteClientCommand, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"                Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        showNoClient(expectedModel);","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(deleteClientCommand, ListType.CLIENT, ListType.CLIENT, model, expectedMessage,","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(deleteClientCommand, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"                Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownProject_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        Index validIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new DeleteClientCommand(validIndex),","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"                        ListType.PROJECT, model, Messages.MESSAGE_INVALID_LIST_CLIENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        DeleteClientCommand deleteFirstCommand \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        DeleteClientCommand deleteSecondCommand \u003d new DeleteClientCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"        DeleteClientCommand deleteFirstCommandCopy \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"    private void showNoClient(Model model) {","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"zrei":56,"-":65}},{"path":"src/test/java/arb/logic/commands/client/EditClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import arb.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditClientCommand.","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"public class EditClientCommandTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(editClientCommand, ListType.CLIENT, ListType.CLIENT, model, expectedMessage,","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        ClientBuilder clientInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        Client editedClient \u003d clientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(indexLastClient, descriptor);","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        expectedModel.setClient(lastClient, editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(editClientCommand, ListType.CLIENT, ListType.CLIENT, model, expectedMessage,","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(INDEX_FIRST, new EditClientDescriptor());","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        Client editedClient \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(editClientCommand, ListType.CLIENT, ListType.CLIENT, model, expectedMessage,","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        Client clientInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        Client editedClient \u003d new ClientBuilder(clientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(editClientCommand, ListType.CLIENT, ListType.CLIENT, model, expectedMessage,","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"    public void execute_duplicateClientUnfilteredList_failure() {","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(editClientCommand, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"                Messages.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"    public void execute_duplicateClientFilteredList_failure() {","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"        // edit client in filtered list into a duplicate in address book","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"                new EditClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(editClientCommand, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"verydaftpunk"},"content":"                Messages.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"    public void execute_invalidClientIndexUnfilteredList_failure() {","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(editClientCommand, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"                Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"    public void execute_invalidClientIndexFilteredList_failure() {","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(outOfBoundIndex,","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(editClientCommand, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"                Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownProject_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"        Index validIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new EditClientCommand(validIndex, DESC_BOB),","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"                        ListType.PROJECT, model, Messages.MESSAGE_INVALID_LIST_CLIENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"        final EditClientCommand standardCommand \u003d new EditClientCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor copyDescriptor \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"        EditClientCommand commandWithSameValues \u003d new EditClientCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"        assertFalse(standardCommand.equals(new ClearClientCommand()));","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"        assertFalse(standardCommand.equals(new EditClientCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"        assertFalse(standardCommand.equals(new EditClientCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"verydaftpunk":2,"zrei":97,"-":90}},{"path":"src/test/java/arb/logic/commands/client/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptorWithSameValues \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"zrei":17,"-":36}},{"path":"src/test/java/arb/logic/commands/client/FindClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.CARL;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.ELLE;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.FIONA;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":" * Contains integration tests (interaction with the Model) for {@code FindClientCommand}.","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"public class FindClientCommandTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        FindClientCommand findFirstCommand \u003d new FindClientCommand(firstPredicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        FindClientCommand findSecondCommand \u003d new FindClientCommand(secondPredicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        FindClientCommand findFirstCommandCopy \u003d new FindClientCommand(firstPredicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    public void execute_zeroKeywords_noClientFound() {","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        FindClientCommand command \u003d new FindClientCommand(predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(command, ListType.CLIENT, ListType.CLIENT, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"    public void execute_multipleKeywords_multipleClientsFound() {","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        FindClientCommand command \u003d new FindClientCommand(predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(command, ListType.CLIENT, ListType.CLIENT, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zrei":30,"-":54}},{"path":"src/test/java/arb/logic/commands/client/ListClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListClientCommand.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"public class ListClientCommandTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    private Model model;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListClientCommand(), ListType.CLIENT, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"                ListClientCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownProject_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListClientCommand(), ListType.PROJECT, ListType.CLIENT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"                ListClientCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownTag_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListClientCommand(), ListType.TAG, ListType.CLIENT, model,","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"                ListClientCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListClientCommand(), ListType.CLIENT, ListType.CLIENT, model,","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"                ListClientCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zrei":52,"mmaimer33":2}},{"path":"src/test/java/arb/logic/commands/client/SortClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.client;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.CLIENT_NAME_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.getTypicalClients;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SortClientCommand.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"public class SortClientCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private Model model;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    public void execute_sort_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        SortClientCommand command \u003d new SortClientCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        expectedModel.updateSortedClientList(CLIENT_NAME_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(command, ListType.CLIENT, ListType.CLIENT, model, SortClientCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        List\u003cClient\u003e expectedList \u003d getTypicalClients();","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        Collections.sort(expectedList, CLIENT_NAME_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedList, model.getSortedClientList());","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":46}},{"path":"src/test/java/arb/logic/commands/project/AddProjectCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" * Contains integration tests (interaction with the Model) for {@code AddProjectCommand}.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"public class AddProjectCommandIntegrationTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    private Model model;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    public void executeSuccess_newProject_withCurrentListTypeClient() {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        Project validProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        expectedModel.addProject(validProject);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new AddProjectCommand(validProject, Optional.empty()), ListType.CLIENT,","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"                ListType.PROJECT, model, String.format(AddProjectCommand.MESSAGE_SUCCESS, validProject),","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    public void executeSuccess_newProject_withCurrentListTypeProject() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        Project validProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        expectedModel.addProject(validProject);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new AddProjectCommand(validProject, Optional.empty()), ListType.PROJECT,","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"                ListType.PROJECT, model, String.format(AddProjectCommand.MESSAGE_SUCCESS, validProject),","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    public void executeSuccess_newProject_withCurrentListTypeTag() {","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        Project validProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        expectedModel.addProject(validProject);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new AddProjectCommand(validProject, Optional.empty()), ListType.TAG,","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"                ListType.PROJECT, model, String.format(AddProjectCommand.MESSAGE_SUCCESS, validProject),","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    public void execute_duplicateProject_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        Project projectInList \u003d model.getAddressBook().getProjectList().get(0);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new AddProjectCommand(projectInList, Optional.empty()), ListType.CLIENT, model,","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"                AddProjectCommand.MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    public void execute_linkedClientNotFoundInAddressbook_throwsCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        String notFoundInAddressbookName \u003d \"not\";","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new AddProjectCommand(project, Optional.of(notFoundInAddressbookName)), ListType.PROJECT,","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"                model, String.format(AddProjectCommand.MESSAGE_CANNOT_FIND_CLIENT, notFoundInAddressbookName));","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zrei":82}},{"path":"src/test/java/arb/logic/commands/project/AddProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"public class AddProjectCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public void constructor_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddProjectCommand(null, null));","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public void execute_projectAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        ModelStubAcceptingProjectAdded modelStub \u003d new ModelStubAcceptingProjectAdded();","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        Project validProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        CommandResult commandResult \u003d new AddProjectCommand(validProject, Optional.empty())","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"                .execute(modelStub, ListType.CLIENT);","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        assertEquals(String.format(AddProjectCommand.MESSAGE_SUCCESS, validProject), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        assertEquals(ListType.PROJECT, commandResult.getListToBeShown());","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        assertEquals(Arrays.asList(validProject), modelStub.projectsAdded);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    public void execute_duplicateProject_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        Project validProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        AddProjectCommand addProjectCommand \u003d new AddProjectCommand(validProject, Optional.empty());","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        ModelStub modelStub \u003d new ModelStubWithProject(validProject);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        assertThrows(CommandException.class, AddProjectCommand.MESSAGE_DUPLICATE_PROJECT, () -\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"                addProjectCommand.execute(modelStub, ListType.PROJECT));","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        Project crochet \u003d new ProjectBuilder().withTitle(\"Crochet\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        Project sculpture \u003d new ProjectBuilder().withTitle(\"sculpture\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        AddProjectCommand addCrochetCommand \u003d new AddProjectCommand(crochet, Optional.empty());","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        AddProjectCommand addSculptureCommand \u003d new AddProjectCommand(sculpture, Optional.empty());","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        assertTrue(addCrochetCommand.equals(addCrochetCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        AddProjectCommand addCrochetCommandCopy \u003d new AddProjectCommand(crochet, Optional.empty());","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        assertTrue(addCrochetCommand.equals(addCrochetCommandCopy));","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        assertFalse(addCrochetCommand.equals(1));","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        assertFalse(addCrochetCommand.equals(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        assertFalse(addCrochetCommand.equals(addSculptureCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        public void resetProjectList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"        public void resetClientList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"        public void addProject(Project project) {","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"        public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"        public void deleteProject(Project target) {","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"        public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"        public void setProjectToLink(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"        public void linkProjectToClient(Client client) {","lastModifiedDate":"2023-03-26"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"        public void unlinkClientFromProject(Project project) {","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"        public void markProjectAsDone(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"        public void markProjectAsNotDone(Project project) {","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cClient\u003e getSortedClientList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cProject\u003e getSortedProjectList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"        public void updateFilteredProjectList(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"        public void updateSortedClientList(Comparator\u003cClient\u003e comparator) {","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"        public void updateSortedProjectList(Comparator\u003cProject\u003e comparator) {","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cTagMapping\u003e getTagMappingList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":249,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"Johnchiahk"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"Johnchiahk"},"content":"        public String getProjectsContent() {","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"Johnchiahk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"     * A Model stub that contains a single project.","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"zrei"},"content":"    private class ModelStubWithProject extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"        private final Project project;","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"        ModelStubWithProject(Project project) {","lastModifiedDate":"2023-03-08"},{"lineNumber":264,"author":{"gitId":"zrei"},"content":"            requireNonNull(project);","lastModifiedDate":"2023-03-08"},{"lineNumber":265,"author":{"gitId":"zrei"},"content":"            this.project \u003d project;","lastModifiedDate":"2023-03-08"},{"lineNumber":266,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":267,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":268,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":269,"author":{"gitId":"zrei"},"content":"        public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-08"},{"lineNumber":270,"author":{"gitId":"zrei"},"content":"            requireNonNull(project);","lastModifiedDate":"2023-03-08"},{"lineNumber":271,"author":{"gitId":"zrei"},"content":"            return this.project.isSameProject(project);","lastModifiedDate":"2023-03-08"},{"lineNumber":272,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":273,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":274,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":275,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":276,"author":{"gitId":"zrei"},"content":"     * A Model stub that always accept the project being added.","lastModifiedDate":"2023-03-08"},{"lineNumber":277,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":278,"author":{"gitId":"zrei"},"content":"    private class ModelStubAcceptingProjectAdded extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":279,"author":{"gitId":"zrei"},"content":"        final ArrayList\u003cProject\u003e projectsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":280,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":281,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":282,"author":{"gitId":"zrei"},"content":"        public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-08"},{"lineNumber":283,"author":{"gitId":"zrei"},"content":"            requireNonNull(project);","lastModifiedDate":"2023-03-08"},{"lineNumber":284,"author":{"gitId":"zrei"},"content":"            return projectsAdded.stream().anyMatch(project::isSameProject);","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":287,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":288,"author":{"gitId":"zrei"},"content":"        public void addProject(Project project) {","lastModifiedDate":"2023-03-08"},{"lineNumber":289,"author":{"gitId":"zrei"},"content":"            requireNonNull(project);","lastModifiedDate":"2023-03-08"},{"lineNumber":290,"author":{"gitId":"zrei"},"content":"            projectsAdded.add(project);","lastModifiedDate":"2023-03-08"},{"lineNumber":291,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":292,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":293,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":294,"author":{"gitId":"zrei"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-08"},{"lineNumber":295,"author":{"gitId":"zrei"},"content":"            return new AddressBook();","lastModifiedDate":"2023-03-08"},{"lineNumber":296,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":297,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":298,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":299,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zrei":293,"Johnchiahk":6}},{"path":"src/test/java/arb/logic/commands/project/ClearProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.testutil.TypicalClients;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"public class ClearProjectCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ClearProjectCommand(), ListType.PROJECT, ListType.PROJECT, model,","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"                ClearProjectCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(TypicalClients.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ClearProjectCommand(), ListType.PROJECT, ListType.PROJECT, model,","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"                ClearProjectCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    public void execute_withCurrentListTypeProject_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new ClearProjectCommand(), ListType.CLIENT, new ModelManager(),","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"                Messages.MESSAGE_INVALID_LIST_PROJECT);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"zrei":42}},{"path":"src/test/java/arb/logic/commands/project/DeleteProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import static arb.logic.commands.CommandTestUtil.showProjectAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":" * Contains integration and unit tests for {@code DeleteProjectCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"public class DeleteProjectCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"    public void execute_validIndexUnfilteredList_sucess() {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"        Project projectToDelete \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        String expectedMessage \u003d String.format(DeleteProjectCommand.MESSAGE_DELETE_PROJECT_SUCCESS, projectToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"        expectedModel.deleteProject(projectToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"        assertCommandSuccess(deleteProjectCommand, ListType.PROJECT, ListType.PROJECT,","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"                model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased(model.getFilteredProjectList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(outOfBoundsIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"        assertCommandFailure(deleteProjectCommand, ListType.PROJECT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"        Project projectToDelete \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"        String expectedMessage \u003d String.format(DeleteProjectCommand.MESSAGE_DELETE_PROJECT_SUCCESS, projectToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"        expectedModel.deleteProject(projectToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"        showNoProject(expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"        assertCommandSuccess(deleteProjectCommand, ListType.PROJECT, ListType.PROJECT, model, expectedMessage,","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"                expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"mmaimer33"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"mmaimer33"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"mmaimer33"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"mmaimer33"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getProjectList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"mmaimer33"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"mmaimer33"},"content":"        assertCommandFailure(deleteProjectCommand, ListType.PROJECT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"mmaimer33"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownClient_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        Index validIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new DeleteProjectCommand(validIndex),","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"                        ListType.CLIENT, model, Messages.MESSAGE_INVALID_LIST_PROJECT);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"mmaimer33"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"mmaimer33"},"content":"        DeleteProjectCommand deleteFirstCommand \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"mmaimer33"},"content":"        DeleteProjectCommand deleteSecondCommand \u003d new DeleteProjectCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"mmaimer33"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"mmaimer33"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"mmaimer33"},"content":"        DeleteProjectCommand deleteFirstCommandCopy \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"mmaimer33"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"mmaimer33"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"mmaimer33"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"mmaimer33"},"content":"     * Updates {@code model}\u0027s filtered list to show no project.","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"mmaimer33"},"content":"    private void showNoProject(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"mmaimer33"},"content":"        model.updateFilteredProjectList(p -\u003e false);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(model.getFilteredProjectList().isEmpty());","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":7,"mmaimer33":114}},{"path":"src/test/java/arb/logic/commands/project/EditProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TITLE_OIL_PAINTING;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.showProjectAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.EditProjectCommand.EditProjectDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"import arb.testutil.EditProjectDescriptorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"public class EditProjectCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"        Project editedProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder(editedProject)","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        EditProjectCommand editProjectCommand \u003d new EditProjectCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"        String expectedMessage \u003d String.format(EditProjectCommand.MESSAGE_EDIT_PROJECT_SUCCESS, editedProject);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"        expectedModel.setProject(model.getFilteredProjectList().get(0), editedProject);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"        assertCommandSuccess(editProjectCommand, ListType.PROJECT, ListType.PROJECT, model, expectedMessage,","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"                expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"        Index indexLastProject \u003d Index.fromOneBased(model.getFilteredProjectList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"        Project lastProject \u003d model.getFilteredProjectList().get(indexLastProject.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"        ProjectBuilder projectInList \u003d new ProjectBuilder(lastProject);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"        Project editedProject \u003d projectInList.withTitle(VALID_TITLE_OIL_PAINTING)","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"                .withTags(VALID_TAG_PAINTING)","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"                .withTitle(VALID_TITLE_OIL_PAINTING)","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"                .withTags(VALID_TAG_PAINTING).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"        EditProjectCommand editProjectCommand \u003d new EditProjectCommand(indexLastProject, descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"        String expectedMessage \u003d String.format(EditProjectCommand.MESSAGE_EDIT_PROJECT_SUCCESS, editedProject);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"        expectedModel.setProject(lastProject, editedProject);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"        assertCommandSuccess(editProjectCommand, ListType.PROJECT, ListType.PROJECT, model, expectedMessage,","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"                expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        EditProjectCommand editProjectCommand \u003d new EditProjectCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"                new EditProjectDescriptor());","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        Project editedProject \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"verydaftpunk"},"content":"        String expectedMessage \u003d String.format(EditProjectCommand.MESSAGE_EDIT_PROJECT_SUCCESS, editedProject);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"verydaftpunk"},"content":"        assertCommandSuccess(editProjectCommand, ListType.PROJECT, ListType.PROJECT, model, expectedMessage,","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"                expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"        Project projectInFilteredList \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"verydaftpunk"},"content":"        Project editedProject \u003d new ProjectBuilder(projectInFilteredList).withTitle(VALID_TITLE_OIL_PAINTING).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        EditProjectCommand editProjectCommand \u003d new EditProjectCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"verydaftpunk"},"content":"                new EditProjectDescriptorBuilder().withTitle(VALID_TITLE_OIL_PAINTING).build());","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"verydaftpunk"},"content":"        String expectedMessage \u003d String.format(EditProjectCommand.MESSAGE_EDIT_PROJECT_SUCCESS, editedProject);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"        expectedModel.setProject(model.getFilteredProjectList().get(0), editedProject);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"        assertCommandSuccess(editProjectCommand, ListType.PROJECT, ListType.PROJECT, model, expectedMessage,","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"verydaftpunk"},"content":"                expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"verydaftpunk"},"content":"    public void execute_duplicateProjectUnfilteredList_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        Project firstProject \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder(firstProject).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        EditProjectCommand editProjectCommand \u003d new EditProjectCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"verydaftpunk"},"content":"        assertCommandFailure(editProjectCommand, ListType.PROJECT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"verydaftpunk"},"content":"                Messages.MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"verydaftpunk"},"content":"    public void execute_duplicateProjectFilteredList_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"verydaftpunk"},"content":"        // edit project in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        Project projectInList \u003d model.getAddressBook().getProjectList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        EditProjectCommand editProjectCommand \u003d new EditProjectCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"verydaftpunk"},"content":"                new EditProjectDescriptorBuilder(projectInList).build());","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"verydaftpunk"},"content":"        assertCommandFailure(editProjectCommand, ListType.PROJECT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"verydaftpunk"},"content":"                Messages.MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"verydaftpunk"},"content":"    public void execute_invalidProjectIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"verydaftpunk"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredProjectList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"verydaftpunk"},"content":"                .withTitle(VALID_TITLE_OIL_PAINTING).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"verydaftpunk"},"content":"        EditProjectCommand editProjectCommand \u003d new EditProjectCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"verydaftpunk"},"content":"        assertCommandFailure(editProjectCommand, ListType.PROJECT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"verydaftpunk"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"verydaftpunk"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"verydaftpunk"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"verydaftpunk"},"content":"    public void execute_invalidProjectIndexFilteredList_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"verydaftpunk"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"verydaftpunk"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getProjectList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"verydaftpunk"},"content":"        EditProjectCommand editProjectCommand \u003d new EditProjectCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"verydaftpunk"},"content":"                new EditProjectDescriptorBuilder().withTitle(VALID_TITLE_OIL_PAINTING).build());","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"verydaftpunk"},"content":"        assertCommandFailure(editProjectCommand, ListType.PROJECT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"verydaftpunk"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownClient_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        Index validIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new EditProjectCommand(validIndex, DESC_SKY_PAINTING),","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"                        ListType.CLIENT, model, Messages.MESSAGE_INVALID_LIST_PROJECT);","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"verydaftpunk"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"        final EditProjectCommand standardCommand \u003d new EditProjectCommand(INDEX_FIRST, DESC_SKY_PAINTING);","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"verydaftpunk"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor copyDescriptor \u003d new EditProjectDescriptor(DESC_SKY_PAINTING);","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"        EditProjectCommand commandWithSameValues \u003d new EditProjectCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"verydaftpunk"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"verydaftpunk"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"verydaftpunk"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"verydaftpunk"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"verydaftpunk"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"verydaftpunk"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        assertFalse(standardCommand.equals(new EditProjectCommand(INDEX_SECOND, DESC_SKY_PAINTING)));","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"verydaftpunk"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"        assertFalse(standardCommand.equals(new EditProjectCommand(INDEX_FIRST, DESC_OIL_PAINTING)));","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"verydaftpunk":143,"zrei":40}},{"path":"src/test/java/arb/logic/commands/project/EditProjectDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_DEADLINE_SKY_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PRICE_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_POTTERY;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TITLE_SKY_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.EditProjectCommand.EditProjectDescriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.testutil.EditProjectDescriptorBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"public class EditProjectDescriptorTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptorWithSameValues \u003d new EditProjectDescriptor(DESC_OIL_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        assertTrue(DESC_OIL_PAINTING.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        assertTrue(DESC_OIL_PAINTING.equals(DESC_OIL_PAINTING));","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        assertFalse(DESC_OIL_PAINTING.equals(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        assertFalse(DESC_OIL_PAINTING.equals(5));","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        assertFalse(DESC_OIL_PAINTING.equals(DESC_SKY_PAINTING));","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor editedOilPainting \u003d new EditProjectDescriptorBuilder(DESC_OIL_PAINTING)","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"                .withTitle(VALID_TITLE_SKY_PAINTING).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        assertFalse(DESC_OIL_PAINTING.equals(editedOilPainting));","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        editedOilPainting \u003d new EditProjectDescriptorBuilder(DESC_OIL_PAINTING)","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"                .withDeadline(VALID_DEADLINE_SKY_PAINTING).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        assertFalse(DESC_OIL_PAINTING.equals(editedOilPainting));","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        // different price -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        editedOilPainting \u003d new EditProjectDescriptorBuilder(DESC_OIL_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"                .withPrice(VALID_PRICE_SKY_PAINTING).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        assertFalse(DESC_OIL_PAINTING.equals(editedOilPainting));","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        editedOilPainting \u003d new EditProjectDescriptorBuilder(DESC_OIL_PAINTING)","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"                .withTags(VALID_TAG_POTTERY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        assertFalse(DESC_OIL_PAINTING.equals(editedOilPainting));","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"zrei":57}},{"path":"src/test/java/arb/logic/commands/project/FindProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_PROJECTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.CRAYON_PROJECT;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.DIGITAL_PROJECT;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.SCULPTURE_PROJECT;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":" * Contains integration tests (interaction with the Model) for {@code FindProjectCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"public class FindProjectCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        TitleContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        TitleContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        FindProjectCommand findFirstCommand \u003d new FindProjectCommand(firstPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        FindProjectCommand findSecondCommand \u003d new FindProjectCommand(secondPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        FindProjectCommand findFirstCommandCopy \u003d new FindProjectCommand(firstPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    public void execute_zeroKeywords_noProjectFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROJECTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        FindProjectCommand command \u003d new FindProjectCommand(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        expectedModel.updateFilteredProjectList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(command, ListType.PROJECT, ListType.PROJECT, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredProjectList());","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"    public void execute_multipleKeywords_multipleProjectsFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROJECTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\"Crayon Digital Sculpture\");","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        FindProjectCommand command \u003d new FindProjectCommand(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        expectedModel.updateFilteredProjectList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(command, ListType.PROJECT, ListType.PROJECT, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        assertEquals(Arrays.asList(CRAYON_PROJECT, DIGITAL_PROJECT, SCULPTURE_PROJECT), model.getFilteredProjectList());","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"     * Parses {@code userInput} into a {@code TitleContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"    private TitleContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        return new TitleContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":84}},{"path":"src/test/java/arb/logic/commands/project/ListProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.showProjectAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"public class ListProjectCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    private Model model;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    private String expectedModelProjectsMessage;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        expectedModelProjectsMessage \u003d String.format(ListProjectCommand.MESSAGE_PROJECTS_CONTENT,","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"                expectedModel.getProjectsContent());","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListProjectCommand(), ListType.PROJECT, ListType.PROJECT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"                ListProjectCommand.MESSAGE_SUCCESS + \"\\n\" + expectedModelProjectsMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownClient_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListProjectCommand(), ListType.CLIENT, ListType.PROJECT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"                ListProjectCommand.MESSAGE_SUCCESS + \"\\n\" + expectedModelProjectsMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownTag_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListProjectCommand(), ListType.TAG, ListType.PROJECT, model,","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"                ListProjectCommand.MESSAGE_SUCCESS + \"\\n\" + expectedModelProjectsMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListProjectCommand(), ListType.PROJECT, ListType.PROJECT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"                ListProjectCommand.MESSAGE_SUCCESS + \"\\n\" + expectedModelProjectsMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":46,"Johnchiahk":8}},{"path":"src/test/java/arb/logic/commands/project/MarkProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":" * {@code MarkProjectCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"class MarkProjectCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"    void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        Project projectToMark \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"        Project projectToMarkCopy \u003d new ProjectBuilder(projectToMark).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        MarkProjectCommand markProjectCommand \u003d new MarkProjectCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"        String expectedMessage \u003d String.format(MarkProjectCommand.MESSAGE_MARK_PROJECT_SUCCESS, projectToMark);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"        projectToMarkCopy.markAsDone();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"        expectedModel.setProject(projectToMark, projectToMarkCopy);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"        assertCommandSuccess(markProjectCommand, ListType.PROJECT, ListType.PROJECT, model, expectedMessage,","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"                expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredProjectList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"        MarkProjectCommand markProjectCommand \u003d new MarkProjectCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"        assertCommandFailure(markProjectCommand, ListType.PROJECT, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownClient_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        Index validIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new MarkProjectCommand(validIndex), ListType.CLIENT,","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"                model, Messages.MESSAGE_INVALID_LIST_PROJECT);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        MarkProjectCommand markFirstCommand \u003d new MarkProjectCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        MarkProjectCommand markSecondCommand \u003d new MarkProjectCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        MarkProjectCommand markFirstCommandCopy \u003d new MarkProjectCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":14,"Johnchiahk":66}},{"path":"src/test/java/arb/logic/commands/project/SortProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_DEADLINE_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_TITLE_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjectSortingOptions.BY_DEADLINE;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjectSortingOptions.BY_TITLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.getTypicalProjects;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":" * Contains integration tests (interaction with the Model) for {@code SortProjectCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"public class SortProjectCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    private Model model;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        SortProjectCommand sortByDeadlineCommand \u003d new SortProjectCommand(BY_DEADLINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        SortProjectCommand sortByTitleCommand \u003d new SortProjectCommand(BY_TITLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        assertTrue(sortByDeadlineCommand.equals(sortByDeadlineCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        SortProjectCommand sortByDeadlineCommandCopy \u003d new SortProjectCommand(BY_DEADLINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        assertTrue(sortByDeadlineCommand.equals(sortByDeadlineCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        assertFalse(sortByDeadlineCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        assertFalse(sortByDeadlineCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        // different sorting option -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        assertFalse(sortByDeadlineCommand.equals(sortByTitleCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    public void execute_sortByTitle_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        SortProjectCommand command \u003d new SortProjectCommand(BY_TITLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        expectedModel.updateSortedProjectList(PROJECT_TITLE_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(command, ListType.PROJECT, ListType.PROJECT, model, BY_TITLE.getSuccessMessage(),","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        List\u003cProject\u003e expectedList \u003d getTypicalProjects();","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        Collections.sort(expectedList, PROJECT_TITLE_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedList, model.getSortedProjectList());","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"    public void execute_sortByDeadline_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        SortProjectCommand command \u003d new SortProjectCommand(BY_DEADLINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        expectedModel.updateSortedProjectList(PROJECT_DEADLINE_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(command, ListType.PROJECT, ListType.PROJECT, model, BY_DEADLINE.getSuccessMessage(),","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"                expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        List\u003cProject\u003e expectedList \u003d getTypicalProjects();","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        Collections.sort(expectedList, PROJECT_DEADLINE_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedList, model.getSortedProjectList());","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":82}},{"path":"src/test/java/arb/logic/commands/project/UnmarkProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package arb.logic.commands.project;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import static arb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":" * {@code UnmarkProjectCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"class UnmarkProjectCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"    void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"        Project projectToUnmark \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"        Project projectToUnmarkCopy \u003d new ProjectBuilder(projectToUnmark).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"        UnmarkProjectCommand unmarkProjectCommand \u003d new UnmarkProjectCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"        String expectedMessage \u003d String.format(UnmarkProjectCommand.MESSAGE_UNMARK_PROJECT_SUCCESS, projectToUnmark);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"        projectToUnmarkCopy.markAsUndone();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"        expectedModel.setProject(projectToUnmark, projectToUnmarkCopy);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"        assertCommandSuccess(unmarkProjectCommand, ListType.PROJECT, ListType.PROJECT, model, expectedMessage,","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"                expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredProjectList().size() + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"        UnmarkProjectCommand unmarkProjectCommand \u003d new UnmarkProjectCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"        assertCommandFailure(unmarkProjectCommand, ListType.PROJECT, model,","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownClient_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        Index validIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        assertCommandFailure(new UnmarkProjectCommand(validIndex), ListType.CLIENT,","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"                model, Messages.MESSAGE_INVALID_LIST_PROJECT);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"        UnmarkProjectCommand unmarkFirstCommand \u003d new UnmarkProjectCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"        UnmarkProjectCommand unmarkSecondCommand \u003d new UnmarkProjectCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"        UnmarkProjectCommand unmarkFirstCommandCopy \u003d new UnmarkProjectCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommandCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(unmarkFirstCommand.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(unmarkFirstCommand.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(unmarkFirstCommand.equals(unmarkSecondCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zrei":7,"Johnchiahk":73}},{"path":"src/test/java/arb/logic/commands/tag/ListTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.commands.tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.ListType;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.ModelManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTagCommand.","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"public class ListTagCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    private Model model;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListTagCommand(), ListType.CLIENT, ListType.TAG, model,","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                ListTagCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownProject_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListTagCommand(), ListType.PROJECT, ListType.TAG, model,","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"                ListTagCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    public void execute_currentListShownTag_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertCommandSuccess(new ListTagCommand(), ListType.TAG, ListType.TAG, model,","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"                ListTagCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":46}},{"path":"src/test/java/arb/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.commons.core.predicate.CombinedPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.ExitCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.HelpCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.ClearClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.FindClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.ListClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.SortClientCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.AddProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.ClearProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.commands.project.DeleteProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.EditProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.EditProjectCommand.EditProjectDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.FindProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.ListProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.MarkProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.SortProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.UnmarkProjectCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.tag.ListTagCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.ClientContainsTagPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.ProjectContainsTagsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientUtil;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"import arb.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"import arb.testutil.EditProjectDescriptorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"import arb.testutil.PredicateUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"import arb.testutil.TypicalProjectSortingOptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    public void parseCommand_addClient() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        for (String commandWord : AddClientCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"            AddClientCommand command \u003d (AddClientCommand) parser","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"                .parseCommand(ClientUtil.getAddClientCommand(client, commandWord));","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"            assertEquals(new AddClientCommand(client), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    public void parseCommand_addProject() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        for (String commandWord : AddProjectCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"            AddProjectCommand command \u003d (AddProjectCommand) parser","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"                .parseCommand(ProjectUtil.getAddProjectCommand(project, commandWord));","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"            assertEquals(new AddProjectCommand(project, Optional.empty()), command);","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"    public void parseCommand_clearClient() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        for (String commandWord : ClearClientCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord) instanceof ClearClientCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord + \" 3\") instanceof ClearClientCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"    public void parseCommand_clearProject() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"        for (String commandWord : ClearProjectCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord) instanceof ClearProjectCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord + \" 3\") instanceof ClearProjectCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    public void parseCommand_deleteClient() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        for (String commandWord : DeleteClientCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"            DeleteClientCommand command \u003d (DeleteClientCommand) parser.parseCommand(","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"                    commandWord + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"            assertEquals(new DeleteClientCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"    public void parseCommand_deleteProject() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        for (String commandWord : DeleteProjectCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"            DeleteProjectCommand command \u003d (DeleteProjectCommand) parser.parseCommand(","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"                    commandWord + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"            assertEquals(new DeleteProjectCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"    public void parseCommand_editClient() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"        for (String commandWord : EditClientCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"            Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"            EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(client).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"            EditClientCommand command \u003d (EditClientCommand) parser.parseCommand(commandWord + \" \"","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"mmaimer33"},"content":"                    + INDEX_FIRST.getOneBased() + \" \" + ClientUtil.getEditClientDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"            assertEquals(new EditClientCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"    public void parseCommand_editProject() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"        for (String commandWord : EditProjectCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"            Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"            EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder(project).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"            EditProjectCommand command \u003d (EditProjectCommand) parser","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"                    .parseCommand(commandWord + \" \"","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"                    + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"                    + ProjectUtil.getEditProjectDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"            assertEquals(new EditProjectCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"        for (String commandWord : ExitCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord) instanceof ExitCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"    public void parseCommand_findClient() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e tags \u003d Arrays.asList(\"friend\", \"husband\");","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e names \u003d Arrays.asList(\"foo\", \"baz\");","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"        ClientContainsTagPredicate expectedTagsPredicate \u003d new ClientContainsTagPredicate(tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"        NameContainsKeywordsPredicate expectedKeywordsPredicate \u003d new NameContainsKeywordsPredicate(names);","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"        CombinedPredicate\u003cClient\u003e expectedCombinedPredicate \u003d PredicateUtil","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"                .getCombinedPredicate(expectedKeywordsPredicate, expectedTagsPredicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"        for (String commandWord : FindClientCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"            FindClientCommand command \u003d (FindClientCommand) parser","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"                    .parseCommand(ClientUtil.getFindClientCommand(tags, names, commandWord));","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"            assertEquals(new FindClientCommand(expectedCombinedPredicate), command);","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"    public void parseCommand_findProject() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e tags \u003d Arrays.asList(\"painting\", \"pottery\");","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e names \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"        ProjectContainsTagsPredicate expectedTagsPredicate \u003d new ProjectContainsTagsPredicate(tags);","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"        TitleContainsKeywordsPredicate expectedKeywordsPredicate \u003d new TitleContainsKeywordsPredicate(names);","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"        CombinedPredicate\u003cProject\u003e expectedCombinedPredicate \u003d PredicateUtil","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"                .getCombinedPredicate(expectedKeywordsPredicate, expectedTagsPredicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"        for (String commandWord : FindProjectCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"            FindProjectCommand command \u003d (FindProjectCommand) parser","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"                    .parseCommand(ProjectUtil.getFindProjectCommand(tags, names, commandWord));","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"            assertEquals(new FindProjectCommand(expectedCombinedPredicate), command);","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"    public void parseCommand_sortClient() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"        for (String commandWord : SortClientCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord) instanceof SortClientCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord + \" 3\") instanceof SortClientCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"    public void parseCommand_sortProject() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"        for (String commandWord : SortProjectCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"            SortProjectCommand sortProjectCommand \u003d (SortProjectCommand) parser.parseCommand(","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"                    commandWord + CommandTestUtil.SORTING_OPTION_DESC);","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"            assertEquals(new SortProjectCommand(TypicalProjectSortingOptions.BY_DEADLINE), sortProjectCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"        for (String commandWord : HelpCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord) instanceof HelpCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"    public void parseCommand_listClient() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"        for (String commandWord : ListClientCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord) instanceof ListClientCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord + \" 3\") instanceof ListClientCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"    public void parseCommand_listProject() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"        for (String commandWord : ListProjectCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord) instanceof ListProjectCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord + \" 3\") instanceof ListProjectCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"    public void parseCommand_listTag() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"        for (String commandWord : ListTagCommand.getCommandWords()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord) instanceof ListTagCommand);","lastModifiedDate":"2023-03-21"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"            assertTrue(parser.parseCommand(commandWord + \" 3\") instanceof ListTagCommand);","lastModifiedDate":"2023-03-21"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"    public void parseCommand_markProject() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        for (String commandWord : MarkProjectCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"            MarkProjectCommand command \u003d (MarkProjectCommand) parser.parseCommand(","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"                    commandWord + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"            assertEquals(new MarkProjectCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"    public void parseCommand_unmarkProject() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"        for (String commandWord : UnmarkProjectCommand.getCommandWords()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"            UnmarkProjectCommand command \u003d (UnmarkProjectCommand) parser.parseCommand(","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"                    commandWord + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"            assertEquals(new UnmarkProjectCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-02-26"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zrei":252,"mmaimer33":2}},{"path":"src/test/java/arb/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\", \"++u\");","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\", \"pslash/\");","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\", \"tdash/\");","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\", \"qhat/\");","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value \"","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"                + \"-t tdash/ alias dash value qhat/ another qhat value pslash/ another pslash value pslash/\";","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\", \"another pslash value\", \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\", \"alias dash value\");","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\", \"another qhat value\");","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\", null);","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        assertEquals(aaa, new Prefix(\"aaa\", null));","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\", null));","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"        assertNotEquals(aaa, new Prefix(\"aaa\", \"aab\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"zrei":14,"-":138}},{"path":"src/test/java/arb/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"zrei":3,"-":36}},{"path":"src/test/java/arb/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjectSortingOptions.BY_DEADLINE;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Status;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    private static final String INVALID_TITLE \u003d \"Sk! P@inting\";","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    private static final String INVALID_DEADLINE \u003d \"ocean\";","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"    private static final String INVALID_STATUS \u003d \"accomplished\";","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    private static final String INVALID_PRICE \u003d \"and\";","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    private static final String INVALID_SORTING_OPTION \u003d \"sky\";","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    private static final String VALID_TITLE \u003d \"Sky Painting\";","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    private static final String VALID_DEADLINE \u003d \"3pm today\";","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"    private static final String VALID_STATUS \u003d \"not done\";","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    private static final String VALID_PRICE \u003d \"3\";","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    private static final String VALID_SORTING_OPTION \u003d \"deadline\";","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"    public void parsePhone_emptyString_returnsNull() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        assertEquals(ParserUtil.parsePhone(\"\"), null);","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"    public void parseEmail_emptyString_returnsNull() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"        assertEquals(ParserUtil.parseEmail(\"\"), null);","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"    public void parseTags_withCaseDifferences_returnsSameTagSet() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"        Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2023-03-21"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"        Set\u003cTag\u003e capitalTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1.toUpperCase(),","lastModifiedDate":"2023-03-21"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"                VALID_TAG_2.toUpperCase()));","lastModifiedDate":"2023-03-21"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"        assertEquals(tagSet, capitalTagSet);","lastModifiedDate":"2023-03-21"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"    public void parseTitle_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle((String) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"    public void parseTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTitle(INVALID_TITLE));","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"    public void parseTitle_validValueWithoutWhitespace_returnsTitle() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(VALID_TITLE));","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"    public void parseTitle_validValueWithWhitespace_returnsTrimmedTitle() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"        String titleWithWhitespace \u003d WHITESPACE + VALID_TITLE + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(titleWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"    public void parseDeadline_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":232,"author":{"gitId":"mmaimer33"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDeadline(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"    public void parseDeadline_emptyString_returnsNull() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"        assertEquals(ParserUtil.parseDeadline(\"\"), null);","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"    public void parseDeadline_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeadline(INVALID_DEADLINE));","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"    public void parseDeadline_validValueWithoutWhitespace_returnsDeadline() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"        Deadline expectedDeadline \u003d new Deadline(VALID_DEADLINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedDeadline, ParserUtil.parseDeadline(VALID_DEADLINE));","lastModifiedDate":"2023-03-13"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"    public void parseDeadline_validValueWithWhitespace_returnsTrimmedDeadline() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"        String deadlineWithWhitespace \u003d WHITESPACE + VALID_DEADLINE + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"        Deadline expectedDeadline \u003d new Deadline(VALID_DEADLINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedDeadline, ParserUtil.parseDeadline(deadlineWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"mmaimer33"},"content":"    public void parseStatus_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"mmaimer33"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStatus(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"mmaimer33"},"content":"    public void parseStatus_emptyString_throwsParseException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"mmaimer33"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStatus(\"\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"mmaimer33"},"content":"    public void parseStatus_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"mmaimer33"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStatus(INVALID_STATUS));","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"mmaimer33"},"content":"    public void parseStatus_validValueWithoutWhitespace_returnsStatus() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"mmaimer33"},"content":"        Status expectedStatus \u003d new Status(false); // produced by VALID_STATUS","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"mmaimer33"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(VALID_STATUS));","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"mmaimer33"},"content":"    public void parseStatus_validValueWithWhitespace_returnsStatus() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"mmaimer33"},"content":"        String statusWithWhitespace \u003d WHITESPACE + VALID_STATUS + WHITESPACE;","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"mmaimer33"},"content":"        Status expectedStatus \u003d new Status(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"mmaimer33"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(statusWithWhitespace));","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"zrei"},"content":"    public void parsePrice_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"zrei"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePrice(INVALID_PRICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":290,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":291,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"zrei"},"content":"    public void parsePrice_emptyString_returnsNull() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"zrei"},"content":"        assertEquals(ParserUtil.parsePrice(\"\"), null);","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"zrei"},"content":"    public void parsePrice_validValueWithoutWhitespace_returnsPrice() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"zrei"},"content":"        Price expectedPrice \u003d new Price(VALID_PRICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedPrice, ParserUtil.parsePrice(VALID_PRICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":300,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":301,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":302,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":303,"author":{"gitId":"zrei"},"content":"    public void parsePrice_validValueWithWhitespace_returnsTrimmedPrice() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":304,"author":{"gitId":"zrei"},"content":"        String priceWithWhitespace \u003d WHITESPACE + VALID_PRICE + WHITESPACE;","lastModifiedDate":"2023-03-23"},{"lineNumber":305,"author":{"gitId":"zrei"},"content":"        Price expectedPrice \u003d new Price(VALID_PRICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedPrice, ParserUtil.parsePrice(priceWithWhitespace));","lastModifiedDate":"2023-03-23"},{"lineNumber":307,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":308,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":309,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":310,"author":{"gitId":"zrei"},"content":"    public void parseSortingOption_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":311,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSortingOption((String) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":312,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":313,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":314,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":315,"author":{"gitId":"zrei"},"content":"    public void parseSortingOption_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":316,"author":{"gitId":"zrei"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSortingOption(INVALID_SORTING_OPTION));","lastModifiedDate":"2023-03-13"},{"lineNumber":317,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":318,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":319,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":320,"author":{"gitId":"zrei"},"content":"    public void parseSortingOption_validValueWithoutWhitespace_returnsSortingOption() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":321,"author":{"gitId":"zrei"},"content":"        assertEquals(BY_DEADLINE, ParserUtil.parseSortingOption(VALID_SORTING_OPTION));","lastModifiedDate":"2023-03-13"},{"lineNumber":322,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":323,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":324,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":325,"author":{"gitId":"zrei"},"content":"    public void parseSortingOption_validValueWithWhitespace_returnsSortingOption() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":326,"author":{"gitId":"zrei"},"content":"        String sortingOptionWithWhitespace \u003d WHITESPACE + VALID_SORTING_OPTION + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":327,"author":{"gitId":"zrei"},"content":"        assertEquals(BY_DEADLINE, ParserUtil.parseSortingOption(sortingOptionWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":328,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":329,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":330,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":331,"author":{"gitId":"zrei"},"content":"    public void parseSortingOption_withCaseDifferences_returnsSortingOption() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":332,"author":{"gitId":"zrei"},"content":"        String capitalSortingOption \u003d VALID_SORTING_OPTION.toUpperCase();","lastModifiedDate":"2023-03-21"},{"lineNumber":333,"author":{"gitId":"zrei"},"content":"        assertEquals(BY_DEADLINE, ParserUtil.parseSortingOption(capitalSortingOption));","lastModifiedDate":"2023-03-21"},{"lineNumber":334,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"zrei":146,"-":157,"mmaimer33":32}},{"path":"src/test/java/arb/logic/parser/client/AddClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMAIL_DESC_ALIAS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMAIL_DESC_ALIAS_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_EMAIL_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_PHONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_PHONE_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.NAME_DESC_ALIAS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.NAME_DESC_ALIAS_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PHONE_DESC_ALIAS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PHONE_DESC_ALIAS_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_ALIAS_FRIEND;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_ALIAS_HUSBAND;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.AMY;","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.BOB;","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"public class AddClientCommandParserTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    private AddClientCommandParser parser \u003d new AddClientCommandParser();","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        Client expectedClient \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        // multiple names, main prefix only - last name accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        // multiple names, alias prefix only - last name accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_ALIAS_AMY + NAME_DESC_ALIAS_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        // multiple names, mix of main prefixes and alias prefixes - last name accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_ALIAS_AMY + NAME_DESC_ALIAS_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"                + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        // multiple phones, main prefixes only - last phone accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        // multiple phones, alias prefix only - last phone accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_ALIAS_AMY + PHONE_DESC_ALIAS_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        // multiple phones, mix of main prefix and alias prefix - last name accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_ALIAS_AMY + PHONE_DESC_ALIAS_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        // multiple emails, main prefix only - last email accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        // multiple emails, alias prefix only - last email accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_ALIAS_AMY + EMAIL_DESC_ALIAS_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        // multiple emails, mix of main prefix and alias prefix - last name accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_ALIAS_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"                + EMAIL_DESC_ALIAS_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"        // multiple tags, main prefix only - all accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        Client expectedClientMultipleTags \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddClientCommand(expectedClientMultipleTags));","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        // multiple tags, alias prefix only - all accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_ALIAS_HUSBAND + TAG_DESC_ALIAS_FRIEND, new AddClientCommand(expectedClientMultipleTags));","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        // multiple tags, mix of main prefix and alias prefix - all accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_ALIAS_HUSBAND + TAG_DESC_FRIEND, new AddClientCommand(expectedClientMultipleTags));","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY,","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        // no phone number","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        expectedClient \u003d new ClientBuilder(AMY).withPhone(null).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        // no email","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"        expectedClient \u003d new ClientBuilder(AMY).withEmail(null).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"    public void parse_emptyValue_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"        // empty phone, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"        Client expectedClient \u003d new ClientBuilder(BOB).withPhone(null).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"                + EMPTY_PHONE,","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"        // empty phone, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"                + EMPTY_PHONE_ALIAS,","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"        // empty email, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"        expectedClient \u003d new ClientBuilder(BOB).withEmail(null).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + PHONE_DESC_BOB","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"                + EMPTY_EMAIL,","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"        // empty email, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + PHONE_DESC_BOB","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"                + EMPTY_EMAIL_ALIAS,","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"zrei":142,"-":56}},{"path":"src/test/java/arb/logic/parser/client/DeleteClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":" * outside of the DeleteClientCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":" * same path through the DeleteClientCommand, and therefore we test only one of them.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"public class DeleteClientCommandParserTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    private DeleteClientCommandParser parser \u003d new DeleteClientCommandParser();","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    public void parse_validArgs_returnsDeleteClientCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        assertParseSuccess(parser, \"1\", new DeleteClientCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zrei":31,"mmaimer33":2}},{"path":"src/test/java/arb/logic/parser/client/EditClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMAIL_DESC_ALIAS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMAIL_DESC_ALIAS_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_EMAIL_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_PHONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_PHONE_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_TAG_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.NAME_DESC_ALIAS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PHONE_DESC_ALIAS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PHONE_DESC_ALIAS_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_ALIAS_FRIEND;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_ALIAS_HUSBAND;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"import arb.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"public class EditClientCommandParserTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    private EditClientCommandParser parser \u003d new EditClientCommandParser();","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"1\", EditClientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Client} being edited,","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + EMPTY_TAG, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + EMPTY_TAG + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"1\" + EMPTY_TAG + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"mmaimer33"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"        // using main prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"        // using alias prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_ALIAS_BOB + TAG_DESC_ALIAS_HUSBAND","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"                + EMAIL_DESC_ALIAS_AMY + NAME_DESC_ALIAS_AMY + TAG_DESC_ALIAS_FRIEND;","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        // using a mix of main and alias prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_ALIAS_HUSBAND","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_ALIAS_AMY + TAG_DESC_ALIAS_FRIEND;","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"mmaimer33"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"        // using main prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"        // using alias prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_ALIAS_BOB + EMAIL_DESC_ALIAS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        // using a mix of main and alias prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_ALIAS_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"        // name, using main prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":166,"author":{"gitId":"mmaimer33"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"        // name, using alias prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_ALIAS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"        // phone, using main prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"        // phone, using alias prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_ALIAS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"        // email, using main prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"        // email, using alias prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_ALIAS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"        // tags, with main prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"        // tags, with alias prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_ALIAS_FRIEND;","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"mmaimer33"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-02-28"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_ALIAS_AMY + EMAIL_DESC_ALIAS_AMY","lastModifiedDate":"2023-03-20"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_ALIAS_FRIEND + PHONE_DESC_BOB + PHONE_DESC_ALIAS_BOB + EMAIL_DESC_ALIAS_BOB","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"mmaimer33"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2023-02-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"                .build();","lastModifiedDate":"2023-02-28"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"    public void parse_resetValues_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"mmaimer33"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"        // empty tag, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"        String userInput \u003d targetIndex.getOneBased() + EMPTY_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"        // empty tag, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_TAG_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"        // empty phone, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_PHONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(null).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"        // empty tag, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_PHONE_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"zrei"},"content":"        // empty email, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withEmail(null).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"zrei"},"content":"        // empty email, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_EMAIL_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"zrei":154,"-":112,"mmaimer33":9}},{"path":"src/test/java/arb/logic/parser/client/FindClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.client;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.commons.core.predicate.CombinedPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.FindClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.ClientContainsTagPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.testutil.PredicateUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"public class FindClientCommandParserTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    private FindClientCommandParser parser \u003d new FindClientCommandParser();","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public void parse_validArgs_returnsFindClientCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e expectedTags \u003d Arrays.asList(\"friend\");","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e expectedNames \u003d Arrays.asList(\"Alice\", \"Bob\");","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        ClientContainsTagPredicate expectedTagsPredicate \u003d new ClientContainsTagPredicate(expectedTags);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        NameContainsKeywordsPredicate expectedTitlesPredicate \u003d new NameContainsKeywordsPredicate(expectedNames);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        CombinedPredicate\u003cClient\u003e expectedCombinedPredicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"                PredicateUtil.getCombinedPredicate(expectedTagsPredicate, expectedTitlesPredicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        FindClientCommand expectedFindClientCommand \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"                new FindClientCommand(expectedCombinedPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, \" n/Alice n/Bob t/friend\", expectedFindClientCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, \" \\n n/Alice \\n \\t n/Bob  \\t t/friend \\n\", expectedFindClientCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zrei":48}},{"path":"src/test/java/arb/logic/parser/project/AddProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.CLIENT_DESC_ALIAS_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.CLIENT_DESC_ALIAS_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.CLIENT_DESC_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.CLIENT_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DEADLINE_DESC_ALIAS_OIL_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DEADLINE_DESC_ALIAS_SKY_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DEADLINE_DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DEADLINE_DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_DEADLINE;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_DEADLINE_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_PRICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_PRICE_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_PRICE_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_TITLE_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PRICE_DESC_ALIAS_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PRICE_DESC_ALIAS_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PRICE_DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PRICE_DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_ALIAS_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_ALIAS_POTTERY;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_POTTERY;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TITLE_DESC_ALIAS_OIL_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TITLE_DESC_ALIAS_SKY_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TITLE_DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TITLE_DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_CLIENT_NAME_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_DEADLINE_SKY_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PRICE_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_POTTERY;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TITLE_SKY_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.SKY_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.AddProjectCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"public class AddProjectCommandParserTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    private AddProjectCommandParser parser \u003d new AddProjectCommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        Project expectedProject \u003d new ProjectBuilder(SKY_PAINTING).withTags().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        Optional\u003cString\u003e expectedClientName \u003d Optional.of(VALID_CLIENT_NAME_ALICE);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_SKY_PAINTING + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        // multiple names, main prefix only - last name accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_OIL_PAINTING + TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_SKY_PAINTING + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        // multiple names, alias prefix only - last name accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_ALIAS_OIL_PAINTING + TITLE_DESC_ALIAS_SKY_PAINTING","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"                + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        // multiple names, mix of main and alias prefix - last name accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_OIL_PAINTING + TITLE_DESC_OIL_PAINTING + TITLE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"                + TITLE_DESC_ALIAS_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"                + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        // multiple deadlines, main prefix only - last deadline accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_OIL_PAINTING + DEADLINE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_SKY_PAINTING + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        // multiple deadlines, alias prefix only - last deadline accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_ALIAS_OIL_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"                + DEADLINE_DESC_ALIAS_SKY_PAINTING + PRICE_DESC_SKY_PAINTING + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        // multiple deadlines, mix of main and alias prefix - last deadline accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_OIL_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"                + DEADLINE_DESC_ALIAS_OIL_PAINTING + DEADLINE_DESC_ALIAS_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_SKY_PAINTING + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        // multiple prices, main prefix only - last price accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_OIL_PAINTING + PRICE_DESC_SKY_PAINTING + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        // multiple prices, alias prefix only - last price accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_ALIAS_OIL_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_ALIAS_SKY_PAINTING + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"        // multiple prices, mix of main and alias prefix - last price accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_ALIAS_SKY_PAINTING + PRICE_DESC_ALIAS_OIL_PAINTING + PRICE_DESC_OIL_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_SKY_PAINTING + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        // multiple clients, main prefix only - last client accepted","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"                + CLIENT_DESC_BOB + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        // multiple clients, alias prefix only - last client accepted","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"                + CLIENT_DESC_ALIAS_BOB + CLIENT_DESC_ALIAS_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        // multiple clients, mix of main and alias prefixes - last client accepted","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"                + CLIENT_DESC_ALICE + CLIENT_DESC_ALIAS_BOB + CLIENT_DESC_BOB + CLIENT_DESC_ALIAS_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        // multiple tags, main prefix only - all accepted","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"        Project expectedProjectMultipleTags \u003d new ProjectBuilder(SKY_PAINTING)","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"                .withTags(VALID_TAG_PAINTING, VALID_TAG_POTTERY)","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"                .build();","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"                + CLIENT_DESC_ALICE + TAG_DESC_POTTERY + TAG_DESC_PAINTING,","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProjectMultipleTags, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"        // multiple tags, alias prefix only - all accepted","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"                + CLIENT_DESC_ALICE + TAG_DESC_ALIAS_POTTERY + TAG_DESC_ALIAS_PAINTING,","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProjectMultipleTags, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        // multiple tags, mix of main and alias prefix - all accepted","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"                + CLIENT_DESC_ALICE + TAG_DESC_ALIAS_POTTERY + TAG_DESC_PAINTING,","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProjectMultipleTags, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"        Optional\u003cString\u003e expectedClientName \u003d Optional.of(VALID_CLIENT_NAME_ALICE);","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        // zero tags","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"        Project expectedProject \u003d new ProjectBuilder(SKY_PAINTING).withTags().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"                + CLIENT_DESC_ALICE, new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        // no deadline","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"        expectedProject \u003d new ProjectBuilder(SKY_PAINTING).withDeadline(null).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + TAG_DESC_PAINTING + TAG_DESC_POTTERY","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_SKY_PAINTING + CLIENT_DESC_ALICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"        // no price","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"        expectedProject \u003d new ProjectBuilder(SKY_PAINTING).withPrice(null).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + CLIENT_DESC_ALICE","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_PAINTING + TAG_DESC_POTTERY,","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, expectedClientName));","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"        // no linked client","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"        expectedProject \u003d new ProjectBuilder(SKY_PAINTING).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_PAINTING + TAG_DESC_POTTERY,","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, Optional.empty()));","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProjectCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"        // missing name prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, VALID_TITLE_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING,","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, VALID_TITLE_SKY_PAINTING + VALID_DEADLINE_SKY_PAINTING + VALID_PRICE_SKY_PAINTING","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"                + VALID_CLIENT_NAME_ALICE + VALID_TAG_PAINTING, expectedMessage);","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"        // invalid name","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, INVALID_TITLE_DESC + DEADLINE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_SKY_PAINTING, Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"        // invalid deadline","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, TITLE_DESC_SKY_PAINTING + INVALID_DEADLINE_DESC","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_SKY_PAINTING, Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"        // invalid price","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, TITLE_DESC_ALIAS_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"                + INVALID_PRICE_DESC, Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"        // invalid tag","lastModifiedDate":"2023-03-21"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"                + INVALID_TAG_DESC + VALID_TAG_PAINTING, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, INVALID_TITLE_DESC + INVALID_DEADLINE_DESC,","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"                Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"        // non-empty preamble","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + TITLE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"                + DEADLINE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING,","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"    public void parse_emptyValue_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"        // empty deadline, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"        Project expectedProject \u003d new ProjectBuilder(SKY_PAINTING).withDeadline(null).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + TAG_DESC_PAINTING + TAG_DESC_POTTERY","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_SKY_PAINTING + EMPTY_DEADLINE,","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, Optional.empty()));","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        // empty deadline, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + TAG_DESC_PAINTING + TAG_DESC_POTTERY","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_SKY_PAINTING + EMPTY_DEADLINE_ALIAS,","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, Optional.empty()));","lastModifiedDate":"2023-03-28"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"        // empty price, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"        expectedProject \u003d new ProjectBuilder(SKY_PAINTING).withPrice(null).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + TAG_DESC_PAINTING","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_POTTERY + EMPTY_PRICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, Optional.empty()));","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"        // empty price, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, TITLE_DESC_SKY_PAINTING + DEADLINE_DESC_SKY_PAINTING + TAG_DESC_PAINTING","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_POTTERY + EMPTY_PRICE_ALIAS,","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"                new AddProjectCommand(expectedProject, Optional.empty()));","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zrei":244}},{"path":"src/test/java/arb/logic/parser/project/DeleteProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"import arb.logic.commands.project.DeleteProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":" * outside of the DeleteProjectCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":" * same path through the DeleteProjectCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"public class DeleteProjectCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    private DeleteProjectCommandParser parser \u003d new DeleteProjectCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"    public void parse_validArgs_returnsDeleteProjectCommand() {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        assertParseSuccess(parser, \"1\", new DeleteProjectCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"mmaimer33":33}},{"path":"src/test/java/arb/logic/parser/project/EditProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.CLIENT_DESC_ALIAS_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.CLIENT_DESC_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DEADLINE_DESC_ALIAS_OIL_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.DEADLINE_DESC_ALIAS_SKY_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.DEADLINE_DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.DEADLINE_DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_CLIENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_CLIENT_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_DEADLINE;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_DEADLINE_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_PRICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_PRICE_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.EMPTY_TAG_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_PRICE_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.INVALID_TITLE_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PRICE_DESC_ALIAS_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PRICE_DESC_ALIAS_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PRICE_DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.PRICE_DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_ALIAS_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_ALIAS_POTTERY;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TAG_DESC_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.TITLE_DESC_ALIAS_SKY_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.TITLE_DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_CLIENT_NAME_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_DEADLINE_OIL_PAINTING;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_DEADLINE_SKY_PAINTING;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PRICE_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PRICE_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_POTTERY;","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TITLE_SKY_PAINTING;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"import arb.logic.commands.project.EditProjectCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.EditProjectCommand.EditProjectDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"import arb.testutil.EditProjectDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"public class EditProjectCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditProjectCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"    private EditProjectCommandParser parser \u003d new EditProjectCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"        // no index specified","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"        assertParseFailure(parser, VALID_TITLE_SKY_PAINTING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"        // no field specified","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"        assertParseFailure(parser, \"1\", EditProjectCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"        // no index and no field specified","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"        // negative index","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"verydaftpunk"},"content":"        assertParseFailure(parser, \"-5\" + TITLE_DESC_SKY_PAINTING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"        // zero index","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"verydaftpunk"},"content":"        assertParseFailure(parser, \"0\" + TITLE_DESC_SKY_PAINTING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"verydaftpunk"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"verydaftpunk"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"verydaftpunk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC,","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"verydaftpunk"},"content":"                Title.MESSAGE_CONSTRAINTS); // invalid title","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"verydaftpunk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_DESC,","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"                Deadline.MESSAGE_CONSTRAINTS); // invalid deadline","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PRICE_DESC,","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"                Price.MESSAGE_CONSTRAINTS); // invalid price","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"        // valid deadline followed by invalid deadline. The test case for invalid deadline","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"verydaftpunk"},"content":"        // followed by valid deadline","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"verydaftpunk"},"content":"        assertParseFailure(parser, \"1\" + DEADLINE_DESC_OIL_PAINTING","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"verydaftpunk"},"content":"                + INVALID_DEADLINE_DESC, Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"verydaftpunk"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC + INVALID_DEADLINE_DESC,","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"verydaftpunk"},"content":"                Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"verydaftpunk"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"        // using main prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"        String userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_OIL_PAINTING","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"                + TITLE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING + TAG_DESC_PAINTING","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"                + CLIENT_DESC_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"verydaftpunk"},"content":"                .withTitle(VALID_TITLE_SKY_PAINTING)","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"verydaftpunk"},"content":"                .withDeadline(VALID_DEADLINE_OIL_PAINTING)","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"                .withPrice(VALID_PRICE_SKY_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"                .withTags(VALID_TAG_PAINTING)","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"                .withLinkedClient(VALID_CLIENT_NAME_ALICE)","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"verydaftpunk"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"verydaftpunk"},"content":"        EditProjectCommand expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"verydaftpunk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"        // using alias prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_ALIAS_OIL_PAINTING","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"                + TITLE_DESC_ALIAS_SKY_PAINTING + PRICE_DESC_ALIAS_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_ALIAS_PAINTING + CLIENT_DESC_ALIAS_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"        // using a mix of main and alias prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_ALIAS_OIL_PAINTING","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"                + TITLE_DESC_SKY_PAINTING + PRICE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_ALIAS_PAINTING + CLIENT_DESC_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"verydaftpunk"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"        // using main prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"        String userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_OIL_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"verydaftpunk"},"content":"                .withDeadline(VALID_DEADLINE_OIL_PAINTING)","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"                .withPrice(VALID_PRICE_OIL_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"verydaftpunk"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"verydaftpunk"},"content":"        EditProjectCommand expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"verydaftpunk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"        // using alias prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_ALIAS_OIL_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_ALIAS_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"verydaftpunk"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"        // title, using main prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"verydaftpunk"},"content":"        String userInput \u003d targetIndex.getOneBased() + TITLE_DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"verydaftpunk"},"content":"                .withTitle(VALID_TITLE_SKY_PAINTING).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"verydaftpunk"},"content":"        EditProjectCommand expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"verydaftpunk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"        // title, using alias prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + TITLE_DESC_ALIAS_SKY_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"        // deadline, using main prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"verydaftpunk"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"verydaftpunk"},"content":"        descriptor \u003d new EditProjectDescriptorBuilder().withDeadline(VALID_DEADLINE_SKY_PAINTING).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"verydaftpunk"},"content":"        expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"verydaftpunk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"        // deadline, using alias prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_ALIAS_SKY_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"        // price, using main prefix","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + PRICE_DESC_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditProjectDescriptorBuilder().withPrice(VALID_PRICE_SKY_PAINTING).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"        // price, using alias prefix","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + PRICE_DESC_ALIAS_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"        // client, using main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + CLIENT_DESC_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditProjectDescriptorBuilder().withLinkedClient(VALID_CLIENT_NAME_ALICE).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"        // client, using alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + CLIENT_DESC_ALIAS_ALICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditProjectDescriptorBuilder().withLinkedClient(VALID_CLIENT_NAME_ALICE).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"        // tags, using main prefix","lastModifiedDate":"2023-03-21"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditProjectDescriptorBuilder().withTags(VALID_TAG_PAINTING).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        // tags, using alias prefix","lastModifiedDate":"2023-03-21"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_ALIAS_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"verydaftpunk"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"verydaftpunk"},"content":"        String userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_SKY_PAINTING","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"                + DEADLINE_DESC_ALIAS_SKY_PAINTING + DEADLINE_DESC_ALIAS_OIL_PAINTING","lastModifiedDate":"2023-03-20"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"                + DEADLINE_DESC_OIL_PAINTING + PRICE_DESC_SKY_PAINTING + PRICE_DESC_ALIAS_OIL_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"                + PRICE_DESC_ALIAS_SKY_PAINTING + PRICE_DESC_OIL_PAINTING","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"                + TAG_DESC_PAINTING + TAG_DESC_ALIAS_POTTERY;","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"verydaftpunk"},"content":"                .withDeadline(VALID_DEADLINE_OIL_PAINTING)","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"                .withPrice(VALID_PRICE_OIL_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"                .withTags(VALID_TAG_PAINTING, VALID_TAG_POTTERY)","lastModifiedDate":"2023-03-21"},{"lineNumber":236,"author":{"gitId":"verydaftpunk"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"verydaftpunk"},"content":"        EditProjectCommand expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"verydaftpunk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"verydaftpunk"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"verydaftpunk"},"content":"        // no other valid values specified","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"verydaftpunk"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DEADLINE_DESC + DEADLINE_DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"verydaftpunk"},"content":"                .withDeadline(VALID_DEADLINE_OIL_PAINTING).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"verydaftpunk"},"content":"        EditProjectCommand expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"verydaftpunk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"verydaftpunk"},"content":"        // other valid values specified","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"verydaftpunk"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_DEADLINE_DESC","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"verydaftpunk"},"content":"                + DEADLINE_DESC_OIL_PAINTING;","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"verydaftpunk"},"content":"        descriptor \u003d new EditProjectDescriptorBuilder().withDeadline(VALID_DEADLINE_OIL_PAINTING).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"verydaftpunk"},"content":"        expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"verydaftpunk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":260,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"    public void parse_resetValues_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-03-21"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":264,"author":{"gitId":"zrei"},"content":"        // empty tag, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"zrei"},"content":"        String userInput \u003d targetIndex.getOneBased() + EMPTY_TAG;","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"zrei"},"content":"        EditProjectDescriptor descriptor \u003d new EditProjectDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":267,"author":{"gitId":"zrei"},"content":"        EditProjectCommand expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":268,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"zrei"},"content":"        // empty tag, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_TAG_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"zrei"},"content":"        // empty deadline, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_DEADLINE;","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditProjectDescriptorBuilder().withDeadline(null).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"zrei"},"content":"        // empty deadline, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_DEADLINE_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"zrei"},"content":"        // empty price, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_PRICE;","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditProjectDescriptorBuilder().withPrice(null).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":288,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":290,"author":{"gitId":"zrei"},"content":"        // empty price, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_PRICE_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"zrei"},"content":"        // empty client, main prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_CLIENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditProjectDescriptorBuilder().withLinkedClient(null).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"zrei"},"content":"        expectedCommand \u003d new EditProjectCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":298,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"zrei"},"content":"        // empty client, alias prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"zrei"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPTY_CLIENT_ALIAS;","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-21"},{"lineNumber":303,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":304,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"verydaftpunk":135,"zrei":170}},{"path":"src/test/java/arb/logic/parser/project/FindProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.commons.core.predicate.CombinedPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.FindProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Status;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.predicates.IsOfStatusPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.LinkedClientNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.ProjectContainsTagsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.ProjectWithinTimeframePredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"public class FindProjectCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private FindProjectCommandParser parser \u003d new FindProjectCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    public void parse_validArgs_returnsFindProjectCommand() {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e expectedTags \u003d Arrays.asList(\"painting\");","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e expectedTitles \u003d Arrays.asList(\"Sky Painting\");","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e expectedClientNames \u003d Arrays.asList(\"Alice Wheeler\");","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        ProjectContainsTagsPredicate expectedTagsPredicate \u003d new ProjectContainsTagsPredicate(expectedTags);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        TitleContainsKeywordsPredicate expectedTitlesPredicate \u003d new TitleContainsKeywordsPredicate(expectedTitles);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"        IsOfStatusPredicate expectedStatusPredicate \u003d new IsOfStatusPredicate(new Status(false));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        ProjectWithinTimeframePredicate expectedTimeframePredicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"                new ProjectWithinTimeframePredicate(new Deadline(\"3pm 2023-01-01\"), null);","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        LinkedClientNameContainsKeywordsPredicate expectedClientPredicate \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"                new LinkedClientNameContainsKeywordsPredicate(expectedClientNames);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        CombinedPredicate\u003cProject\u003e expectedCombinedPredicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"                new CombinedPredicate\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"                expectedTagsPredicate, expectedTitlesPredicate, expectedStatusPredicate, expectedTimeframePredicate,","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"                expectedClientPredicate));","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        FindProjectCommand expectedFindProjectCommand \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"                new FindProjectCommand(expectedCombinedPredicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"        assertParseSuccess(parser, \" n/Sky Painting st/not done t/painting s/3pm 2023-01-01 c/Alice Wheeler\",","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"                expectedFindProjectCommand);","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"        // With whitespace","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"        assertParseSuccess(parser, \" \\n n/Sky Painting \\n \\t st/not done \\t t/painting  \"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"                        + \"\\t s/3pm 2023-01-01 \\n c/Alice Wheeler \\n\",","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"                expectedFindProjectCommand);","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":52,"mmaimer33":8}},{"path":"src/test/java/arb/logic/parser/project/LinkProjectToClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.LinkProjectToClientCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":" * outside of the DeleteProjectCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":" * same path through the DeleteProjectCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"public class LinkProjectToClientCommandParserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    private LinkProjectToClientCommandParser parser \u003d new LinkProjectToClientCommandParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    public void parse_validArgs_returnsLinkClientToProjectCommand() {","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, \"1\", new LinkProjectToClientCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkProjectToClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"zrei":33}},{"path":"src/test/java/arb/logic/parser/project/MarkProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.MarkProjectCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":" * outside of the MarkProjectCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":" * same path through the MarkProjectCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"public class MarkProjectCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    private MarkProjectCommandParser parser \u003d new MarkProjectCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    public void parse_validArgs_returnsMarkProjectCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, \"1\", new MarkProjectCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zrei":33}},{"path":"src/test/java/arb/logic/parser/project/SortProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.SORTING_OPTION_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjectSortingOptions.BY_DEADLINE;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjectSortingOptions.BY_DEADLINE_ALIAS;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.SortProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class SortProjectCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    private SortProjectCommandParser parser \u003d new SortProjectCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    public void parse_validArgs_returnsSortProjectCommand() {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        SortProjectCommand expectedSortProjectCommand \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"                new SortProjectCommand(BY_DEADLINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, SORTING_OPTION_DESC, expectedSortProjectCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        // alias option","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        expectedSortProjectCommand \u003d new SortProjectCommand(BY_DEADLINE_ALIAS);","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, SORTING_OPTION_DESC, expectedSortProjectCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":35}},{"path":"src/test/java/arb/logic/parser/project/UnmarkProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.logic.parser.project;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.UnmarkProjectCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":" * outside of the UnmarkProjectCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":" * same path through the UnmarkProjectCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"public class UnmarkProjectCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    private UnmarkProjectCommandParser parser \u003d new UnmarkProjectCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    public void parse_validArgs_returnsMarkProjectCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        assertParseSuccess(parser, \"1\", new UnmarkProjectCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zrei":33}},{"path":"src/test/java/arb/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_DEADLINE_OIL_PAINTING;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.SKY_PAINTING;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertEquals(Collections.emptyList(), addressBook.getClientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    public void resetData_withDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        // Two clients with the same identity fields","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        List\u003cClient\u003e newClients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newClients, Arrays.asList(), Arrays.asList());","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    public void resetData_withDuplicateProjects_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        // Two projects with the same identity fields","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        Project editedSkyPainting \u003d new ProjectBuilder(SKY_PAINTING).withDeadline(VALID_DEADLINE_OIL_PAINTING)","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"                .build();","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        List\u003cProject\u003e newProjects \u003d Arrays.asList(SKY_PAINTING, editedSkyPainting);","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        AddressBookStub newData \u003d new AddressBookStub(Arrays.asList(), newProjects, Arrays.asList());","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasClient((Client) null));","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"    public void hasProject_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasProject(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        assertFalse(addressBook.hasClient(ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"    public void hasProject_projectNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        assertFalse(addressBook.hasProject(SKY_PAINTING));","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        assertTrue(addressBook.hasClient(ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"    public void hasProject_projectInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        addressBook.addProject(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        assertTrue(addressBook.hasProject(SKY_PAINTING));","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"    public void hasClient_clientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"        assertTrue(addressBook.hasClient(editedAlice));","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"    public void hasProject_projectWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        addressBook.addProject(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        Project editedSkyPainting \u003d new ProjectBuilder(SKY_PAINTING).withDeadline(VALID_DEADLINE_OIL_PAINTING)","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"                .build();","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        assertTrue(addressBook.hasProject(editedSkyPainting));","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"    public void getClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getClientList().remove(0));","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"    public void getProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getProjectList().remove(0));","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    public void getTagMappingList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTagMappingList().remove(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"     * A stub ReadOnlyAddressBook whose clients list and projects list can violate interface constraints.","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"        private final ObservableList\u003cProject\u003e projects \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"        private final ObservableList\u003cTagMapping\u003e tagMappings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        AddressBookStub(Collection\u003cClient\u003e clients, Collection\u003cProject\u003e projects, Collection\u003cTagMapping\u003e tagMappings) {","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"            this.projects.setAll(projects);","lastModifiedDate":"2023-03-07"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"            this.tagMappings.setAll(tagMappings);","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"            return clients;","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cProject\u003e getProjectList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"            return projects;","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"        public ObservableList\u003cTagMapping\u003e getTagMappingList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"            return tagMappings;","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"zrei":105,"-":62}},{"path":"src/test/java/arb/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.CLIENT_NAME_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.CLIENT_NO_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_DEADLINE_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.model.Model.PROJECT_NO_COMPARATOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.BENSON;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.OIL_PAINTING;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.SKY_PAINTING;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"import arb.testutil.AddressBookBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        assertTrue(modelManager.hasClient(ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"    public void hasProject_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasProject(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"    public void hasProject_projectNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        assertFalse(modelManager.hasProject(SKY_PAINTING));","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"    public void hasProject_projectInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"        modelManager.addProject(SKY_PAINTING);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        assertTrue(modelManager.hasProject(SKY_PAINTING));","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"    public void getFilteredProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredProjectList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"    public void getSortedClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getSortedClientList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"    public void getSortedProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getSortedProjectList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"    public void getTagMappingList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getTagMappingList().remove(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withClient(BENSON).withClient(ALICE)","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"                .withProject(OIL_PAINTING).withProject(SKY_PAINTING).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"        // different filteredClientList -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"        modelManager.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"        // different sortedClientList -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"        modelManager.updateSortedClientList(CLIENT_NAME_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"        modelManager.updateSortedClientList(CLIENT_NO_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"        // different sortedProjectList -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        modelManager.updateSortedProjectList(PROJECT_DEADLINE_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"        modelManager.updateSortedProjectList(PROJECT_NO_COMPARATOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"zrei":65,"-":124}},{"path":"src/test/java/arb/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"zrei":2,"-":19}},{"path":"src/test/java/arb/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.BOB;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.CRAYON_PROJECT;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"public class ClientTest {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e client.getTags().remove(0));","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public void isSameClient() {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        assertTrue(ALICE.isSameClient(ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        assertFalse(ALICE.isSameClient(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"                .withTags(VALID_TAG_HUSBAND).withProjects(CRAYON_PROJECT).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        assertTrue(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        // same name, all nullable attributes null -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(null).withEmail(null).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        assertTrue(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        assertFalse(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        Client editedBob \u003d new ClientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        editedBob \u003d new ClientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        // null phone -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(null).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        // null email -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withEmail(null).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        // different linked project -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withProjects(CRAYON_PROJECT).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"zrei":49,"-":54}},{"path":"src/test/java/arb/model/client/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"zrei":2,"-":66}},{"path":"src/test/java/arb/model/client/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"zrei":2,"-":38}},{"path":"src/test/java/arb/model/client/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"zrei":2,"-":38}},{"path":"src/test/java/arb/model/client/UniqueClientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.BOB;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.CRAYON_PROJECT;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.CROCHET;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"public class UniqueClientListTest {","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private final UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public void contains_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.contains((Client) null));","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public void contains_clientNotInList_returnsFalse() {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertFalse(uniqueClientList.contains(ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public void contains_clientInList_returnsTrue() {","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertTrue(uniqueClientList.contains(ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    public void contains_clientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"                .build();","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        assertTrue(uniqueClientList.contains(editedAlice));","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    public void add_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.add(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    public void add_duplicateClient_throwsDuplicateClientException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.add(ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    public void setClient_nullTargetClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(null, ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    public void setClient_nullEditedClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(ALICE, null));","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    public void setClient_targetClientNotInList_throwsClientNotFoundException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.setClient(ALICE, ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"    public void setClient_editedClientIsSameClient_success() {","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        uniqueClientList.setClient(ALICE, ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"        expectedUniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    public void setClient_editedClientHasSameIdentity_success() {","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"                .build();","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        uniqueClientList.setClient(ALICE, editedAlice);","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        expectedUniqueClientList.add(editedAlice);","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    public void setClient_editedClientHasDifferentIdentity_success() {","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        uniqueClientList.setClient(ALICE, BOB);","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"    public void setClient_editedClientHasNonUniqueIdentity_throwsDuplicateClientException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(BOB);","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClient(ALICE, BOB));","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"    public void remove_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.remove(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"    public void remove_clientDoesNotExist_throwsClientNotFoundException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.remove(ALICE));","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"    public void remove_existingClient_removesClient() {","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"        uniqueClientList.remove(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"    public void setClients_nullUniqueClientList_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((UniqueClientList) null));","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"    public void setClients_uniqueClientList_replacesOwnListWithProvidedUniqueClientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"        uniqueClientList.setClients(expectedUniqueClientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"    public void setClients_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((List\u003cClient\u003e) null));","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"    public void setClients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        List\u003cClient\u003e clientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"        uniqueClientList.setClients(clientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"    public void setClients_listWithDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"        List\u003cClient\u003e listWithDuplicateClients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClients(listWithDuplicateClients));","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"            -\u003e uniqueClientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"    public void unlinkClientFromProject_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"        Client aliceWithProject \u003d new ClientBuilder(ALICE).withProjects(project).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        project.linkToClient(aliceWithProject);","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(aliceWithProject);","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"        UniqueClientList expectedClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"        expectedClientList.add(ALICE);","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"        uniqueClientList.unlinkClientFromProject(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedClientList, uniqueClientList);","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"    public void unlinkClientFromProject_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.unlinkClientFromProject(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"    public void linkClientToProjectByClientObject_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"        Client aliceWithProject \u003d new ClientBuilder(ALICE).withProjects(project).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(aliceCopy);","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"        UniqueClientList expectedClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"        expectedClientList.add(aliceWithProject);","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"        uniqueClientList.linkClientToProject(aliceCopy, project);","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueClientList, expectedClientList);","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"    public void linkClientToProject_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"                .linkClientToProject(ALICE, null));","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"                .linkClientToProject((Client) null, CRAYON_PROJECT));","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"                .linkClientToProject((Name) null, CRAYON_PROJECT));","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"    public void linkClientToProjectByClientName_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"        Client aliceWithProject \u003d new ClientBuilder(ALICE).withProjects(project).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(aliceCopy);","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"        UniqueClientList expectedClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"        expectedClientList.add(aliceWithProject);","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"        uniqueClientList.linkClientToProject(aliceCopy.getName(), project);","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueClientList, expectedClientList);","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"    public void transferLinkedClients_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.transferLinkedClients(null, CRAYON_PROJECT));","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.transferLinkedClients(CRAYON_PROJECT, null));","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"    public void resetClientLinkings_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"        Project crayonCopy \u003d new ProjectBuilder(CRAYON_PROJECT).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"        Project crochetCopy \u003d new ProjectBuilder(CROCHET).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"        Client aliceWithCrayon \u003d new ClientBuilder(ALICE).withProjects(crayonCopy).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"        Client bobWithCrochet \u003d new ClientBuilder(BOB).withProjects(crochetCopy).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(aliceWithCrayon);","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"        uniqueClientList.add(bobWithCrochet);","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"        UniqueClientList expectedClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"        expectedClientList.add(ALICE);","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"        expectedClientList.add(BOB);","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"        uniqueClientList.resetProjectLinkings();","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueClientList, expectedClientList);","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"zrei":245}},{"path":"src/test/java/arb/model/client/predicates/ClientContainsTagPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class ClientContainsTagPredicateTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e firstPredicateTagList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e secondPredicateTagList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        ClientContainsTagPredicate firstPredicate \u003d new ClientContainsTagPredicate(firstPredicateTagList);","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        ClientContainsTagPredicate secondPredicate \u003d new ClientContainsTagPredicate(secondPredicateTagList);","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        ClientContainsTagPredicate firstPredicateCopy \u003d new ClientContainsTagPredicate(firstPredicateTagList);","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        ClientContainsTagPredicate secondPredicateCopy \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"                new ClientContainsTagPredicate(Arrays.asList(\"second\", \"first\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertTrue(secondPredicateCopy.equals(secondPredicate)); // different order -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    public void test_clientContainsTag_returnsTrue() {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        // One tag","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        ClientContainsTagPredicate predicate \u003d new ClientContainsTagPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ClientBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        // Multiple tags","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ClientContainsTagPredicate(Arrays.asList(\"friend\", \"husband\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ClientBuilder().withTags(\"frined\", \"husband\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        // Only one matching tag","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ClientContainsTagPredicate(Arrays.asList(\"friend\", \"husband\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ClientBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        // Mixed-case tags","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ClientContainsTagPredicate(Arrays.asList(\"frIenD\", \"huSBand\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ClientBuilder().withTags(\"friend\", \"husband\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    public void test_clientDoesNotContainTags_returnsFalse() {","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        // Zero tags","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        ClientContainsTagPredicate predicate \u003d new ClientContainsTagPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ClientBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        // Non-matching tag","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ClientContainsTagPredicate(Arrays.asList(\"husband\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ClientBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        // Tags match name but does not match tag","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ClientContainsTagPredicate(Arrays.asList(\"Alice\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").withTags(\"friend\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zrei":78}},{"path":"src/test/java/arb/model/client/predicates/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.client.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        // different keywords -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        NameContainsKeywordsPredicate secondPredicateCopy \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"second\", \"first\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertTrue(secondPredicate.equals(secondPredicateCopy)); // different order -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        // Keywords match phone, and email, but does not match name","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zrei":17,"-":62}},{"path":"src/test/java/arb/model/project/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null));","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    public void constructor_invalid_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        String invalidDeadline \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDeadline));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    public void constructor_valid_deadlineObject() {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(new Deadline(\"2023-03-05\") instanceof Deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    public void isValidDeadline() {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        // null deadline","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDeadline(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        // invalid deadlines","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        assertFalse(Deadline.isValidDeadline(\"\")); // empty string","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        assertFalse(Deadline.isValidDeadline(\" \")); // only whitespace","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        assertFalse(Deadline.isValidDeadline(\"*\u003d\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertFalse(Deadline.isValidDeadline(\"sky\")); // contains string that cannot be parsed to a date and time","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        // valid deadlines","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        assertTrue(Deadline.isValidDeadline(\"2023-03-03\")); // date only","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        assertTrue(Deadline.isValidDeadline(\"3pm\")); // time only","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        assertTrue(Deadline.isValidDeadline(\"3pm 2022-03-03\")); // date and time","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertTrue(Deadline.isValidDeadline(\"midnight\")); // natural language processing for time","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        assertTrue(Deadline.isValidDeadline(\"tomorrow\")); // natural language processing for date","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        assertTrue(Deadline.isValidDeadline(\"2pm tomorrow\")); // time with natural language processing for date","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        assertTrue(Deadline.isValidDeadline(\"midnight tomorrow\")); // natural language processing for date and time","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"zrei":20,"mmaimer33":28}},{"path":"src/test/java/arb/model/project/PriceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"public class PriceTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Price(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public void constructor_invalid_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        String invalidPrice \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Price(invalidPrice));","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    public void constructor_valid_priceObject() {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        assertTrue(new Price(\"3\") instanceof Price);","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public void isValidPrice() {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        // null price","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e Price.isValidPrice(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        // invalid prices","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        assertFalse(Price.isValidPrice(\"\")); // empty string","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        assertFalse(Price.isValidPrice(\" \")); // only whitespace","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        assertFalse(Price.isValidPrice(\"*\u003d\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertFalse(Price.isValidPrice(\"sky\")); // contains non-numeric characters","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        assertFalse(Price.isValidPrice(\"0003\")); // number with padded zeroes","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        assertFalse(Price.isValidPrice(\"3.000\")); // number with trailing decimals of zero","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        // valid prices","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertTrue(Price.isValidPrice(\"3\")); // number only","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        assertTrue(Price.isValidPrice(\"3.15\")); // number with decimals","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"zrei":45,"Johnchiahk":1}},{"path":"src/test/java/arb/model/project/ProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_DEADLINE_OIL_PAINTING;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_DEADLINE_SKY_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PRICE_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PRICE_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TITLE_OIL_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TITLE_SKY_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.OIL_PAINTING;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.SKY_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"public class ProjectTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"    public void equals() {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"        Project defaultProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        Project defaultCopy \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        Project sky \u003d new ProjectBuilder().withTitle(VALID_TITLE_SKY_PAINTING)","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"                .withDeadline(VALID_DEADLINE_SKY_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                .withPrice(VALID_PRICE_SKY_PAINTING)","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"                .withLinkedClient(ALICE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(defaultProject.equals(null)); // null","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(defaultProject.equals(3)); // different type","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(defaultProject.equals(sky)); // different project","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        Project editedSky;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        editedSky \u003d new ProjectBuilder(sky).withTitle(VALID_TITLE_OIL_PAINTING).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(sky.equals(editedSky)); // changed title","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        editedSky \u003d new ProjectBuilder(sky).withDeadline(VALID_DEADLINE_OIL_PAINTING).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(sky.equals(editedSky)); // changed deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        editedSky \u003d new ProjectBuilder(sky).withPrice(VALID_PRICE_OIL_PAINTING).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        assertFalse(sky.equals(editedSky)); // changed price","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        editedSky \u003d new ProjectBuilder(sky).withLinkedClient(BOB).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        assertFalse(sky.equals(editedSky)); // changed linked client","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        editedSky \u003d new ProjectBuilder(sky).withStatus(true).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        assertFalse(sky.equals(editedSky)); // changed status","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        editedSky \u003d new ProjectBuilder(editedSky).withStatus(false).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(sky.equals(editedSky)); // reverted status","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        editedSky \u003d new ProjectBuilder(sky).withTags(VALID_TAG_PAINTING).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        assertFalse(sky.equals(editedSky)); // changed tags","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(defaultProject.equals(defaultProject)); // Same instance","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(defaultProject.equals(defaultCopy)); // Same details","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"        Project defaultProjectWithoutDeadline \u003d new ProjectBuilder().withDeadline(null).build();","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        Project defaultCopyWithoutDeadline \u003d new ProjectBuilder().withDeadline(null).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        Project skyWithoutDeadline \u003d new ProjectBuilder()","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"                .withTitle(VALID_TITLE_SKY_PAINTING).withPrice(VALID_PRICE_SKY_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"                .withDeadline(null).withLinkedClient(ALICE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(defaultProjectWithoutDeadline.equals(null)); // null","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(defaultProjectWithoutDeadline.equals(3)); // different type","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(defaultProjectWithoutDeadline.equals(skyWithoutDeadline)); //different project","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(defaultProjectWithoutDeadline.equals(defaultProject)); // different deadlines","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        Project defaultProjectWithoutPrice \u003d new ProjectBuilder().withPrice(null).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        Project skyWithoutPrice \u003d new ProjectBuilder()","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"                .withTitle(VALID_TITLE_SKY_PAINTING).withPrice(null).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        assertFalse(defaultProjectWithoutPrice.equals(null)); // null","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        assertFalse(defaultProjectWithoutPrice.equals(3)); // different type","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        assertFalse(defaultProjectWithoutPrice.equals(skyWithoutPrice)); //different project","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        assertFalse(defaultProjectWithoutPrice.equals(defaultProject)); // different prices","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        Project editedSkyWithDeadline \u003d new ProjectBuilder(skyWithoutDeadline)","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"                .withDeadline(VALID_DEADLINE_SKY_PAINTING).withStatus(true).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        editedSky \u003d new ProjectBuilder(sky).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"Johnchiahk"},"content":"        assertFalse(editedSkyWithDeadline.equals(editedSky));","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        editedSkyWithDeadline \u003d new ProjectBuilder(editedSkyWithDeadline)","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"                .withStatus(false).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(editedSkyWithDeadline.equals(editedSky));","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(defaultProjectWithoutDeadline.equals(defaultCopyWithoutDeadline));","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Johnchiahk"},"content":"        assertTrue(defaultCopyWithoutDeadline.equals(defaultProjectWithoutDeadline));","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"    public void isSameProject() {","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        assertTrue(SKY_PAINTING.isSameProject(SKY_PAINTING));","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        assertFalse(SKY_PAINTING.isSameProject(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        Project editedSkyPainting \u003d new ProjectBuilder(SKY_PAINTING).withDeadline(VALID_DEADLINE_OIL_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"                .withPrice(VALID_PRICE_OIL_PAINTING).withStatus(true).withLinkedClient(ALICE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        assertTrue(SKY_PAINTING.isSameProject(editedSkyPainting));","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        editedSkyPainting \u003d new ProjectBuilder(SKY_PAINTING).withTitle(VALID_TITLE_OIL_PAINTING).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"        assertFalse(SKY_PAINTING.isSameProject(editedSkyPainting));","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"        Project editedOilPainting \u003d new ProjectBuilder(OIL_PAINTING)","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"                .withTitle(VALID_TITLE_OIL_PAINTING.toLowerCase()).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"        assertFalse(OIL_PAINTING.isSameProject(editedOilPainting));","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        String titleWithTrailingSpaces \u003d VALID_TITLE_OIL_PAINTING + \" \";","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        editedOilPainting \u003d new ProjectBuilder(OIL_PAINTING).withTitle(titleWithTrailingSpaces).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        assertFalse(OIL_PAINTING.isSameProject(editedOilPainting));","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"    public void isOverdue() {","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        // due yesterday and is not done","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"        Project overdueProject \u003d new ProjectBuilder().withDeadline(\"yesterday\").build();","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"        assertTrue(overdueProject.isOverdue());","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        // due tomorrow and is done","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"        Project notOverdueProject \u003d new ProjectBuilder().withDeadline(\"tomorrow\").withStatus(true).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        assertFalse(notOverdueProject.isOverdue());","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        // due tomorrow and is not done","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"        notOverdueProject \u003d new ProjectBuilder().withDeadline(\"tomorrow\").build();","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        assertFalse(notOverdueProject.isOverdue());","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"        // due yesterday and is done","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"        notOverdueProject \u003d new ProjectBuilder().withDeadline(\"yesterday\").withStatus(true).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"        assertFalse(notOverdueProject.isOverdue());","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"        // no deadline and is not done","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"        notOverdueProject \u003d new ProjectBuilder().withDeadline(null).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"        assertFalse(notOverdueProject.isOverdue());","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"        // no deadline and is done","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"        notOverdueProject \u003d new ProjectBuilder().withDeadline(null).withStatus(true).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"        assertFalse(notOverdueProject.isOverdue());","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"zrei":102,"Johnchiahk":10,"mmaimer33":31}},{"path":"src/test/java/arb/model/project/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"public class StatusTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    public void getStatus() {","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"        Status s1 \u003d new Status(); // Default","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(s1.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"        Status s2 \u003d new Status(true); // True","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(s2.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    public void setTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        Status initFalse \u003d new Status();","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        Status initTrue \u003d new Status(true);","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"        initFalse.setTrue();","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        initTrue.setTrue();","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(initFalse.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(initTrue.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"    public void setFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"        Status initFalse \u003d new Status();","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        Status initTrue \u003d new Status(true);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        initFalse.setFalse();","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"        initTrue.setFalse();","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(initFalse.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(initTrue.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"    public void equals() {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"        Status falseStatus \u003d new Status();","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"        Status trueStatus \u003d new Status(true);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(falseStatus.equals(trueStatus)); // Check opposites","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(falseStatus.equals(new Status(false))); // Check against new","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"        falseStatus.setTrue();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(trueStatus.equals(falseStatus)); // Changed","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"mmaimer33":53}},{"path":"src/test/java/arb/model/project/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"public class TitleTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    public void constructor_invalid_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    public void isValidTitle() {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        // null title","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        // invalid titles","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(Title.isValidTitle(\" \")); // only whitespace","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(Title.isValidTitle(\"*\u003d\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(Title.isValidTitle(\"hehe%\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        // valid titles","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(Title.isValidTitle(\"Large Tree\")); // alphabets only","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(Title.isValidTitle(\"13\")); // numbers only","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(Title.isValidTitle(\"Large Tree num 3\")); // alphanumerics","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(Title.isValidTitle(\"I want a Large Tree near a lake on the 5th hill\")); // long title","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"mmaimer33":40}},{"path":"src/test/java/arb/model/project/UniqueProjectListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_DEADLINE_OIL_PAINTING;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.OIL_PAINTING;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.SKY_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.project.exceptions.ProjectNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"public class UniqueProjectListTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private final UniqueProjectList uniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public void contains_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.contains(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public void contains_projectNotInList_returnsFalse() {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertFalse(uniqueProjectList.contains(SKY_PAINTING));","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public void contains_projectInList_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertTrue(uniqueProjectList.contains(SKY_PAINTING));","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    public void contains_projectWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        Project editedSkyPainting \u003d new ProjectBuilder(SKY_PAINTING).withDeadline(null)","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"                .build();","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        assertTrue(uniqueProjectList.contains(editedSkyPainting));","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    public void add_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.add(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    public void add_duplicateProject_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.add(SKY_PAINTING));","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    public void setProject_nullTargetProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProject(null, SKY_PAINTING));","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    public void setProject_nullEditedProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProject(SKY_PAINTING, null));","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    public void setProject_targetProjectNotInList_throwsProjectNotFoundException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        assertThrows(ProjectNotFoundException.class, () -\u003e uniqueProjectList.setProject(SKY_PAINTING, SKY_PAINTING));","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"    public void setProject_editedProjectIsSameProject_success() {","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.setProject(SKY_PAINTING, SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expecteduniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"        expecteduniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        assertEquals(expecteduniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    public void setProject_editedProjectHasSameIdentity_success() {","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        Project editedSkyPainting \u003d new ProjectBuilder(SKY_PAINTING).withDeadline(VALID_DEADLINE_OIL_PAINTING)","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"                .build();","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.setProject(SKY_PAINTING, editedSkyPainting);","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expecteduniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        expecteduniqueProjectList.add(editedSkyPainting);","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        assertEquals(expecteduniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    public void setProject_editedProjectHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.setProject(SKY_PAINTING, OIL_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expecteduniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        expecteduniqueProjectList.add(OIL_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        assertEquals(expecteduniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"    public void setProject_editedProjectHasNonUniqueIdentity_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(OIL_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.setProject(SKY_PAINTING, OIL_PAINTING));","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"    public void remove_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.remove(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"    public void remove_projectDoesNotExist_throwsProjectNotFoundException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        assertThrows(ProjectNotFoundException.class, () -\u003e uniqueProjectList.remove(SKY_PAINTING));","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"    public void remove_existingProject_removesProject() {","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.remove(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expecteduniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        assertEquals(expecteduniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"    public void setProjects_nulluniqueProjectList_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProjects((UniqueProjectList) null));","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"    public void setProjects_uniqueProjectList_replacesOwnListWithProvideduniqueProjectList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expecteduniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"        expecteduniqueProjectList.add(OIL_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.setProjects(expecteduniqueProjectList);","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        assertEquals(expecteduniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"    public void setProjects_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProjects((List\u003cProject\u003e) null));","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"    public void setProjects_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        List\u003cProject\u003e projectList \u003d Collections.singletonList(OIL_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.setProjects(projectList);","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expecteduniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"        expecteduniqueProjectList.add(OIL_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"        assertEquals(expecteduniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"    public void setProjects_listWithDuplicateProjects_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"        List\u003cProject\u003e listWithDuplicateProjects \u003d Arrays.asList(SKY_PAINTING, SKY_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.setProjects(listWithDuplicateProjects));","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"    public void linkProjectToClient_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"        Project skyWithLinkedClient \u003d new ProjectBuilder(SKY_PAINTING).withLinkedClient(client).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"        Project skyCopy \u003d new ProjectBuilder(SKY_PAINTING).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(skyCopy);","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.linkProjectToClient(skyCopy, client);","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expectedProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"        expectedProjectList.add(skyWithLinkedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueProjectList, expectedProjectList);","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"    public void linkProjectToClient_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.linkProjectToClient(null, ALICE));","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.linkProjectToClient(SKY_PAINTING, null));","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"    public void unlinkProjectFromClient_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"        Project projectCopy \u003d new ProjectBuilder().withLinkedClient(client).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(projectCopy);","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.unlinkProjectFromClient(projectCopy);","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expectedProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"        expectedProjectList.add(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueProjectList, expectedProjectList);","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"    public void unlinkProjectFromClient_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.unlinkProjectFromClient(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"    public void removeAllLinks_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"        Project skyWithLinkedClient \u003d new ProjectBuilder(SKY_PAINTING).withLinkedClient(client).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"        Project sky \u003d new ProjectBuilder(SKY_PAINTING).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"        Project oilWithLinkedClient \u003d new ProjectBuilder(OIL_PAINTING).withLinkedClient(client).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"        Project oil \u003d new ProjectBuilder(OIL_PAINTING).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"        client.linkProject(skyWithLinkedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"        client.linkProject(oilWithLinkedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(skyWithLinkedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(oilWithLinkedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.removeAllLinks(client);","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expectedProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"        expectedProjectList.add(sky);","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"        expectedProjectList.add(oil);","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueProjectList, expectedProjectList);","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"    public void removeAllLinks_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.removeAllLinks(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"    public void transferLinkedProjects_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.transferLinkedProjects(null, ALICE));","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.transferLinkedProjects(ALICE, null));","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"    public void resetClientLinkings_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"        Client bobCopy \u003d new ClientBuilder(BOB).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"        Project skyWithAlice \u003d new ProjectBuilder(SKY_PAINTING).withLinkedClient(aliceCopy).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"        Project oilWithBob \u003d new ProjectBuilder(OIL_PAINTING).withLinkedClient(bobCopy).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(skyWithAlice);","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(oilWithBob);","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expectedProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"        expectedProjectList.add(SKY_PAINTING);","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"        expectedProjectList.add(OIL_PAINTING);","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.resetClientLinkings();","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueProjectList, expectedProjectList);","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"    public void markProjectAsDone_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"        Project doneProject \u003d new ProjectBuilder().withStatus(true).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.markProjectAsDone(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expectedProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"        expectedProjectList.add(doneProject);","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueProjectList, expectedProjectList);","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"    public void markProjectAsDone_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.markProjectAsDone(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"zrei"},"content":"    public void markProjectAsNotDone_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":265,"author":{"gitId":"zrei"},"content":"        Project project \u003d new ProjectBuilder().withStatus(true).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"zrei"},"content":"        Project notDoneProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.add(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":268,"author":{"gitId":"zrei"},"content":"        uniqueProjectList.markProjectAsNotDone(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"zrei"},"content":"        UniqueProjectList expectedProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"zrei"},"content":"        expectedProjectList.add(notDoneProject);","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueProjectList, expectedProjectList);","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":274,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":275,"author":{"gitId":"zrei"},"content":"    public void markProjectAsNotDone_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":276,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.markProjectAsNotDone(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":277,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":278,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":279,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":280,"author":{"gitId":"zrei"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":281,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-07"},{"lineNumber":282,"author":{"gitId":"zrei"},"content":"            -\u003e uniqueProjectList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-07"},{"lineNumber":283,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":284,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zrei":284}},{"path":"src/test/java/arb/model/project/predicates/IsOfStatusPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.model.project.predicates;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Status;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"public class IsOfStatusPredicateTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    public void equals() {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"        IsOfStatusPredicate donePredicate \u003d new IsOfStatusPredicate(new Status(true));","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"        IsOfStatusPredicate notDonePredicate \u003d new IsOfStatusPredicate(new Status(false));","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"        // Same object","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(donePredicate.equals(donePredicate));","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        // Same value -\u003e true","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        IsOfStatusPredicate donePredicateCopy \u003d new IsOfStatusPredicate(new Status(true));","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(donePredicate.equals(donePredicateCopy));","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        // null -\u003e false","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(donePredicate.equals(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        // Different type -\u003e false","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(donePredicate.equals(3));","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        // Different values -\u003e false","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(donePredicate.equals(notDonePredicate));","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"    public void test_projectMatchesStatus_returnsTrue() {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        // Done status","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"        IsOfStatusPredicate donePredicate \u003d new IsOfStatusPredicate(new Status(true));","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(donePredicate.test(new ProjectBuilder().withStatus(true).build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"        // Not done status","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"        IsOfStatusPredicate notDonePredicate \u003d new IsOfStatusPredicate(new Status(false));","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"        assertTrue(notDonePredicate.test(new ProjectBuilder().withStatus(false).build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"    public void test_projectDoesNotMatchStatus_returnsFalse() {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"        // Done status","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"        IsOfStatusPredicate donePredicate \u003d new IsOfStatusPredicate(new Status(true));","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(donePredicate.test(new ProjectBuilder().withStatus(false).build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"        // Not done status","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"        IsOfStatusPredicate notDonePredicate \u003d new IsOfStatusPredicate(new Status(false));","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"        assertFalse(notDonePredicate.test(new ProjectBuilder().withStatus(true).build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"mmaimer33":55}},{"path":"src/test/java/arb/model/project/predicates/LinkedClientNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project.predicates;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"public class LinkedClientNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        LinkedClientNameContainsKeywordsPredicate firstPredicate \u003d new LinkedClientNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        LinkedClientNameContainsKeywordsPredicate secondPredicate \u003d new LinkedClientNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        LinkedClientNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"                new LinkedClientNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        // different keywords -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        LinkedClientNameContainsKeywordsPredicate secondPredicateCopy \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"                new LinkedClientNameContainsKeywordsPredicate(Arrays.asList(\"second\", \"first\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        assertTrue(secondPredicate.equals(secondPredicateCopy)); // different order","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    public void test_linkedClientNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        Client linkedClient \u003d new ClientBuilder().withName(\"Alice Fuller\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        // One keyword","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        LinkedClientNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"                new LinkedClientNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withLinkedClient(linkedClient).build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        predicate \u003d new LinkedClientNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Fuller\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withLinkedClient(linkedClient).build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        predicate \u003d new LinkedClientNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withLinkedClient(linkedClient).build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        predicate \u003d new LinkedClientNameContainsKeywordsPredicate(Arrays.asList(\"alIcE\", \"fULleR\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withLinkedClient(linkedClient).build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"    public void test_linkedClientNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        Client linkedClient \u003d new ClientBuilder().withName(\"Alice Fuller\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        LinkedClientNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"                new LinkedClientNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withLinkedClient(linkedClient).build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        predicate \u003d new LinkedClientNameContainsKeywordsPredicate(Arrays.asList(\"Bob\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withLinkedClient(linkedClient).build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        // Keywords match title but does not match linked client name","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        predicate \u003d new LinkedClientNameContainsKeywordsPredicate(Arrays.asList(\"Sky\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withTitle(\"Sky Painting\").withLinkedClient(linkedClient)","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"                .build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"zrei":90}},{"path":"src/test/java/arb/model/project/predicates/ProjectContainsTagsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class ProjectContainsTagsPredicateTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e firstPredicateTagsList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e secondPredicateTagsList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        ProjectContainsTagsPredicate firstPredicate \u003d new ProjectContainsTagsPredicate(firstPredicateTagsList);","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        ProjectContainsTagsPredicate secondPredicate \u003d new ProjectContainsTagsPredicate(secondPredicateTagsList);","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        ProjectContainsTagsPredicate firstPredicateCopy \u003d new ProjectContainsTagsPredicate(firstPredicateTagsList);","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        ProjectContainsTagsPredicate secondPredicateCopy \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"                new ProjectContainsTagsPredicate(Arrays.asList(\"second\", \"first\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertTrue(secondPredicate.equals(secondPredicateCopy)); // different order","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    public void test_projectContainsTags_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        // One tag","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        ProjectContainsTagsPredicate predicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"                new ProjectContainsTagsPredicate(Collections.singletonList(\"painting\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withTags(\"painting\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        // Multiple tags","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ProjectContainsTagsPredicate(Arrays.asList(\"painting\", \"traditional\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withTags(\"painting\", \"traditional\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        // Only one matching tag","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ProjectContainsTagsPredicate(Arrays.asList(\"painting\", \"traditional\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withTags(\"painting\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        // Mixed-case tags","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ProjectContainsTagsPredicate(Arrays.asList(\"paiNTing\", \"trADiTioNal\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withTags(\"painting\", \"traditional\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"    public void test_projectDoesNotContainTags_returnsFalse() {","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        // Zero tags","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        ProjectContainsTagsPredicate predicate \u003d new ProjectContainsTagsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withTags(\"painting\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        // Non-matching tag","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ProjectContainsTagsPredicate(Arrays.asList(\"traditional\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withTags(\"painting\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        // Tags match name but does not match tag","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ProjectContainsTagsPredicate(Arrays.asList(\"Sunset\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withTitle(\"Sunset\").withTags(\"painting\").build()));","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zrei":79}},{"path":"src/test/java/arb/model/project/predicates/ProjectWithinTimeframePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"public class ProjectWithinTimeframePredicateTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"        Deadline firstStart \u003d new Deadline(\"1pm 2023-01-01\");","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"        Deadline firstEnd \u003d new Deadline(\"2pm 2023-05-05\");","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        Deadline secondStart \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        Deadline secondEnd \u003d new Deadline(\"2pm 2023-05-05\");","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        Deadline thirdStart \u003d new Deadline(\"1pm 2023-01-01\");","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        Deadline thirdEnd \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        ProjectWithinTimeframePredicate firstPredicate \u003d new ProjectWithinTimeframePredicate(firstStart, firstEnd);","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        ProjectWithinTimeframePredicate secondPredicate \u003d new ProjectWithinTimeframePredicate(secondStart, secondEnd);","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        ProjectWithinTimeframePredicate thirdPredicate \u003d new ProjectWithinTimeframePredicate(thirdStart, thirdEnd);","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        ProjectWithinTimeframePredicate firstPredicateCopy \u003d new ProjectWithinTimeframePredicate(firstStart, firstEnd);","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        // different start values -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        // different end values -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(thirdPredicate));","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    public void test_projectWithinTimeframe_returnsTrue() {","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        Deadline sampleStart \u003d new Deadline(\"1pm 2023-01-01\");","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        Deadline sampleEnd \u003d new Deadline(\"2pm 2023-05-05\");","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        String inBetweenDeadline \u003d \"3pm 2023-03-03\";","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        // both start and end date are present","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        ProjectWithinTimeframePredicate predicate \u003d new ProjectWithinTimeframePredicate(sampleStart, sampleEnd);","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withDeadline(inBetweenDeadline).build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        // only start date present","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ProjectWithinTimeframePredicate(sampleStart, null);","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withDeadline(inBetweenDeadline).build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        // Only end date present","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ProjectWithinTimeframePredicate(null, sampleEnd);","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withDeadline(inBetweenDeadline).build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    public void test_projectNotWithinTimeframe_returnsFalse() {","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        Deadline sampleStart \u003d new Deadline(\"1pm 2023-01-01\");","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        Deadline sampleEnd \u003d new Deadline(\"2pm 2023-05-05\");","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        String deadlineBeforeTimeframe \u003d \"12pm 2022-09-09\";","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        String deadlineAfterTimeframe \u003d \"3pm 2023-06-06\";","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        // Both start and end date are present, deadline falls outside timeframe","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        ProjectWithinTimeframePredicate predicate \u003d new ProjectWithinTimeframePredicate(sampleStart, sampleEnd);","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withDeadline(deadlineBeforeTimeframe).build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withDeadline(deadlineAfterTimeframe).build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        // Only start date present, deadline falls outside timeframe","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ProjectWithinTimeframePredicate(sampleStart, null);","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withDeadline(deadlineBeforeTimeframe).build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"        // Only end date present, deadline falls outside timeframe","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ProjectWithinTimeframePredicate(null, sampleEnd);","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withDeadline(deadlineAfterTimeframe).build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        // Project does not have a deadline","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        predicate \u003d new ProjectWithinTimeframePredicate(sampleStart, sampleEnd);","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withDeadline(null).build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zrei":91}},{"path":"src/test/java/arb/model/project/predicates/TitleContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.project.predicates;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class TitleContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        TitleContainsKeywordsPredicate firstPredicate \u003d new TitleContainsKeywordsPredicate(","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"        TitleContainsKeywordsPredicate secondPredicate \u003d new TitleContainsKeywordsPredicate(","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        TitleContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                new TitleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        // different keywords -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        TitleContainsKeywordsPredicate secondPredicateCopy \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"                new TitleContainsKeywordsPredicate(Arrays.asList(\"second\", \"first\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        assertTrue(secondPredicate.equals(secondPredicateCopy)); // different order","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"    public void test_titleContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        // One keyword","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        TitleContainsKeywordsPredicate predicate \u003d new TitleContainsKeywordsPredicate(Collections.singletonList(\"Sky\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withTitle(\"Sky Painting\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Sky\", \"Painting\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withTitle(\"Sky Painting\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Sky\", \"Oil\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withTitle(\"Sky Painting\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"sKy\", \"PaiNTing\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        assertTrue(predicate.test(new ProjectBuilder().withTitle(\"Sky Painting\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    public void test_titleDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        TitleContainsKeywordsPredicate predicate \u003d new TitleContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withTitle(\"Sky Painting\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Oil\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withTitle(\"Sky Painting\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        // Keywords match deadline but does not match title","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"mmaimer33"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"2000-01-01\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        assertFalse(predicate.test(new ProjectBuilder().withTitle(\"Sky Painting\").withDeadline(\"2000-01-01\")","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":76,"mmaimer33":6}},{"path":"src/test/java/arb/model/tag/TagMappingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.tag;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.testutil.TagMappingBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class TagMappingTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        TagMapping friendTagMapping \u003d new TagMappingBuilder().withTag(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        TagMapping husbandTagMapping \u003d new TagMappingBuilder().withTag(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        assertEquals(friendTagMapping, friendTagMapping); // same object","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        assertNotEquals(friendTagMapping, 0); // different type","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        assertNotEquals(friendTagMapping, husbandTagMapping); // different tag wrapping","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        TagMapping editedFriendTagMapping \u003d new TagMappingBuilder(friendTagMapping)","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        assertNotEquals(friendTagMapping, editedFriendTagMapping); // different number of clients tagged","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        editedFriendTagMapping \u003d new TagMappingBuilder(editedFriendTagMapping)","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(0).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        assertEquals(friendTagMapping, editedFriendTagMapping); // reverted client tagging","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    public void isSameTagMapping() {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        TagMapping friendTagMapping \u003d new TagMappingBuilder().withTag(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        TagMapping husbandTagMapping \u003d new TagMappingBuilder().withTag(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        Tag friendTag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        Tag husbandTag \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        assertTrue(friendTagMapping.isSameTagMapping(friendTagMapping)); // same object","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        assertFalse(friendTagMapping.isSameTagMapping(husbandTagMapping)); // different tag wrapping","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        assertTrue(friendTagMapping.isSameTagMapping(friendTag)); // same tag","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        assertFalse(friendTagMapping.isSameTagMapping(husbandTag)); // different tag","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        TagMapping editedFriendTagMapping \u003d new TagMappingBuilder(friendTagMapping)","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(1)","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        // different mapping numbers but same tag","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        assertTrue(friendTagMapping.isSameTagMapping(editedFriendTagMapping));","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"zrei":50}},{"path":"src/test/java/arb/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"zrei":2,"-":24}},{"path":"src/test/java/arb/model/tag/UniqueTagMappingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.model.tag;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.AMY;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.OIL_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.SKY_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalTagMappings.FRIEND_TAG;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalTagMappings.HUSBAND_TAG;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalTagMappings.PAINTING_TAG;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalTagMappings.POTTERY_TAG;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.tag.exceptions.DuplicateTagMappingException;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.testutil.TagMappingBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"public class UniqueTagMappingListTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private final UniqueTagMappingList uniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public void setTagMappings_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.setTagMappings((List\u003cTagMapping\u003e) null));","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public void setTagMappings_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addClientTags(BOB);","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addClientTags(AMY);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        TagMapping paintingTagMapping \u003d new TagMappingBuilder(PAINTING_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(2).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        TagMapping potteryTagMapping \u003d new TagMappingBuilder(POTTERY_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList expectedUniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.addProjectTags(SKY_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.addProjectTags(OIL_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.setTagMappings(Arrays.asList(potteryTagMapping, paintingTagMapping));","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueTagMappingList, uniqueTagMappingList);","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    public void setTagMappings_nullClientListOrNullProjectList_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"                .setTagMappings((List\u003cClient\u003e) null, (List\u003cProject\u003e) null));","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"                .setTagMappings(new ArrayList\u003c\u003e(), (List\u003cProject\u003e) null));","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"                .setTagMappings((List\u003cClient\u003e) null, new ArrayList\u003c\u003e()));","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    public void setTagMappings_clientListAndProjectList_replacesOwnList() {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addClientTags(BOB);","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addProjectTags(SKY_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        TagMapping paintingTagMapping \u003d new TagMappingBuilder(PAINTING_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        TagMapping friendTagMapping \u003d new TagMappingBuilder(FRIEND_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e expectedTagMappings \u003d Arrays.asList(friendTagMapping, paintingTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList expectedUniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.setTagMappings(expectedTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.setTagMappings(Arrays.asList(AMY), Arrays.asList(OIL_PAINTING));","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueTagMappingList, expectedUniqueTagMappingList);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    public void setTagMappings_listWithDuplicateTagMappings_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e listWithDuplicateTagMappings \u003d Arrays.asList(HUSBAND_TAG, HUSBAND_TAG);","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        assertThrows(DuplicateTagMappingException.class, () -\u003e uniqueTagMappingList","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"                .setTagMappings(listWithDuplicateTagMappings));","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"            -\u003e uniqueTagMappingList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    public void addClientTags_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.addClientTags(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    public void addClientTags_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        TagMapping husbandTagMapping \u003d new TagMappingBuilder(HUSBAND_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        TagMapping friendTagMapping \u003d new TagMappingBuilder(FRIEND_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e expectedTagMappings \u003d Arrays.asList(friendTagMapping, husbandTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList expectedUniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.setTagMappings(expectedTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addClientTags(BOB);","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueTagMappingList, uniqueTagMappingList);","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"    public void addProjectTags_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.addProjectTags(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"    public void addProjectTags_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        TagMapping paintingTagMapping \u003d new TagMappingBuilder(PAINTING_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        TagMapping potteryTagMapping \u003d new TagMappingBuilder(POTTERY_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e expectedTagMappings \u003d Arrays.asList(potteryTagMapping, paintingTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList expectedUniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.setTagMappings(expectedTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addProjectTags(SKY_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueTagMappingList, uniqueTagMappingList);","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"    public void deleteClientTags_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.deleteClientTags(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"    public void deleteClientTags_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"        TagMapping husbandTagMapping \u003d new TagMappingBuilder(HUSBAND_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"        TagMapping friendTagMapping \u003d new TagMappingBuilder(FRIEND_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e initialTagMappings \u003d Arrays.asList(husbandTagMapping, friendTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e expectedTagMappings \u003d Arrays.asList(husbandTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.setTagMappings(initialTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList expectedUniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.setTagMappings(expectedTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.deleteClientTags(AMY);","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueTagMappingList, uniqueTagMappingList);","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"    public void deleteProjectTags_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.deleteProjectTags(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"    public void deleteProjectTags_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        TagMapping paintingTagMapping \u003d new TagMappingBuilder(PAINTING_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"        TagMapping potteryTagMapping \u003d new TagMappingBuilder(POTTERY_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e initialTagMappings \u003d Arrays.asList(paintingTagMapping, potteryTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e expectedTagMappings \u003d Arrays.asList(potteryTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.setTagMappings(initialTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList expectedUniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.setTagMappings(expectedTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.deleteProjectTags(OIL_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedUniqueTagMappingList, uniqueTagMappingList);","lastModifiedDate":"2023-03-21"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"    public void editClientTags_nullClients_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.editClientTags(null, null));","lastModifiedDate":"2023-03-21"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.editClientTags(AMY, null));","lastModifiedDate":"2023-03-21"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.editClientTags(null, AMY));","lastModifiedDate":"2023-03-21"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"    public void editClientTags_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"        TagMapping friendTagMapping \u003d new TagMappingBuilder(FRIEND_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(2).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"        TagMapping husbandTagMapping \u003d new TagMappingBuilder(HUSBAND_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(2).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e expectedTagMappings \u003d Arrays.asList(friendTagMapping, husbandTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList expectedUniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.setTagMappings(expectedTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addClientTags(BOB);","lastModifiedDate":"2023-03-21"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addClientTags(AMY);","lastModifiedDate":"2023-03-21"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.editClientTags(AMY, BOB);","lastModifiedDate":"2023-03-21"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueTagMappingList, expectedUniqueTagMappingList);","lastModifiedDate":"2023-03-21"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"    public void editProjectTags_nullProjects_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.editProjectTags(null, null));","lastModifiedDate":"2023-03-21"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.editProjectTags(SKY_PAINTING, null));","lastModifiedDate":"2023-03-21"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMappingList.editProjectTags(null, SKY_PAINTING));","lastModifiedDate":"2023-03-21"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"    public void editProjectTags_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"        TagMapping paintingTagMapping \u003d new TagMappingBuilder(PAINTING_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(2).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"        TagMapping potteryTagMapping \u003d new TagMappingBuilder(POTTERY_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(2).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e expectedTagMappings \u003d Arrays.asList(potteryTagMapping, paintingTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList expectedUniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.setTagMappings(expectedTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addProjectTags(SKY_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addProjectTags(OIL_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.editProjectTags(OIL_PAINTING, SKY_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueTagMappingList, expectedUniqueTagMappingList);","lastModifiedDate":"2023-03-21"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"    public void resetClientTags_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"        TagMapping paintingTagMapping \u003d new TagMappingBuilder(PAINTING_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"                .withNumberOfProjectsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e expectedTagMappings \u003d Arrays.asList(paintingTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList expectedUniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.setTagMappings(expectedTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":231,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":232,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addClientTags(BOB);","lastModifiedDate":"2023-03-21"},{"lineNumber":233,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addProjectTags(OIL_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":234,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.resetClientTagMappings();","lastModifiedDate":"2023-03-21"},{"lineNumber":235,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":236,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueTagMappingList, expectedUniqueTagMappingList);","lastModifiedDate":"2023-03-21"},{"lineNumber":237,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":238,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":239,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":240,"author":{"gitId":"zrei"},"content":"    public void resetProjectTags_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":241,"author":{"gitId":"zrei"},"content":"        TagMapping friendTagMapping \u003d new TagMappingBuilder(FRIEND_TAG)","lastModifiedDate":"2023-03-21"},{"lineNumber":242,"author":{"gitId":"zrei"},"content":"                .withNumberOfClientsTagged(1).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":243,"author":{"gitId":"zrei"},"content":"        List\u003cTagMapping\u003e expectedTagMappings \u003d Arrays.asList(friendTagMapping);","lastModifiedDate":"2023-03-21"},{"lineNumber":244,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList expectedUniqueTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":245,"author":{"gitId":"zrei"},"content":"        expectedUniqueTagMappingList.setTagMappings(expectedTagMappings);","lastModifiedDate":"2023-03-21"},{"lineNumber":246,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":247,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addProjectTags(SKY_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":248,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addClientTags(AMY);","lastModifiedDate":"2023-03-21"},{"lineNumber":249,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.resetProjectTagMappings();","lastModifiedDate":"2023-03-21"},{"lineNumber":250,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":251,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueTagMappingList, expectedUniqueTagMappingList);","lastModifiedDate":"2023-03-21"},{"lineNumber":252,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":253,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":254,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":255,"author":{"gitId":"zrei"},"content":"    public void equals() {","lastModifiedDate":"2023-03-21"},{"lineNumber":256,"author":{"gitId":"zrei"},"content":"        UniqueTagMappingList otherTagMappingList \u003d new UniqueTagMappingList();","lastModifiedDate":"2023-03-21"},{"lineNumber":257,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addClientTags(BOB);","lastModifiedDate":"2023-03-21"},{"lineNumber":258,"author":{"gitId":"zrei"},"content":"        uniqueTagMappingList.addProjectTags(SKY_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":259,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":260,"author":{"gitId":"zrei"},"content":"        otherTagMappingList.addProjectTags(SKY_PAINTING);","lastModifiedDate":"2023-03-21"},{"lineNumber":261,"author":{"gitId":"zrei"},"content":"        otherTagMappingList.addClientTags(BOB);","lastModifiedDate":"2023-03-21"},{"lineNumber":262,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":263,"author":{"gitId":"zrei"},"content":"        assertEquals(uniqueTagMappingList, otherTagMappingList); // different order","lastModifiedDate":"2023-03-21"},{"lineNumber":264,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":265,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"zrei":265}},{"path":"src/test/java/arb/storage/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.storage.JsonAdaptedClient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.BENSON;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public void toModelType_validClientDetails_returnsClient() throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(BENSON);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        assertEquals(BENSON, client.toModelType());","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"                new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(null, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"                new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    public void toModelType_nullPhone_returnsClient() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, null, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        Client expectedClient \u003d new ClientBuilder(BENSON).withPhone(null).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedClient, client.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"    public void toModelType_nullEmail_returnsClient() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, null, VALID_TAGS);","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        Client expectedClient \u003d new ClientBuilder(BENSON).withEmail(null).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedClient, client.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, invalidTags);","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, client::toModelType);","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zrei":37,"-":57}},{"path":"src/test/java/arb/storage/JsonAdaptedProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package arb.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import static arb.storage.JsonAdaptedProject.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static arb.testutil.TypicalProjects.PORTRAIT_PROJECT;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"import arb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.project.Status;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"import arb.testutil.ClientBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"import arb.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"class JsonAdaptedProjectTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    private static final String INVALID_TITLE \u003d \"S@y\";","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"    private static final String INVALID_DEADLINE \u003d \"abed\";","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    private static final String INVALID_TAG \u003d \"#painting\";","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    private static final String INVALID_PRICE \u003d \"abc\";","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    private static final String CLIENT_NAME_NOT_FOUND \u003d \"Hoon Meier\";","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"    private static final String VALID_TITLE \u003d PORTRAIT_PROJECT.getTitle().toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"    private static final String VALID_DEADLINE \u003d PORTRAIT_PROJECT.getDeadline().toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    private static final String VALID_PRICE \u003d PORTRAIT_PROJECT.getPrice().getPrice();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    private static final String VALID_STATUS \u003d Boolean.toString(PORTRAIT_PROJECT.getStatus().getStatus());","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    private static final String VALID_LINKED_CLIENT \u003d \"Alice Pauline\";","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d PORTRAIT_PROJECT.getTags().stream()","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    private static final Client client \u003d new ClientBuilder().withName(VALID_LINKED_CLIENT).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    private static AddressBook ab;","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    public void resetAddressbook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        ab \u003d new AddressBook();","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        ab.addClient(client);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"    public void toModelType_validProjectDetails_returnsProject() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(PORTRAIT_PROJECT);","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        assertEquals(PORTRAIT_PROJECT, project.toModelType(ab));","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"                new JsonAdaptedProject(INVALID_TITLE, VALID_DEADLINE, VALID_STATUS, VALID_PRICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"                VALID_LINKED_CLIENT, VALID_TAGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"        String expectedMessage \u003d Title.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e project.toModelType(ab));","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(null, VALID_DEADLINE, VALID_STATUS,","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"                VALID_PRICE, VALID_LINKED_CLIENT, VALID_TAGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e project.toModelType(ab));","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"                new JsonAdaptedProject(VALID_TITLE, INVALID_DEADLINE, VALID_STATUS, VALID_PRICE,","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"                VALID_LINKED_CLIENT, VALID_TAGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"Johnchiahk"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e project.toModelType(ab));","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"Johnchiahk"},"content":"    public void toModelType_nullDeadline_returnsProject() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(VALID_TITLE, null, VALID_STATUS, VALID_PRICE,","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"                VALID_LINKED_CLIENT, VALID_TAGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"        Project expectedProject \u003d new ProjectBuilder(PORTRAIT_PROJECT).withDeadline(null)","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"                .withLinkedClient(client).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedProject, project.toModelType(ab));","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(VALID_TITLE, VALID_DEADLINE, null, VALID_PRICE,","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"                VALID_LINKED_CLIENT, VALID_TAGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e project.toModelType(ab));","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"    public void toModelType_invalidPrice_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(VALID_TITLE, VALID_DEADLINE, VALID_STATUS,","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"                INVALID_PRICE, VALID_LINKED_CLIENT, VALID_TAGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        String expectedMessage \u003d Price.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e project.toModelType(ab));","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"    public void toModelType_nullPrice_returnsProject() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(VALID_TITLE, VALID_DEADLINE, VALID_STATUS,","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"                null, VALID_LINKED_CLIENT, VALID_TAGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"        Project expectedProject \u003d new ProjectBuilder(PORTRAIT_PROJECT).withPrice(null)","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"                .withLinkedClient(client).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        assertEquals(expectedProject, project.toModelType(ab));","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"                new JsonAdaptedProject(VALID_TITLE, VALID_DEADLINE, VALID_STATUS, VALID_PRICE, null, invalidTags);","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, () -\u003e project.toModelType(ab));","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"    public void toModelType_invalidLinkedClientName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(VALID_TITLE, VALID_DEADLINE, VALID_STATUS,","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"                VALID_PRICE, INVALID_TITLE, VALID_TAGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, () -\u003e project.toModelType(ab));","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"    public void toModelType_clientNameNotFound_throwsIllegalValueException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(VALID_TITLE, VALID_DEADLINE, VALID_STATUS,","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"                VALID_PRICE, CLIENT_NAME_NOT_FOUND, VALID_TAGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, () -\u003e project.toModelType(ab));","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"    public void toModelType_nullClientName_returnsProject() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(VALID_TITLE, VALID_DEADLINE, VALID_STATUS,","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"                VALID_PRICE, null, VALID_TAGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"        assertEquals(PORTRAIT_PROJECT, project.toModelType(ab));","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":100,"Johnchiahk":48}},{"path":"src/test/java/arb/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static arb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.HOON;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.IDA;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.PORTRAIT_PROJECT;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import static arb.testutil.TypicalProjects.PUBLIC_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    public void readAddressBook_invalidClientAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidClientAddressBook.json\"));","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    public void readAddressBook_invalidAndValidClientAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidClientAddressBook.json\"));","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"        original.addClient(HOON);","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        original.removeClient(ALICE);","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        original.addProject(PUBLIC_PAINTING);","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        original.removeProject(PORTRAIT_PROJECT);","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        original.addClient(IDA);","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zrei":17,"Johnchiahk":3,"-":93}},{"path":"src/test/java/arb/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.commons.util.JsonUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"import arb.testutil.TypicalAddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.testutil.TypicalClients;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"import arb.testutil.TypicalProjects;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    private static final Path TYPICAL_CLIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalClientsAddressBook.json\");","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    private static final Path INVALID_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClientAddressBook.json\");","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    private static final Path DUPLICATE_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClientAddressBook.json\");","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"    private static final Path TYPICAL_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalProjectsAddressBook.json\");","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"    private static final Path INVALID_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidProjectAddressBook.json\");","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"    private static final Path DUPLICATE_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateProjectAddressBook.json\");","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"    private static final Path TYPICAL_CLIENT_AND_PROJECT_FILE \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"            TEST_DATA_FOLDER.resolve(\"typicalClientsAndProjectsAddressBook.json\");","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public void toModelType_typicalClientsFile_success() throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CLIENTS_FILE,","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        AddressBook typicalClientsAddressBook \u003d TypicalClients.getTypicalAddressBook();","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        assertEquals(addressBookFromFile, typicalClientsAddressBook);","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"    public void toModelType_typicalProjectsFile_success() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PROJECT_FILE,","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"        AddressBook typicalProjectsAddressBook \u003d TypicalProjects.getTypicalAddressBook();","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(addressBookFromFile, typicalProjectsAddressBook);","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"    public void toModelType_typicalClientsAndProjectsFile_success() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CLIENT_AND_PROJECT_FILE,","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"        AddressBook typicalProjectsAddressBook \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(addressBookFromFile, typicalProjectsAddressBook);","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    public void toModelType_invalidClientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CLIENT_FILE,","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"    public void toModelType_invalidProjectFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PROJECT_FILE,","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    public void toModelType_duplicateClients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CLIENT_FILE,","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"    public void toModelType_duplicateProjects_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PROJECT_FILE,","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PROJECT,","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zrei":19,"Johnchiahk":37,"-":25}},{"path":"src/test/java/arb/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"arb.json\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zrei":6,"-":117}},{"path":"src/test/java/arb/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import static arb.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.commons.core.GuiSettings;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.UserPrefs;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"        */","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":3,"Johnchiahk":4,"-":61}},{"path":"src/test/java/arb/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withClient(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"     * Adds a new {@code Client} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public AddressBookBuilder withClient(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"     * Adds a new {@code Project} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    public AddressBookBuilder withProject(Project project) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        addressBook.addProject(project);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":16,"-":27}},{"path":"src/test/java/arb/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"zrei":1,"-":33}},{"path":"src/test/java/arb/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"public class ClientBuilder {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private Optional\u003cPhone\u003e phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private Optional\u003cEmail\u003e email;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    private List\u003cProject\u003e linkedProjects;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    public ClientBuilder() {","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        phone \u003d Optional.of(new Phone(DEFAULT_PHONE));","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        email \u003d Optional.of(new Email(DEFAULT_EMAIL));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        linkedProjects \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        phone \u003d Optional.ofNullable(clientToCopy.getPhone());","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        email \u003d Optional.ofNullable(clientToCopy.getEmail());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        tags \u003d new HashSet\u003c\u003e(clientToCopy.getTags());","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        linkedProjects \u003d clientToCopy.getLinkedProjects();","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    public ClientBuilder withTags(String ... tags) {","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        this.phone \u003d Optional.ofNullable(phone).map(p -\u003e new Phone(p));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"        this.email \u003d Optional.ofNullable(email).map(e -\u003e new Email(e));","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"     * Links {@code projects} to the {@code Client} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    public ClientBuilder withProjects(Project ... projects) {","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        this.linkedProjects \u003d (Arrays.asList(projects));","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"     * Builds the {@code Client}.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"     * @return The new Client.","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    public Client build() {","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        Client client \u003d new Client(name, phone.orElse(null), email.orElse(null), tags);","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        for (Project p : linkedProjects) {","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"            client.linkProject(p);","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        return client;","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"zrei":58,"-":50}},{"path":"src/test/java/arb/testutil/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.FindClientCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":" * A utility class for Client.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"public class ClientUtil {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"     * Returns an add client command string for adding the {@code client}.","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    public static String getAddClientCommand(Client client, String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        assert AddClientCommand.isCommandWord(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        return commandWord + \" \" + getClientDetails(client);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"     * Returns a find client command string to find a client.","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    public static String getFindClientCommand(List\u003cString\u003e tags, List\u003cString\u003e names, String commandWord) {","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        assert FindClientCommand.isCommandWord(commandWord);","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        sb.append(commandWord + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        tags.stream().forEach(","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"            t -\u003e sb.append(PREFIX_TAG + t + \" \")","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        );","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        names.stream().forEach(","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"            n -\u003e sb.append(PREFIX_NAME + n + \" \")","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        );","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    public static String getClientDetails(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        sb.append(PREFIX_NAME + client.getName().fullName + \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        sb.append(PREFIX_PHONE + client.getPhone().value + \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        sb.append(PREFIX_EMAIL + client.getEmail().value + \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        client.getTags().stream().forEach(","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"     * Returns the part of command string for the given {@code EditClientDescriptor}\u0027s details.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    public static String getEditClientDescriptorDetails(EditClientDescriptor descriptor) {","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"                + phone.map(p -\u003e p.toString()).orElse(\"\") + \" \"));","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"                + email.map(e -\u003e e.toString()).orElse(\"\") + \" \"));","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"verydaftpunk":4,"zrei":41,"-":35}},{"path":"src/test/java/arb/testutil/EditClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.client.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.client.Email;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.client.Name;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.client.Phone;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" * A utility class to help with building EditClientDescriptor objects.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"public class EditClientDescriptorBuilder {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    private EditClientDescriptor descriptor;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public EditClientDescriptorBuilder() {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    public EditClientDescriptorBuilder(EditClientDescriptor descriptor) {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        this.descriptor \u003d new EditClientDescriptor(descriptor);","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"     * Returns an {@code EditClientDescriptor} with fields containing {@code client}\u0027s details","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    public EditClientDescriptorBuilder(Client client) {","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        descriptor.setName(client.getName());","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        descriptor.setPhone(client.getPhone());","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        descriptor.setEmail(client.getEmail());","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        descriptor.setTags(client.getTags());","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Name} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    public EditClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Phone} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    public EditClientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        descriptor.setPhone(Optional.ofNullable(phone).map(p -\u003e new Phone(phone)).orElse(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Email} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    public EditClientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        descriptor.setEmail(Optional.ofNullable(email).map(e -\u003e new Email(e)).orElse(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditClientDescriptor}","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"     * that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"    public EditClientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    public EditClientDescriptor build() {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        return descriptor;","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"zrei":78}},{"path":"src/test/java/arb/testutil/EditProjectDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.EditProjectCommand.EditProjectDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":" * A utility class to help with building EditProjectDescriptor objects.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"public class EditProjectDescriptorBuilder {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    private EditProjectDescriptor descriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public EditProjectDescriptorBuilder() {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditProjectDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    public EditProjectDescriptorBuilder(EditProjectDescriptor descriptor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        this.descriptor \u003d new EditProjectDescriptor(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"     * Returns an {@code EditProjectDescriptor} with fields containing {@code project}\u0027s details","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    public EditProjectDescriptorBuilder(Project project) {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        descriptor \u003d new EditProjectDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        descriptor.setTitle(project.getTitle());","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        descriptor.setDeadline(project.getDeadline());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"        descriptor.setPrice(project.getPrice());","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        descriptor.setTags(project.getTags());","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        descriptor.setClient(project.getClientName());","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Title} of the {@code EditProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    public EditProjectDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        descriptor.setTitle(new Title(title));","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Deadline} of the {@code EditProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"    public EditProjectDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        descriptor.setDeadline(Optional.ofNullable(deadline).map(d -\u003e new Deadline(d)).orElse(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Tags} of the {@code EditProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    public EditProjectDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"     * Sets the {@code Price} of the {@code EditProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"    public EditProjectDescriptorBuilder withPrice(String price) {","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        descriptor.setPrice(Optional.ofNullable(price).map(p -\u003e new Price(p)).orElse(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"     * Sets the {@code linkedClient} of the {@code EditProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    public EditProjectDescriptorBuilder withLinkedClient(String clientName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        descriptor.setClient(clientName);","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"        return this;","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"    public EditProjectDescriptor build() {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"        return descriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"verydaftpunk":1,"zrei":76,"Johnchiahk":9}},{"path":"src/test/java/arb/testutil/PredicateUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.commons.core.predicate.CombinedPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.ClientContainsTagPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.client.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.project.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" * A utility class for predicates.","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"public class PredicateUtil {","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"     * Returns a {@code CombinedPredicate} using the given predicates.","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    public static \u003cT\u003e CombinedPredicate\u003cT\u003e getCombinedPredicate(Predicate\u003cT\u003e ... predicates) {","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        return new CombinedPredicate\u003c\u003e(Arrays.asList(predicates));","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"     * Returns a {@code ClientContainsTagPredicate} with the given {@code tags}.","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public static ClientContainsTagPredicate getClientContainsTagPredicate(List\u003cString\u003e tags) {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        return new ClientContainsTagPredicate(tags);","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    /*public static ProjectContainsTagPredicate getProjectContainsTagPredicate(List\u003cString\u003e tags) {","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        return new ProjectContainsTagPredicate(tags);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    }*/","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"     * Returns a {@code NameContainsKeywordsPredicate} with the given {@code names}.","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    public static NameContainsKeywordsPredicate getNameContainsKeywordsPredicate(List\u003cString\u003e names) {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        return new NameContainsKeywordsPredicate(names);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"     * Returns a {@code TitleContainsKeywordsPredicate} with the given {@code names}.","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    public static TitleContainsKeywordsPredicate getTitleContainsKeywordsPredicate(List\u003cString\u003e names) {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"        return new TitleContainsKeywordsPredicate(names);","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zrei":49}},{"path":"src/test/java/arb/testutil/ProjectBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package arb.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import arb.model.project.Price;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"import arb.model.project.Title;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":" * A utility class to help with building Project objects.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"public class ProjectBuilder {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    public static final String DEFAULT_TITLE \u003d \"Large Tree\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    public static final String DEFAULT_DEADLINE \u003d \"3pm 2000-01-01\";","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"    public static final String DEFAULT_PRICE \u003d \"0\";","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    private Title title;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private Optional\u003cDeadline\u003e deadline;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"    private Optional\u003cPrice\u003e price;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    private Optional\u003cClient\u003e linkedClient;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"     * Creates a {@code ProjectBuilder} with the default details.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"    public ProjectBuilder() {","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        deadline \u003d Optional.of(new Deadline(DEFAULT_DEADLINE));","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"        price \u003d Optional.of(new Price(DEFAULT_PRICE));","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        linkedClient \u003d Optional.ofNullable(null);","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"     * Initializes the ProjectBuilder with the data of {@code projectToCopy}.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"    public ProjectBuilder(Project projectToCopy) {","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"        title \u003d projectToCopy.getTitle();","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        deadline \u003d Optional.ofNullable(projectToCopy.getDeadline());","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"        price \u003d Optional.ofNullable(projectToCopy.getPrice());","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        tags \u003d new HashSet\u003c\u003e(projectToCopy.getTags());","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        isDone \u003d projectToCopy.getStatus().getStatus();","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        linkedClient \u003d projectToCopy.getLinkedClient();","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"     * Sets the {@code Title} of the {@code Project} being built.","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"     * @param title Title to set.","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"     * @return The ProjectBuilder object.","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"    public ProjectBuilder withTitle(String title) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"mmaimer33"},"content":"     * Sets the {@code Deadline} of the {@code Project} being built.","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"mmaimer33"},"content":"     * @param deadline Deadline to set.","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"mmaimer33"},"content":"     * @return The ProjectBuilder object.","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"mmaimer33"},"content":"    public ProjectBuilder withDeadline(String deadline) {","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        this.deadline \u003d Optional.ofNullable(deadline).map(d -\u003e new Deadline(d));","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"mmaimer33"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Project} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"    public ProjectBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"     * Sets whether the project to be built is meant to be done.","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"    public ProjectBuilder withStatus(boolean isDone) {","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Price} of the {@code Project} being built.","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"Johnchiahk"},"content":"     * @param price Price to set.","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"Johnchiahk"},"content":"     * @return The ProjectBuilder object.","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"Johnchiahk"},"content":"    public ProjectBuilder withPrice(String price) {","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"Johnchiahk"},"content":"        this.price \u003d Optional.ofNullable(price).map(pr -\u003e new Price(pr));","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"Johnchiahk"},"content":"        return this;","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"     * Links {@code client} to the {@code Project} being built.","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"    public ProjectBuilder withLinkedClient(Client client) {","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        this.linkedClient \u003d Optional.ofNullable(client);","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"mmaimer33"},"content":"     * Builds the Project.","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"mmaimer33"},"content":"     * @return The new Project.","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"mmaimer33"},"content":"    public Project build() {","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        Project project \u003d new Project(title, this.deadline.orElse(null), this.price.orElse(null), tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        if (isDone) {","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"            project.markAsDone();","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"        linkedClient.ifPresent(c -\u003e project.linkToClient(c));","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        return project;","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"zrei":54,"Johnchiahk":14,"mmaimer33":56}},{"path":"src/test/java/arb/testutil/ProjectUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_CLIENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.AddProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.EditProjectCommand.EditProjectDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import arb.logic.commands.project.FindProjectCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":" * A utility class for Project.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"public class ProjectUtil {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"     * Returns an add project command string for adding the {@code project}.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    public static String getAddProjectCommand(Project project, String commandWord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        assert AddProjectCommand.isCommandWord(commandWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        return commandWord + \" \" + getProjectDetails(project);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     * Returns a find project command string to find a project.","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    public static String getFindProjectCommand(List\u003cString\u003e tags, List\u003cString\u003e names, String commandWord) {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        assert FindProjectCommand.isCommandWord(commandWord);","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"        sb.append(commandWord + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"        tags.stream().forEach(","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"            t -\u003e sb.append(PREFIX_TAG + t + \" \")","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        );","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        names.stream().forEach(","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"            n -\u003e sb.append(PREFIX_NAME + n + \" \")","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        );","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"     * Returns the part of command string for the given {@code project}\u0027s details.","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    public static String getProjectDetails(Project project) {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        sb.append(PREFIX_NAME + project.getTitle().fullTitle + \" \");","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        sb.append(PREFIX_DEADLINE + project.getDeadline().toString() + \" \");","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"        sb.append(PREFIX_PRICE + project.getPrice().getPrice() + \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        project.getTags().stream().forEach(","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"     * Returns the part of command string for the given {@code EditProjectDescriptor}\u0027s details.","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"    public static String getEditProjectDescriptorDetails(EditProjectDescriptor descriptor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        descriptor.getTitle().ifPresent(title -\u003e sb.append(PREFIX_NAME).append(title.fullTitle).append(\" \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"        descriptor.getDeadline().ifPresent(deadline -\u003e sb.append(PREFIX_DEADLINE","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"                + deadline.map(d -\u003e d.toString()).orElse(\"\") + \" \"));","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"        descriptor.getPrice().ifPresent(price -\u003e sb.append(PREFIX_PRICE","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"                + price.map(p -\u003e p.getPrice().toString()).orElse(\"\") + \" \"));","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"                sb.append(PREFIX_TAG + \" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"        descriptor.getClient().ifPresent(clientName -\u003e sb.append(PREFIX_CLIENT","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"                + clientName.orElse(\"\") + \" \"));","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"verydaftpunk":4,"zrei":77,"Johnchiahk":2}},{"path":"src/test/java/arb/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":1,"-":71}},{"path":"src/test/java/arb/testutil/TagMappingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import arb.model.tag.Tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":" * A utility class to help with building TagMapping objects.","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"public class TagMappingBuilder {","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    public static final String DEFAULT_TAG \u003d \"friend\";","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    private Tag tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    private int numberOfClientsTagged;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    private int numberOfProjectsTagged;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"     * Creates a {@code TagMappingBuilder} with the default details.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    public TagMappingBuilder() {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        tag \u003d new Tag(DEFAULT_TAG);","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        numberOfClientsTagged \u003d 0;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        numberOfProjectsTagged \u003d 0;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"     * Initializes the TagMappingBuilder with the data of {@code tagMappingToCopy}.","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public TagMappingBuilder(TagMapping tagMappingToCopy) {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        tag \u003d tagMappingToCopy.getTag();","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        numberOfClientsTagged \u003d tagMappingToCopy.getNumberOfClientsTagged();","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        numberOfProjectsTagged \u003d tagMappingToCopy.getNumberOfProjectsTagged();","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"     * Sets the {@code Tag} of the {@code TagMapping} being built.","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"     * @param tag Tag to set.","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"     * @return The TagMappingBuilder object.","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public TagMappingBuilder withTag(String tag) {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    * Sets the number of clients the tag mapping being built is meant to tag.","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"    */","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    public TagMappingBuilder withNumberOfClientsTagged(int numberOfClientsTagged) {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        assert numberOfClientsTagged \u003e\u003d 0;","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        this.numberOfClientsTagged \u003d numberOfClientsTagged;","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"    * Sets the number of projects the tag mapping being built is meant to tag.","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    */","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    public TagMappingBuilder withNumberOfProjectsTagged(int numberOfProjectsTagged) {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        assert numberOfProjectsTagged \u003e\u003d 0;","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        this.numberOfProjectsTagged \u003d numberOfProjectsTagged;","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"     * Builds the TagMapping.","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"     * @return The new TagMapping.","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    public TagMapping build() {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        TagMapping mapping \u003d new TagMapping(this.tag);","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        for (int i \u003d 0; i \u003c numberOfClientsTagged; i++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"            mapping.tagClient();","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        for (int i \u003d 0; i \u003c numberOfProjectsTagged; i++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"            mapping.tagProject();","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        return mapping;","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":78}},{"path":"src/test/java/arb/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import arb.model.Model;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"     * Returns the middle index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size() / 2);","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"     * Returns the last index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    public static Client getClient(Model model, Index index) {","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zrei":11,"-":44}},{"path":"src/test/java/arb/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalClients.getTypicalClients;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.testutil.TypicalProjects.getTypicalProjects;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":" * A utility class containing both a list of {@code Client} objects","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" * and a list of {@code Project} objects to be used in tests.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    private TypicalAddressBook() {} // prevents instantiation","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"     * Returns an {@code AddressBook} with all the typical clients and projects.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        for (Client client : getTypicalClients()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"            ab.addClient(client);","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        for (Project project : getTypicalProjects()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"            ab.addProject(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        return ab;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zrei":31}},{"path":"src/test/java/arb/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.client.Client;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" * A utility class containing a list of {@code Client} objects to be used in tests.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"public class TypicalClients {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"            .withPhone(\"94351253\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public static final Client CARL \u003d new ClientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    public static final Client DANIEL \u003d new ClientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"            .withEmail(\"cornelia@example.com\").withTags(\"friends\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    public static final Client ELLE \u003d new ClientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    public static final Client FIONA \u003d new ClientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public static final Client GEORGE \u003d new ClientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public static final Client REGINA \u003d new ClientBuilder().withName(\"Regina Fuller\")","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"            .withPhone(null).withEmail(null).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    public static final Client YLVETAL \u003d new ClientBuilder().withName(\"Ylvetal Z\").withPhone(null)","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"            .withEmail(\"ylvetal@example.com\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    public static final Client ZINNIA \u003d new ClientBuilder().withName(\"Zinnia O\").withPhone(\"12345\")","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"            .withEmail(null).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    public static final Client IDA \u003d new ClientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    // Manually added - Client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    public static final Client AMY \u003d new ClientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"            .withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"    public static final Client BOB \u003d new ClientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"            .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"     * Returns an {@code AddressBook} with all the typical clients.","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        for (Client client : getTypicalClients()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"            ab.addClient(client);","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE,","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"                REGINA, YLVETAL, ZINNIA));","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"zrei":48,"-":31}},{"path":"src/test/java/arb/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import arb.commons.core.index.Index;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"zrei":2,"-":7,"mmaimer33":3}},{"path":"src/test/java/arb/testutil/TypicalProjectSortingOptions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import arb.commons.core.sorting.ProjectSortingOption;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":" * A utility class containing a list of {@code ProjectSortingOption} objects to be used in tests.","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"public class TypicalProjectSortingOptions {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"    public static final ProjectSortingOption BY_DEADLINE \u003d ProjectSortingOption.getSortingOption(\"deadline\");","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    public static final ProjectSortingOption BY_DEADLINE_ALIAS \u003d ProjectSortingOption.getSortingOption(\"d\");","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    public static final ProjectSortingOption BY_TITLE \u003d ProjectSortingOption.getSortingOption(\"name\");","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"zrei":12}},{"path":"src/test/java/arb/testutil/TypicalProjects.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_DEADLINE_OIL_PAINTING;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_DEADLINE_SKY_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PRICE_OIL_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_PRICE_SKY_PAINTING;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_PAINTING;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_POTTERY;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TITLE_OIL_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TITLE_SKY_PAINTING;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import arb.model.AddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import arb.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":" * A utility class containing a list of {@code Project} objects to be used in tests.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"public class TypicalProjects {","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    public static final Project PORTRAIT_PROJECT \u003d new ProjectBuilder().withTitle(\"Portrait Commission\")","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"            .withDeadline(\"2pm 2025-02-01\").withPrice(\"2\")","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"            .withTags(\"painting\", \"traditional\").build();","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    public static final Project CRAYON_PROJECT \u003d new ProjectBuilder().withTitle(\"Crayon Drawing\")","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"            .withDeadline(\"3pm tomorrow\").withPrice(\"0.35\")","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"            .withTags(\"paper\", \"crayons\").build();","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    public static final Project DIGITAL_PROJECT \u003d new ProjectBuilder().withTitle(\"Digital Drawing\")","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"            .withDeadline(null).withPrice(null).build();","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    public static final Project SCULPTURE_PROJECT \u003d new ProjectBuilder().withTitle(\"Sculpture Project\")","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"            .withDeadline(null).withPrice(null)","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"            .withTags(\"clay\").build();","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    // Manually added","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    public static final Project PUBLIC_PAINTING \u003d new ProjectBuilder().withTitle(\"Public Painting\")","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"            .withDeadline(\"5pm 2024-05-06\").withPrice(\"4098.09\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"    public static final Project CROCHET \u003d new ProjectBuilder().withTitle(\"Crochet\")","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"            .withDeadline(null).withPrice(\"3.05\").build();","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    // Manually added - Project\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    public static final Project SKY_PAINTING \u003d new ProjectBuilder().withTitle(VALID_TITLE_SKY_PAINTING)","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"            .withDeadline(VALID_DEADLINE_SKY_PAINTING).withPrice(VALID_PRICE_SKY_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"            .withTags(VALID_TAG_PAINTING, VALID_TAG_POTTERY).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"    public static final Project OIL_PAINTING \u003d new ProjectBuilder().withTitle(VALID_TITLE_OIL_PAINTING)","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"            .withDeadline(VALID_DEADLINE_OIL_PAINTING).withPrice(VALID_PRICE_OIL_PAINTING)","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"            .withTags(VALID_TAG_PAINTING).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Public\"; // A keyword that matches PUBLIC_PAINTING","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    private TypicalProjects() {} // prevents instantiation","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"     * Returns an {@code AddressBook} with all the typical projects.","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        for (Project project : getTypicalProjects()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"            ab.addProject(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"        return ab;","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    public static List\u003cProject\u003e getTypicalProjects() {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(PORTRAIT_PROJECT, CRAYON_PROJECT, DIGITAL_PROJECT, SCULPTURE_PROJECT));","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zrei":64,"Johnchiahk":4}},{"path":"src/test/java/arb/testutil/TypicalTagMappings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_PAINTING;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import static arb.logic.commands.CommandTestUtil.VALID_TAG_POTTERY;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import arb.model.tag.TagMapping;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":" * A utility class containing a list of {@code TagMapping} objects to be used in tests.","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"public class TypicalTagMappings {","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    public static final TagMapping HUSBAND_TAG \u003d new TagMappingBuilder().withTag(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    public static final TagMapping FRIEND_TAG \u003d new TagMappingBuilder().withTag(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public static final TagMapping PAINTING_TAG \u003d new TagMappingBuilder().withTag(VALID_TAG_PAINTING).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    public static final TagMapping POTTERY_TAG \u003d new TagMappingBuilder().withTag(VALID_TAG_POTTERY).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"zrei":21}},{"path":"src/test/java/arb/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"zrei":1,"-":34}},{"path":"src/test/java/arb/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package arb.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static arb.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"import arb.MainApp;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"zrei":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"\u003c?import arb.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"zrei":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"\u003cfx:root type\u003d\"arb.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"zrei":1,"-":5}}]
