[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"# Teaching Assistant Assistant","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T14-4/tp/actions)","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"[![codecov](https://codecov.io/gh/nus-cs2103-AY2223S2/tp/branch/master/graph/badge.svg?token\u003dSNV76O467D)](https://codecov.io/gh/nus-cs2103-AY2223S2/tp)","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"![Ui](./docs/images/Ui.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"Teaching Assistant Assistant (TAA) is a desktop app for managing teaching assistant activities, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TAA can get your teaching assistant tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"chunzkok":2,"-":3,"TamKengHong":5}},{"path":"bin/main/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cyli133":9}},{"path":"bin/main/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":".background {","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":".label {","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":".label-bright {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":".label-header {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":".text-field {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":".tab-pane {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":".table-view {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cyli133"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"cyli133"},"content":"    -fx-border-color:","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"        transparent","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"cyli133"},"content":"        transparent","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"cyli133"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"cyli133"},"content":"        transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"cyli133"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"cyli133"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"cyli133"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"cyli133"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"cyli133"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"cyli133"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"cyli133"},"content":".split-pane {","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"cyli133"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"cyli133"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"cyli133"},"content":".list-view {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"cyli133"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"cyli133"},"content":".list-cell {","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"cyli133"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"cyli133"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"cyli133"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"cyli133"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"cyli133"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"cyli133"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"cyli133"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"cyli133"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"cyli133"},"content":".list-cell .label {","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"cyli133"},"content":".cell_big_label {","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"cyli133"},"content":".cell_small_label {","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"cyli133"},"content":".stack-pane {","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"cyli133"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"cyli133"},"content":".pane-with-border {","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"cyli133"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"cyli133"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"cyli133"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"cyli133"},"content":".status-bar {","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"cyli133"},"content":".result-display {","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"cyli133"},"content":".result-display .label {","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"cyli133"},"content":".status-bar .label {","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"cyli133"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"cyli133"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"cyli133"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"cyli133"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"cyli133"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"cyli133"},"content":".grid-pane {","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"cyli133"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"cyli133"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"cyli133"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"cyli133"},"content":".context-menu {","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"cyli133"},"content":".context-menu .label {","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"cyli133"},"content":".menu-bar {","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"cyli133"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"cyli133"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":206,"author":{"gitId":"cyli133"},"content":".menu .left-container {","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"cyli133"},"content":"/*","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"cyli133"},"content":" * Metro style Push Button","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"cyli133"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-03-06"},{"lineNumber":213,"author":{"gitId":"cyli133"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-03-06"},{"lineNumber":214,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"cyli133"},"content":".button {","lastModifiedDate":"2023-03-06"},{"lineNumber":216,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-06"},{"lineNumber":217,"author":{"gitId":"cyli133"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-03-06"},{"lineNumber":218,"author":{"gitId":"cyli133"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-06"},{"lineNumber":219,"author":{"gitId":"cyli133"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":220,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-06"},{"lineNumber":221,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-06"},{"lineNumber":222,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-06"},{"lineNumber":223,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-03-06"},{"lineNumber":224,"author":{"gitId":"cyli133"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":226,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":227,"author":{"gitId":"cyli133"},"content":".button:hover {","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":230,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":231,"author":{"gitId":"cyli133"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-03-06"},{"lineNumber":232,"author":{"gitId":"cyli133"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":233,"author":{"gitId":"cyli133"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-06"},{"lineNumber":234,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":235,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":236,"author":{"gitId":"cyli133"},"content":".button:focused {","lastModifiedDate":"2023-03-06"},{"lineNumber":237,"author":{"gitId":"cyli133"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-03-06"},{"lineNumber":238,"author":{"gitId":"cyli133"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"cyli133"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"cyli133"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"cyli133"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":243,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":244,"author":{"gitId":"cyli133"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-03-06"},{"lineNumber":245,"author":{"gitId":"cyli133"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-03-06"},{"lineNumber":246,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":248,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":249,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":250,"author":{"gitId":"cyli133"},"content":".button:default {","lastModifiedDate":"2023-03-06"},{"lineNumber":251,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-06"},{"lineNumber":252,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":254,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"cyli133"},"content":".button:default:hover {","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"cyli133"},"content":".dialog-pane {","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":262,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":263,"author":{"gitId":"cyli133"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-06"},{"lineNumber":264,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-06"},{"lineNumber":265,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":267,"author":{"gitId":"cyli133"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-06"},{"lineNumber":268,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"cyli133"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-06"},{"lineNumber":270,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":271,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":272,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":273,"author":{"gitId":"cyli133"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-06"},{"lineNumber":274,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-06"},{"lineNumber":275,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":276,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":277,"author":{"gitId":"cyli133"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-06"},{"lineNumber":278,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-06"},{"lineNumber":279,"author":{"gitId":"cyli133"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-06"},{"lineNumber":280,"author":{"gitId":"cyli133"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":281,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":282,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":284,"author":{"gitId":"cyli133"},"content":".scroll-bar {","lastModifiedDate":"2023-03-06"},{"lineNumber":285,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-06"},{"lineNumber":286,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":287,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":288,"author":{"gitId":"cyli133"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-06"},{"lineNumber":289,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-03-06"},{"lineNumber":290,"author":{"gitId":"cyli133"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-03-06"},{"lineNumber":291,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":293,"author":{"gitId":"cyli133"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-06"},{"lineNumber":294,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":295,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":296,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":297,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":298,"author":{"gitId":"cyli133"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-06"},{"lineNumber":299,"author":{"gitId":"cyli133"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-06"},{"lineNumber":300,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":301,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":302,"author":{"gitId":"cyli133"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-06"},{"lineNumber":303,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-06"},{"lineNumber":304,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":305,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":306,"author":{"gitId":"cyli133"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-06"},{"lineNumber":307,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":308,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":309,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":310,"author":{"gitId":"cyli133"},"content":"#cardPane {","lastModifiedDate":"2023-03-06"},{"lineNumber":311,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":312,"author":{"gitId":"cyli133"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":313,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":314,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":315,"author":{"gitId":"cyli133"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-06"},{"lineNumber":316,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-06"},{"lineNumber":317,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-06"},{"lineNumber":318,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":319,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":320,"author":{"gitId":"cyli133"},"content":"#commandTextField {","lastModifiedDate":"2023-03-06"},{"lineNumber":321,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2023-03-06"},{"lineNumber":322,"author":{"gitId":"cyli133"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":323,"author":{"gitId":"cyli133"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2023-03-06"},{"lineNumber":324,"author":{"gitId":"cyli133"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":325,"author":{"gitId":"cyli133"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":326,"author":{"gitId":"cyli133"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-06"},{"lineNumber":327,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-06"},{"lineNumber":328,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":329,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":330,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":331,"author":{"gitId":"cyli133"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-03-06"},{"lineNumber":332,"author":{"gitId":"cyli133"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":333,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":334,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":335,"author":{"gitId":"cyli133"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-03-06"},{"lineNumber":336,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2023-03-06"},{"lineNumber":337,"author":{"gitId":"cyli133"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":338,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":339,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":340,"author":{"gitId":"cyli133"},"content":"#tags {","lastModifiedDate":"2023-03-06"},{"lineNumber":341,"author":{"gitId":"cyli133"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-06"},{"lineNumber":342,"author":{"gitId":"cyli133"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-06"},{"lineNumber":343,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":344,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":345,"author":{"gitId":"cyli133"},"content":"#tags .label {","lastModifiedDate":"2023-03-06"},{"lineNumber":346,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":347,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-06"},{"lineNumber":348,"author":{"gitId":"cyli133"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-06"},{"lineNumber":349,"author":{"gitId":"cyli133"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-06"},{"lineNumber":350,"author":{"gitId":"cyli133"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-06"},{"lineNumber":351,"author":{"gitId":"cyli133"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-06"},{"lineNumber":352,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cyli133":352}},{"path":"bin/main/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":".error {","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":".list-cell:empty {","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"    -fx-background: #383838;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":".tag-selector {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":".tooltip-text {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cyli133":20}},{"path":"bin/main/view/HelpWindow.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"#copyButton {","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"#copyButton:hover {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"#copyButton:armed {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"#helpMessageContainer {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cyli133":19}},{"path":"bin/main/view/HelpWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cyli133":44}},{"path":"bin/main/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"cyli133"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"cyli133"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"cyli133"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"chunzkok":1,"cyli133":59}},{"path":"bin/main/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cyli133":9}},{"path":"bin/main/view/StatusBarFooter.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cyli133":12}},{"path":"bin/test/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"Not a valid FXML file","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cyli133":1}},{"path":"bin/test/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"\u003c?import ui.taa.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"chunzkok":1,"cyli133":3}},{"path":"bin/test/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"\u003cfx:root type\u003d\"ui.taa.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"chunzkok":1,"cyli133":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"    id \u0027org.openrewrite.rewrite\u0027 version \u00275.38.0\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"mainClassName \u003d \u0027taa.Main\u0027","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"run {","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"rewrite {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    activeRecipe(\"org.openrewrite.java.cleanup.Cleanup\")","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"    implementation \"org.apache.commons:commons-csv:1.10.0\"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.jfree\u0027, name: \u0027jfreechart\u0027, version: \u00271.5.4\u0027","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.jfree\u0027, name: \u0027jcommon\u0027, version: \u00271.0.23\u0027","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"    implementation fileTree(dir: \u0027libs\u0027, include: [\u0027*.jar\u0027])","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"    archiveFileName \u003d \u0027taa.jar\u0027","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chunzkok":16,"-":70,"WilliamHaiweiGu":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"### Tam Keng Hong","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"\u003cimg src\u003d\"images/tamkenghong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"[[github](http://github.com/TamKengHong)]","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"[[portfolio](team/tamkenghong.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"### Xu BoJie","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"\u003cimg src\u003d\"images/bojie3.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"[[github](http://github.com/bojie3)]","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"[[portfolio](team/bojie3.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"### Kok Chun Zhi","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"\u003cimg src\u003d\"images/chunzkok.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"[[github](http://github.com/chunzkok)]","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"[[portfolio](team/chunzkok.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"* Responsibilities: Class List: Insertion, Deletion and Grouping of Students (Class List)","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"### Li Chengyue","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"\u003cimg src\u003d\"images/cyli133.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"[[github](http://github.com/cyli133)]","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"[[portfolio](team/cyli133.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"* Responsibilities:","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"### Gu Haiwei","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"\u003cimg src\u003d\"images/williamhaiweigu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"[[github](http://github.com/WilliamHaiweiGu)]","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"[[portfolio](team/williamhaiweigu.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"* Responsibilities:","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"chunzkok":15,"bojie3":4,"-":35,"TamKengHong":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"## **Teaching Assistant Assistant**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"Teaching Assistant Assistant (TAA) is a desktop app for managing teaching assistant activities, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TAA can get your teaching assistant tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/59087730/222305199-8590f0f0-7e6d-4801-bcb9-cbb2a48fa28e.png\" width\u003d\"580\"/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-T14-4/tp/blob/master/src/main/java/taa/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-T14-4/tp/blob/master/src/main/java/taa/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete_student 1`.","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"654\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-T14-4/tp/blob/master/src/main/java/taa/ui/Ui.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-T14-4/tp/blob/master/src/main/java/taa/logic/Logic.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"1. When `Logic` is called upon to execute a command, it uses the `TaaParser` class to parse the user command.","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteStudentCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"* When called upon to parse a user command, the `TaaParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"chunzkok"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-T14-4/tp/blob/master/src/main/java/taa/model/Model.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"* stores the student data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"chunzkok"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-T14-4/tp/blob/master/src/main/java/taa/storage/Storage.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"chunzkok"},"content":"* can save both student data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"WilliamHaiweiGu"},"content":"Reading data from JSON:","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"WilliamHaiweiGu"},"content":"* MainApp.initModelManager()","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"WilliamHaiweiGu"},"content":"  * JsonTaaStorage.readTaaData()","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * JsonUtil.readJsonFile()","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * JsonSerializableTaaData.toModelType()","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"WilliamHaiweiGu"},"content":"Saving data to JSON:","lastModifiedDate":"2023-04-07"},{"lineNumber":153,"author":{"gitId":"WilliamHaiweiGu"},"content":"* LogicManager.execute()","lastModifiedDate":"2023-04-07"},{"lineNumber":154,"author":{"gitId":"WilliamHaiweiGu"},"content":"  * ModelManager.getTaaData()","lastModifiedDate":"2023-04-07"},{"lineNumber":155,"author":{"gitId":"WilliamHaiweiGu"},"content":"  * JsonTaaStorage.saveTaaData())","lastModifiedDate":"2023-04-07"},{"lineNumber":156,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * JsonUtil.saveJsonFile()","lastModifiedDate":"2023-04-07"},{"lineNumber":157,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * JsonSerializableTaaData.new()","lastModifiedDate":"2023-04-07"},{"lineNumber":158,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"chunzkok"},"content":"Classes used by multiple components are in the `taa.commons` package.","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"chunzkok"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"chunzkok"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"chunzkok"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"chunzkok"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2023-03-27"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-27"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"chunzkok"},"content":"* has a need to manage many students, groups and classes","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"cyli133"},"content":"* relatively more tech-savvy than the average population, able to perform complex tasks on digital platforms","lastModifiedDate":"2023-03-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":275,"author":{"gitId":"cyli133"},"content":"* need to be able to easily aggregate and analyze students\u0027 statistics","lastModifiedDate":"2023-03-07"},{"lineNumber":276,"author":{"gitId":"cyli133"},"content":"* need to keep track of tasks needed to do during each lesson and time allocation for each","lastModifiedDate":"2023-04-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"cyli133"},"content":"* can type fast","lastModifiedDate":"2023-03-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"cyli133"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"cyli133"},"content":"* Get teaching assistant tasks done more conveniently and quickly as compared to traditional GUI apps","lastModifiedDate":"2023-03-07"},{"lineNumber":283,"author":{"gitId":"cyli133"},"content":"* Features are fully customized for teaching assistants in NUS to ensure user-friendliness for this particular group","lastModifiedDate":"2023-03-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"WilliamHaiweiGu"},"content":"| Priority | As a …         | I want to …                                             | So that I can…                                                                                               |","lastModifiedDate":"2023-03-23"},{"lineNumber":290,"author":{"gitId":"cyli133"},"content":"|----------|----------------|---------------------------------------------------------|--------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-07"},{"lineNumber":291,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | TA             | manage my classes in a separate, distinct system        | avoid being confused with the various command names that may overlap with that of non-class-related commands |","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | TA             | group students by class                                 | track participation/assignment statuses by students\u0027 own classes                                             |","lastModifiedDate":"2023-03-06"},{"lineNumber":293,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | TA             | add students to a class list                            | expand the class list if needed (e.g. new student joins)                                                     |","lastModifiedDate":"2023-03-06"},{"lineNumber":294,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | TA             | delete students from a class list                       | remove students who are no longer part of the class (e.g. dropped class)                                     |","lastModifiedDate":"2023-03-06"},{"lineNumber":295,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | TA             | allocate assignments to students by class               | track the statuses of assignments assigned to each class                                                     |","lastModifiedDate":"2023-03-06"},{"lineNumber":296,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | careless TA    | remove assignments allocated to a class                 | remove incorrect assignment entries                                                                          |","lastModifiedDate":"2023-03-06"},{"lineNumber":297,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | responsible TA | track students\u0027 participation statuses                  | award participation marks to students fairly and accurately                                                  |","lastModifiedDate":"2023-03-05"},{"lineNumber":298,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | forgetful TA   | track valid reasons for a student\u0027s absence             | record attendance for those with valid reasons                                                               |","lastModifiedDate":"2023-03-05"},{"lineNumber":299,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | forgetful TA   | track student assignment submissions/scores/deadlines   | grade assignments easily                                                                                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":300,"author":{"gitId":"cyli133"},"content":"| `* * *`  | stressed TA    | manage time for different tasks during class conducting | complete all tasks during each lesson on time                                                                |","lastModifiedDate":"2023-04-07"},{"lineNumber":301,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | user           | have CSV files storing my data                          | make backups to guard against data loss                                                                      |","lastModifiedDate":"2023-03-05"},{"lineNumber":302,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | user           | load in CSV files to restore data                       | avoid having to do manual data entry when using the app from scratch                                         |","lastModifiedDate":"2023-03-05"},{"lineNumber":303,"author":{"gitId":"chunzkok"},"content":"| `* * *`  | user           | exit the app gracefully                                 | avoid data corruption                                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":304,"author":{"gitId":"chunzkok"},"content":"| `* *`    | TA             | assign individual assignment grades to students         | track the specific grade each student has obtained for each assignment                                       |","lastModifiedDate":"2023-03-06"},{"lineNumber":305,"author":{"gitId":"chunzkok"},"content":"| `* *`    | forgetful TA   | track questions asked by students                       | answer them on time                                                                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":306,"author":{"gitId":"chunzkok"},"content":"| `* *`    | forgetful TA   | keep a timeline/lesson plan for each lesson             | complete the lessons on time without missing out on any content                                              |","lastModifiedDate":"2023-03-05"},{"lineNumber":307,"author":{"gitId":"chunzkok"},"content":"| `* *`    | forgetful TA   | be reminded to take attendance before class ends        | award attendance marks correctly                                                                             |","lastModifiedDate":"2023-03-05"},{"lineNumber":308,"author":{"gitId":"chunzkok"},"content":"| `* *`    | TA             | group students quickly and fairly                       | reduce time wasted due to group formation                                                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":309,"author":{"gitId":"chunzkok"},"content":"| `* *`    | TA             | search students by keywords                             | lessen the mental load required to find a student                                                            |","lastModifiedDate":"2023-03-05"},{"lineNumber":310,"author":{"gitId":"chunzkok"},"content":"| `* *`    | TA             | list all students in a class                            | see an overview of the students in a class at a glance                                                       |","lastModifiedDate":"2023-03-06"},{"lineNumber":311,"author":{"gitId":"chunzkok"},"content":"| `*`      | head TA        | manage all other TAs                                    | track whether each TA has done their job correctly                                                           |","lastModifiedDate":"2023-03-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"bojie3"},"content":"(For all use cases below, the **System** is the `TAA` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-06"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"bojie3"},"content":"**use case: mark attendance of a student**","lastModifiedDate":"2023-03-22"},{"lineNumber":320,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":321,"author":{"gitId":"bojie3"},"content":"**use case: unmark attendance of a student**","lastModifiedDate":"2023-03-22"},{"lineNumber":322,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":323,"author":{"gitId":"bojie3"},"content":"**use case: insert participation points of a student**","lastModifiedDate":"2023-03-22"},{"lineNumber":324,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":325,"author":{"gitId":"bojie3"},"content":"**Use case: delete a student**","lastModifiedDate":"2023-03-06"},{"lineNumber":326,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":327,"author":{"gitId":"TamKengHong"},"content":"**Use case: Add Assignment**","lastModifiedDate":"2023-03-22"},{"lineNumber":328,"author":{"gitId":"TamKengHong"},"content":"asgn_add","lastModifiedDate":"2023-03-22"},{"lineNumber":329,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":330,"author":{"gitId":"TamKengHong"},"content":"**Use case: Delete Assignment**","lastModifiedDate":"2023-03-22"},{"lineNumber":331,"author":{"gitId":"TamKengHong"},"content":"asgn_delete","lastModifiedDate":"2023-03-22"},{"lineNumber":332,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":333,"author":{"gitId":"TamKengHong"},"content":"**Use case: Grade Student Submission of an Assignment**","lastModifiedDate":"2023-03-22"},{"lineNumber":334,"author":{"gitId":"TamKengHong"},"content":"grade","lastModifiedDate":"2023-03-22"},{"lineNumber":335,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":336,"author":{"gitId":"TamKengHong"},"content":"**Use case: Ungrade Student Submission of an Assignment**","lastModifiedDate":"2023-03-22"},{"lineNumber":337,"author":{"gitId":"TamKengHong"},"content":"ungrade","lastModifiedDate":"2023-03-22"},{"lineNumber":338,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":339,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":340,"author":{"gitId":"cyli133"},"content":"**Use case: Add Class List** classlist","lastModifiedDate":"2023-03-23"},{"lineNumber":341,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":342,"author":{"gitId":"cyli133"},"content":"**User case: List Student** list","lastModifiedDate":"2023-03-23"},{"lineNumber":343,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":344,"author":{"gitId":"cyli133"},"content":"**User case: SearchStudent** search","lastModifiedDate":"2023-03-23"},{"lineNumber":345,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":346,"author":{"gitId":"bojie3"},"content":"## **Mark/Unmark Attendance**","lastModifiedDate":"2023-03-23"},{"lineNumber":347,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":348,"author":{"gitId":"bojie3"},"content":"Mark and Unmark is very similar in nature and their implementation. \u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":349,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":350,"author":{"gitId":"bojie3"},"content":"Below is the main success scenario of Mark (Unmark is not given but very similar to Mark)","lastModifiedDate":"2023-04-08"},{"lineNumber":351,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":352,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":353,"author":{"gitId":"bojie3"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":354,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":355,"author":{"gitId":"bojie3"},"content":"1. User requests to mark attendance of a specific student in the list for a specified week","lastModifiedDate":"2023-04-08"},{"lineNumber":356,"author":{"gitId":"bojie3"},"content":"2. TAA marks attendance","lastModifiedDate":"2023-04-08"},{"lineNumber":357,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":358,"author":{"gitId":"bojie3"},"content":"   Use case ends.","lastModifiedDate":"2023-03-22"},{"lineNumber":359,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":360,"author":{"gitId":"bojie3"},"content":"**Extensions**","lastModifiedDate":"2023-03-22"},{"lineNumber":361,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":362,"author":{"gitId":"bojie3"},"content":"* 1a. The given index/week is invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":363,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":364,"author":{"gitId":"bojie3"},"content":"    * 1a1. TAA shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":365,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":366,"author":{"gitId":"bojie3"},"content":"      Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":367,"author":{"gitId":"bojie3"},"content":"* 3b. The given week\u0027s attendance is already marked","lastModifiedDate":"2023-03-23"},{"lineNumber":368,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":369,"author":{"gitId":"bojie3"},"content":"    * 3a1. TAA shows message that attendance for that week is already marked.","lastModifiedDate":"2023-03-23"},{"lineNumber":370,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":371,"author":{"gitId":"bojie3"},"content":"      Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":372,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":373,"author":{"gitId":"bojie3"},"content":"The Mark/Unmark commands are similar, and explanation will be done for Mark command","lastModifiedDate":"2023-03-23"},{"lineNumber":374,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":375,"author":{"gitId":"bojie3"},"content":"Below is the sequence diagram for Marking attendane of a student","lastModifiedDate":"2023-03-23"},{"lineNumber":376,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":377,"author":{"gitId":"bojie3"},"content":"\u003cimg src\u003d\"images/MarkAttendanceSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":378,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":379,"author":{"gitId":"bojie3"},"content":"## **Insert Participation**","lastModifiedDate":"2023-04-06"},{"lineNumber":380,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":381,"author":{"gitId":"bojie3"},"content":"Below is the main success scenario of Insert Participation","lastModifiedDate":"2023-04-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-04-06"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":386,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":387,"author":{"gitId":"bojie3"},"content":"1. User requests to insert participation points for a specific student for a specified week","lastModifiedDate":"2023-04-08"},{"lineNumber":388,"author":{"gitId":"bojie3"},"content":"2. TAA inserts participation points","lastModifiedDate":"2023-04-08"},{"lineNumber":389,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":390,"author":{"gitId":"bojie3"},"content":"   Use case ends.","lastModifiedDate":"2023-04-06"},{"lineNumber":391,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":392,"author":{"gitId":"bojie3"},"content":"**Extensions**","lastModifiedDate":"2023-04-06"},{"lineNumber":393,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":394,"author":{"gitId":"bojie3"},"content":"* 1a. The given index/week/participation points is invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":395,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":396,"author":{"gitId":"bojie3"},"content":"    * 1a1. TAA shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":397,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":398,"author":{"gitId":"bojie3"},"content":"      Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":399,"author":{"gitId":"bojie3"},"content":"* 1b. The given week\u0027s attendance is not marked","lastModifiedDate":"2023-04-08"},{"lineNumber":400,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":401,"author":{"gitId":"bojie3"},"content":"    * 1bTAA shows message that attendance must be marked first before adding participation points.","lastModifiedDate":"2023-04-08"},{"lineNumber":402,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":403,"author":{"gitId":"bojie3"},"content":"      Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":404,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":405,"author":{"gitId":"bojie3"},"content":"Below is the sequence diagram for inserting participation points","lastModifiedDate":"2023-04-08"},{"lineNumber":406,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":407,"author":{"gitId":"bojie3"},"content":"\u003cimg src\u003d\"images/InsertParticipationSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":408,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":409,"author":{"gitId":"TamKengHong"},"content":"## **Add Assignment**","lastModifiedDate":"2023-03-25"},{"lineNumber":410,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":411,"author":{"gitId":"TamKengHong"},"content":"Below is the main success scenario of adding an Assignment","lastModifiedDate":"2023-03-25"},{"lineNumber":412,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":413,"author":{"gitId":"TamKengHong"},"content":"**MSS**","lastModifiedDate":"2023-03-25"},{"lineNumber":414,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":415,"author":{"gitId":"TamKengHong"},"content":"1. User requests to add an assignment of a specific name and optionally, total marks.","lastModifiedDate":"2023-03-25"},{"lineNumber":416,"author":{"gitId":"TamKengHong"},"content":"2. TAA creates the assignment, with total marks having a default value of 100 if it is not specified above.","lastModifiedDate":"2023-03-25"},{"lineNumber":417,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":418,"author":{"gitId":"TamKengHong"},"content":"   Use case ends.","lastModifiedDate":"2023-03-25"},{"lineNumber":419,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":420,"author":{"gitId":"TamKengHong"},"content":"**Extensions**","lastModifiedDate":"2023-03-25"},{"lineNumber":421,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":422,"author":{"gitId":"TamKengHong"},"content":"* 1a. There are no assignments with that particular name, .","lastModifiedDate":"2023-03-25"},{"lineNumber":423,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":424,"author":{"gitId":"TamKengHong"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2023-03-25"},{"lineNumber":425,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":426,"author":{"gitId":"TamKengHong"},"content":"* 1b. There is already an assignment with that particular name.","lastModifiedDate":"2023-03-25"},{"lineNumber":427,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":428,"author":{"gitId":"TamKengHong"},"content":"    * 1b1. TAA shows an error message","lastModifiedDate":"2023-03-25"},{"lineNumber":429,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":430,"author":{"gitId":"TamKengHong"},"content":"* 1c. Total marks given is negative.","lastModifiedDate":"2023-03-25"},{"lineNumber":431,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":432,"author":{"gitId":"TamKengHong"},"content":"    * 1c1. TAA shows an error message","lastModifiedDate":"2023-03-25"},{"lineNumber":433,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":434,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":435,"author":{"gitId":"TamKengHong"},"content":"AddAssignment command is facilitated by `AddAssignmentCommandParser`, `AddAssignmentCommand` and `Model`","lastModifiedDate":"2023-03-25"},{"lineNumber":436,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":437,"author":{"gitId":"TamKengHong"},"content":"* `AddAssignmentCommandParser`-- Parse the input of users","lastModifiedDate":"2023-03-25"},{"lineNumber":438,"author":{"gitId":"TamKengHong"},"content":"* `AddAssignmentCommand` -- Execute the command given the parsed user input","lastModifiedDate":"2023-03-25"},{"lineNumber":439,"author":{"gitId":"TamKengHong"},"content":"* `Model` -- Updates the assignment list.","lastModifiedDate":"2023-03-25"},{"lineNumber":440,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":441,"author":{"gitId":"TamKengHong"},"content":"Below is the sequence diagram for adding an assignment.","lastModifiedDate":"2023-03-25"},{"lineNumber":442,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":443,"author":{"gitId":"TamKengHong"},"content":"\u003cimg src\u003d\"images/AddAssignmentSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":444,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":445,"author":{"gitId":"cyli133"},"content":"## **Students-Related Commands**","lastModifiedDate":"2023-03-26"},{"lineNumber":446,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":447,"author":{"gitId":"cyli133"},"content":"Below is the main success scenario of students-related commands.","lastModifiedDate":"2023-03-26"},{"lineNumber":448,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":449,"author":{"gitId":"chunzkok"},"content":"**Adding a student**","lastModifiedDate":"2023-03-23"},{"lineNumber":450,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":451,"author":{"gitId":"chunzkok"},"content":"1. User requests to add a user with a specific name into one or more classes.","lastModifiedDate":"2023-03-23"},{"lineNumber":452,"author":{"gitId":"chunzkok"},"content":"2. TAA adds the student into the specified classes.","lastModifiedDate":"2023-03-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"bojie3"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"chunzkok"},"content":"* 1a. The given student/class name is invalid.","lastModifiedDate":"2023-03-23"},{"lineNumber":459,"author":{"gitId":"chunzkok"},"content":"    * 1a1. TAA shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"chunzkok"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"chunzkok"},"content":"* 1b. The given class(es) does not exist.","lastModifiedDate":"2023-03-23"},{"lineNumber":464,"author":{"gitId":"chunzkok"},"content":"  * 1b1. TAA creates a new class for each class that does not exist yet.","lastModifiedDate":"2023-03-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"chunzkok"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2023-03-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"cyli133"},"content":"**list student**","lastModifiedDate":"2023-03-23"},{"lineNumber":470,"author":{"gitId":"cyli133"},"content":"1. User requests to list all students in a class.","lastModifiedDate":"2023-03-23"},{"lineNumber":471,"author":{"gitId":"cyli133"},"content":"2. TAA shows a list of students and number of students listed.","lastModifiedDate":"2023-03-23"},{"lineNumber":472,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":473,"author":{"gitId":"cyli133"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":474,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":475,"author":{"gitId":"cyli133"},"content":"**search student**","lastModifiedDate":"2023-03-23"},{"lineNumber":476,"author":{"gitId":"cyli133"},"content":"1.  User requests to search for a particular student","lastModifiedDate":"2023-03-23"},{"lineNumber":477,"author":{"gitId":"cyli133"},"content":"2.  TAA shows the information of the student searched","lastModifiedDate":"2023-03-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":483,"author":{"gitId":"cyli133"},"content":"* 2a. No student is found for the keyword.","lastModifiedDate":"2023-03-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":487,"author":{"gitId":"cyli133"},"content":"**add classlist**","lastModifiedDate":"2023-03-23"},{"lineNumber":488,"author":{"gitId":"cyli133"},"content":"1.  User requests to add a new class list with a specific name.","lastModifiedDate":"2023-03-23"},{"lineNumber":489,"author":{"gitId":"cyli133"},"content":"2.  TAA adds the new class list with the name specified.","lastModifiedDate":"2023-03-23"},{"lineNumber":490,"author":{"gitId":"cyli133"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":491,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":492,"author":{"gitId":"cyli133"},"content":"**Extensions**","lastModifiedDate":"2023-03-23"},{"lineNumber":493,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":494,"author":{"gitId":"cyli133"},"content":"* 2a. Class list with the same name already exists.","lastModifiedDate":"2023-03-23"},{"lineNumber":495,"author":{"gitId":"cyli133"},"content":"  * 2a1. TAA shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":496,"author":{"gitId":"cyli133"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":498,"author":{"gitId":"cyli133"},"content":"## **Alarm-Related Commands**","lastModifiedDate":"2023-04-07"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":500,"author":{"gitId":"cyli133"},"content":"Below is the main success scenarios of adding, deleting and listing alarms.","lastModifiedDate":"2023-04-07"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":502,"author":{"gitId":"cyli133"},"content":"**add alarm**","lastModifiedDate":"2023-03-26"},{"lineNumber":503,"author":{"gitId":"cyli133"},"content":"1.  User requests to add an alarm with specified time and comment.","lastModifiedDate":"2023-03-26"},{"lineNumber":504,"author":{"gitId":"cyli133"},"content":"2.  TAA adds the new alarm with the time and comment specified.","lastModifiedDate":"2023-03-26"},{"lineNumber":505,"author":{"gitId":"cyli133"},"content":"    Use case ends.","lastModifiedDate":"2023-03-26"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":507,"author":{"gitId":"cyli133"},"content":"**Extensions**","lastModifiedDate":"2023-03-26"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":509,"author":{"gitId":"cyli133"},"content":"* 2a. User does not provide sufficient arguments","lastModifiedDate":"2023-03-26"},{"lineNumber":510,"author":{"gitId":"cyli133"},"content":"    * 2a1. TAA shows an error message.","lastModifiedDate":"2023-03-26"},{"lineNumber":511,"author":{"gitId":"cyli133"},"content":"      Use case ends.","lastModifiedDate":"2023-03-26"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":513,"author":{"gitId":"cyli133"},"content":"Below is the sequence diagram for adding an alarm.","lastModifiedDate":"2023-04-08"},{"lineNumber":514,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":515,"author":{"gitId":"cyli133"},"content":"\u003cimg src\u003d\"images/AddAlarmSequeceDiagram.PNG\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":516,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":517,"author":{"gitId":"cyli133"},"content":"**delete alarm**","lastModifiedDate":"2023-04-07"},{"lineNumber":518,"author":{"gitId":"cyli133"},"content":"1.  User requests to delete a scheduled alarm with specified index.","lastModifiedDate":"2023-04-07"},{"lineNumber":519,"author":{"gitId":"cyli133"},"content":"2.  TAA deletes the alarm with the specified index, the alarm will no longer ring.","lastModifiedDate":"2023-04-07"},{"lineNumber":520,"author":{"gitId":"cyli133"},"content":"    Use case ends.","lastModifiedDate":"2023-04-07"},{"lineNumber":521,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":522,"author":{"gitId":"cyli133"},"content":"**Extensions**","lastModifiedDate":"2023-04-07"},{"lineNumber":523,"author":{"gitId":"cyli133"},"content":"* 2a. User does not provide sufficient arguments","lastModifiedDate":"2023-04-07"},{"lineNumber":524,"author":{"gitId":"cyli133"},"content":"    * 2a1. TAA shows an error message.","lastModifiedDate":"2023-04-07"},{"lineNumber":525,"author":{"gitId":"cyli133"},"content":"      Use case ends.","lastModifiedDate":"2023-04-07"},{"lineNumber":526,"author":{"gitId":"cyli133"},"content":"* 2b. User does not provide a valid index","lastModifiedDate":"2023-04-07"},{"lineNumber":527,"author":{"gitId":"cyli133"},"content":"    * 2a1. TAA shows an error message.","lastModifiedDate":"2023-04-07"},{"lineNumber":528,"author":{"gitId":"cyli133"},"content":"      Use case ends.","lastModifiedDate":"2023-04-07"},{"lineNumber":529,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":530,"author":{"gitId":"cyli133"},"content":"Below is the sequence diagram for deleting an alarm.","lastModifiedDate":"2023-04-08"},{"lineNumber":531,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":532,"author":{"gitId":"cyli133"},"content":"\u003cimg src\u003d\"images/DeleteAlarmSequenceDiagram.PNG\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":533,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":534,"author":{"gitId":"cyli133"},"content":"**list alarm**","lastModifiedDate":"2023-04-07"},{"lineNumber":535,"author":{"gitId":"cyli133"},"content":"1.  User requests to list all scheduled alarms.","lastModifiedDate":"2023-04-07"},{"lineNumber":536,"author":{"gitId":"cyli133"},"content":"2. TAA shows all scheduled alarms on the command window.","lastModifiedDate":"2023-04-07"},{"lineNumber":537,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":538,"author":{"gitId":"cyli133"},"content":"**Extensions**","lastModifiedDate":"2023-04-07"},{"lineNumber":539,"author":{"gitId":"cyli133"},"content":"* 2a. There is no alarms scheduled.","lastModifiedDate":"2023-04-07"},{"lineNumber":540,"author":{"gitId":"cyli133"},"content":"    * 2a1. TAA shows an error message.","lastModifiedDate":"2023-04-07"},{"lineNumber":541,"author":{"gitId":"cyli133"},"content":"      Use case ends.","lastModifiedDate":"2023-04-07"},{"lineNumber":542,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":543,"author":{"gitId":"cyli133"},"content":"Below is the sequence diagram for listing the alarms.","lastModifiedDate":"2023-04-08"},{"lineNumber":544,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":545,"author":{"gitId":"cyli133"},"content":"\u003cimg src\u003d\"images/ListAlarmsSequenceDiagram.PNG\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"WilliamHaiweiGu"},"content":"### Non-functional requirements","lastModifiedDate":"2023-03-07"},{"lineNumber":548,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":549,"author":{"gitId":"WilliamHaiweiGu"},"content":"* All aspects of the system should work on Mac, Windows, and Linux operating systems.","lastModifiedDate":"2023-03-07"},{"lineNumber":550,"author":{"gitId":"WilliamHaiweiGu"},"content":"* The system should be easy to use by anyone who can type fast.","lastModifiedDate":"2023-03-07"},{"lineNumber":551,"author":{"gitId":"WilliamHaiweiGu"},"content":"* The system should not crash or corrupt files under any input text.","lastModifiedDate":"2023-03-07"},{"lineNumber":552,"author":{"gitId":"WilliamHaiweiGu"},"content":"* The system should respond within 1 second.","lastModifiedDate":"2023-03-07"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":554,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"WilliamHaiweiGu"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2023-03-23"},{"lineNumber":577,"author":{"gitId":"WilliamHaiweiGu"},"content":"       optimum.","lastModifiedDate":"2023-03-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2023-03-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"chunzkok"},"content":"### Deleting a student","lastModifiedDate":"2023-03-09"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"chunzkok"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2023-03-09"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"chunzkok"},"content":"    1. Prerequisites: List all students in the class using the `classlist Tutorial_T01` command. Multiple students in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"chunzkok"},"content":"    1. Test case: `delete_student 1`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":595,"author":{"gitId":"WilliamHaiweiGu"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2023-03-23"},{"lineNumber":596,"author":{"gitId":"WilliamHaiweiGu"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2023-03-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"chunzkok"},"content":"    1. Test case: `delete_student 0`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":599,"author":{"gitId":"chunzkok"},"content":"       Expected: No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-09"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"chunzkok"},"content":"    1. Other incorrect delete commands to try: `delete_student`, `delete_student x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":602,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2023-03-23"},{"lineNumber":605,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":606,"author":{"gitId":"WilliamHaiweiGu"},"content":"### Loading/Saving data in CSV format","lastModifiedDate":"2023-03-23"},{"lineNumber":607,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":608,"author":{"gitId":"WilliamHaiweiGu"},"content":"Our CSV files follow the following format:","lastModifiedDate":"2023-03-23"},{"lineNumber":609,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":610,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. All CSV files are header-less. Student data has exactly 2 columns: name, tags.","lastModifiedDate":"2023-03-23"},{"lineNumber":611,"author":{"gitId":"WilliamHaiweiGu"},"content":"2. If a student has no tags, a comma representing the tags column is still required","lastModifiedDate":"2023-03-23"},{"lineNumber":612,"author":{"gitId":"WilliamHaiweiGu"},"content":"   because [if a column is defined as optional, it means that the column is required to exist, but the value can be blank.](https://www.ibm.com/docs/en/atlas-policy-suite/6.0.3?topic\u003dfiles-rules-creating-populating-csv)","lastModifiedDate":"2023-03-23"},{"lineNumber":613,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":614,"author":{"gitId":"WilliamHaiweiGu"},"content":"Acceptable CSV format example:","lastModifiedDate":"2023-03-23"},{"lineNumber":615,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":616,"author":{"gitId":"WilliamHaiweiGu"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":617,"author":{"gitId":"WilliamHaiweiGu"},"content":"Technoblade, Minecrafter Pig Anarchist","lastModifiedDate":"2023-03-23"},{"lineNumber":618,"author":{"gitId":"WilliamHaiweiGu"},"content":"Meggy Spletzer,Inkling","lastModifiedDate":"2023-03-23"},{"lineNumber":619,"author":{"gitId":"WilliamHaiweiGu"},"content":"John von Neumann,","lastModifiedDate":"2023-03-23"},{"lineNumber":620,"author":{"gitId":"WilliamHaiweiGu"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":621,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":622,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Dealing with file access denial:","lastModifiedDate":"2023-03-23"},{"lineNumber":623,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * How to simulate: _TODO_","lastModifiedDate":"2023-03-23"},{"lineNumber":624,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * Expected behavior: Doesn\u0027t change anything and show message to user:","lastModifiedDate":"2023-03-23"},{"lineNumber":625,"author":{"gitId":"WilliamHaiweiGu"},"content":"   ```","lastModifiedDate":"2023-03-23"},{"lineNumber":626,"author":{"gitId":"WilliamHaiweiGu"},"content":"   Access to the specified file is denied by system.","lastModifiedDate":"2023-03-23"},{"lineNumber":627,"author":{"gitId":"WilliamHaiweiGu"},"content":"   ```","lastModifiedDate":"2023-03-23"},{"lineNumber":628,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Dealing with file not exists:","lastModifiedDate":"2023-03-23"},{"lineNumber":629,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * How to simulate: use any string that is not a directory of any real file.","lastModifiedDate":"2023-03-23"},{"lineNumber":630,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * Expected behavior: Doesn\u0027t change anything and show message to user:","lastModifiedDate":"2023-03-23"},{"lineNumber":631,"author":{"gitId":"WilliamHaiweiGu"},"content":"   ```","lastModifiedDate":"2023-03-23"},{"lineNumber":632,"author":{"gitId":"WilliamHaiweiGu"},"content":"   The specified file does not exist.","lastModifiedDate":"2023-03-23"},{"lineNumber":633,"author":{"gitId":"WilliamHaiweiGu"},"content":"   ```","lastModifiedDate":"2023-03-23"},{"lineNumber":634,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Dealing with file being a directory:","lastModifiedDate":"2023-03-23"},{"lineNumber":635,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * How to simulate: use a directory path.","lastModifiedDate":"2023-03-23"},{"lineNumber":636,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * Expected behavior: Doesn\u0027t change anything and show message to user:","lastModifiedDate":"2023-03-23"},{"lineNumber":637,"author":{"gitId":"WilliamHaiweiGu"},"content":"   ```","lastModifiedDate":"2023-03-23"},{"lineNumber":638,"author":{"gitId":"WilliamHaiweiGu"},"content":"   The specified file path is a directory.","lastModifiedDate":"2023-03-23"},{"lineNumber":639,"author":{"gitId":"WilliamHaiweiGu"},"content":"   ```","lastModifiedDate":"2023-03-23"},{"lineNumber":640,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Dealing with FileReader throwing FileNotFoundException:","lastModifiedDate":"2023-03-23"},{"lineNumber":641,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * How to simulate: _TODO_","lastModifiedDate":"2023-03-23"},{"lineNumber":642,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * Expected behavior: Doesn\u0027t change anything and show message to user:","lastModifiedDate":"2023-03-23"},{"lineNumber":643,"author":{"gitId":"WilliamHaiweiGu"},"content":"   ```","lastModifiedDate":"2023-03-23"},{"lineNumber":644,"author":{"gitId":"WilliamHaiweiGu"},"content":"   The specified file cannot be opened for reading.","lastModifiedDate":"2023-03-23"},{"lineNumber":645,"author":{"gitId":"WilliamHaiweiGu"},"content":"   ```","lastModifiedDate":"2023-03-23"},{"lineNumber":646,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Dealing with CSVParser throwing IOException:","lastModifiedDate":"2023-03-23"},{"lineNumber":647,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * How to simulate: _TODO_","lastModifiedDate":"2023-03-23"},{"lineNumber":648,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * Expected behavior: Doesn\u0027t change anything and show message to user:","lastModifiedDate":"2023-03-23"},{"lineNumber":649,"author":{"gitId":"WilliamHaiweiGu"},"content":"   ```","lastModifiedDate":"2023-03-23"},{"lineNumber":650,"author":{"gitId":"WilliamHaiweiGu"},"content":"   An IOException occurred while reading specified file.","lastModifiedDate":"2023-03-23"},{"lineNumber":651,"author":{"gitId":"WilliamHaiweiGu"},"content":"   ```","lastModifiedDate":"2023-03-23"},{"lineNumber":652,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Dealing with ill-formatted CSV entry:","lastModifiedDate":"2023-03-23"},{"lineNumber":653,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * How to simulate: use csv files that contains inconsistent entries, unmapped columns, or fields violating their","lastModifiedDate":"2023-03-23"},{"lineNumber":654,"author":{"gitId":"WilliamHaiweiGu"},"content":"      constraints.","lastModifiedDate":"2023-03-23"},{"lineNumber":655,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * Expected behavior: Doesn\u0027t change anything and show message indicating detailed entry that caused the error to","lastModifiedDate":"2023-03-23"},{"lineNumber":656,"author":{"gitId":"WilliamHaiweiGu"},"content":"      user:","lastModifiedDate":"2023-03-23"},{"lineNumber":657,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":658,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Dealing with at least 2 students in CSV file having same name:","lastModifiedDate":"2023-03-23"},{"lineNumber":659,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * How to simulate: use csv files that contains at least students with same name.","lastModifiedDate":"2023-03-23"},{"lineNumber":660,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * Expected behavior: doesn\u0027t change anything and show message indicating the specific student existing twice in","lastModifiedDate":"2023-03-23"},{"lineNumber":661,"author":{"gitId":"WilliamHaiweiGu"},"content":"      file.","lastModifiedDate":"2023-03-23"},{"lineNumber":662,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Dealing with adding student whose name already existed in list:","lastModifiedDate":"2023-03-23"},{"lineNumber":663,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * How to simulate: use csv files that contains student whose name already existed in list.","lastModifiedDate":"2023-03-23"},{"lineNumber":664,"author":{"gitId":"WilliamHaiweiGu"},"content":"    * Expected behavior: If -force is used, replace the student in list. \u003cp\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":665,"author":{"gitId":"WilliamHaiweiGu"},"content":"      Otherwise, doesn\u0027t change anything and show message indicating the specific student already existed in list to","lastModifiedDate":"2023-03-23"},{"lineNumber":666,"author":{"gitId":"WilliamHaiweiGu"},"content":"      user.","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"chunzkok":60,"bojie3":69,"cyli133":83,"-":317,"WilliamHaiweiGu":89,"TamKengHong":48}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"   1. Run the `taa.Main` and try a few commands.","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"chunzkok":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"   e.g. `storage.taa.StorageManagerTest`","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"   e.g. `logic.taa.LogicManagerTest`","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":2,"-":34}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"## **Introduction**","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"### About this application","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"Teaching Assistant Assistant (TAA) is a desktop app for managing teaching assistant activities,","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"optimized for use via a Command Line Interface (CLI) while still retaining the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"TAA provides a one-stop solution that meets the following teaching needs of a TA in just one single application:","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"1. You can easily track student attendance and grades using just a keyboard, eliminating the need for multiple clicks.","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"2. You can even view grade statistics without the use of a dedicated data analysis application!","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"3. You can schedule alarms that help you manage your time during class. Gone are the days of you unknowingly spending","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"   too much time on a single question during tutorial or forgetting to mark students\u0027 attendance at the end of class.","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"4. You can save the troubles of manually importing and exporting data into and out of the TAA application, thanks to our","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"   CSV parser!","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"![TAA logo](./images/TAA_logo.jpg)","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"Say goodbye to the hassle of managing teaching assistant tasks and hello to increased efficiency with TAA!","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"### Objectives of this guide","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"This guide is written to provide comprehensive instructions for users to use TAA effectively and efficiently.","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"More advanced users can also benefit from this guide by following the additional information provided in each feature.","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"If you are a teaching assistant who can type fast, this guide is for you!","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"### Using the guide","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"#### Navigation","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"To use the guide, you may wish to take a look at the table of contents at the start of the page.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"You can click on the relevant sections you wish to visit, and the hyperlink will bring you straight to the relevant section.","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"Alternatively, you may wish to use the built-in search function in your browser (\u003cButton\u003eCtrl\u003c/Button\u003e + \u003cButton\u003eF\u003c/Button\u003e) to look for specific keywords relevant to your query.","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"#### Formatting","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"Aside from the usual text format, this guide includes certain special formats that are used for different purposes.","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"##### Callouts","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"Callouts are identified by a coloured box containing some text.","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"**Note**","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":":page_with_curl: **Note:** Contains important information on how the application is designed to be used.","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"**Information**","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":":information_source: **Info:** Provides information that is not essential, but may be useful (especially for advanced users!).","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"**Tip**","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":":bulb: **Tip:** Provides recommendations on how you can use the app more effectively.","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"**Warning**","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":":warning: **Warning:** Describes actions that may cause the application to function unexpectedly.","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"##### Syntax highlighting","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"Text contained within a `grey background` are used to denote either of the following:","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"- commands that can be entered into the command bar","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"- file names","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"- command line commands, to be run in the [terminal](#glossary) of the host machine","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"##### Keys","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"Keys such as \u003cButton\u003eA\u003c/Button\u003e \u003cButton\u003eB\u003c/Button\u003e \u003cButton\u003eC\u003c/Button\u003e are used to denote keys on the keyboard that can be pressed to perform certain things.","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"They can also be used to denote keys that should be held together, at the same time. For example, \u003cButton\u003eCtrl\u003c/Button\u003e + \u003cButton\u003eF\u003c/Button\u003e indicates that the user can press both the Ctrl and F keys together to perform a given action.","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"## **Quick start**","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"1. Download the latest `taa.jar` from [here](https://github.com/AY2223S2-CS2103T-T14-4/tp/releases).","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TAA.","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar taa.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"   ![Ui](./images/Ui.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"   \u003cfigcaption style\u003d\"text-align:center\"\u003e\u003cem\u003e\u003cstrong\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"   Figure 1","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"   \u003c/strong\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"   : TAA window","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"   \u003c/em\u003e\u003c/figcaption\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing `help` and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"   * `list` : Lists all students.","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"   * `add_student n/John Doe cl/T01 cl/L02` : Adds a contact named `John Doe` to the Class Lists `T01` and `L02`.","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"   * `delete_student 3` : Deletes the 3rd student shown in the current list.","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"## **Graphical User Interface**","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"![Labelled GUI](./images/Ui_labelled.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"\u003cfigcaption style\u003d\"text-align:center\"\u003e\u003cem\u003e\u003cstrong\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"Figure 2","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"chunzkok"},"content":"\u003c/strong\u003e:","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"Labelled components of the TAA GUI","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"\u003c/em\u003e\u003c/figcaption\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":":information_source: **Info:** Each Class List consists of 0 or more Student Cards.","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"chunzkok"},"content":"The purposes of each component, as labelled in Figure 2 above, are described in Table 1 below.","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"chunzkok"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"chunzkok"},"content":"\u003cdiv style\u003d\"text-align:center\"\u003e\u003cstrong\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"chunzkok"},"content":"Table 1","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"\u003c/strong\u003e:","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"Purposes of each GUI component","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"chunzkok"},"content":"|     Component      |                                      Purpose                                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"chunzkok"},"content":"|:------------------:|:----------------------------------------------------------------------------------:|","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"chunzkok"},"content":"|    Command Box     |                         To accept commands from the user.                          |","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"chunzkok"},"content":"|     Output Box     |             To display the result of the commands issued by the user.              |","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"chunzkok"},"content":"| Class List Display |        To display the list of students in the currently active class list.         |","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"chunzkok"},"content":"|    Student Card    | To display the relevant information for a single Student in the active class list. |","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"chunzkok"},"content":":page_with_curl: **Note:** To send your command, first type in your command in the command box. Then, press the \u003cButton\u003eEnter\u003c/Button\u003e key to send it!","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"chunzkok"},"content":":information_source: **Info:** The commands below will operate on the active class list being displayed in the Class List display.","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"chunzkok"},"content":"If the students being displayed are not the ones you wish to update, do remember to update the active class list before continuing.","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"chunzkok"},"content":"## **Features**","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"chunzkok"},"content":":page_with_curl: **Note:** The commands stated below will follow the syntax defined in Table 2. Come back here if you\u0027re ever confused on what the symbols mean!","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"chunzkok"},"content":"\u003cdiv style\u003d\"text-align:center\"\u003e\u003cstrong\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"chunzkok"},"content":"Table 2","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"chunzkok"},"content":"\u003c/strong\u003e:","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"chunzkok"},"content":"Command syntax","lastModifiedDate":"2023-04-04"},{"lineNumber":162,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"chunzkok"},"content":"|            Syntax            |                                                                      Explanation                                                                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"chunzkok"},"content":"|:----------------------------:|:------------------------------------------------------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"chunzkok"},"content":"|           `prefix/`           |           Prefixes that are used to separate the parameters supplied by the user. These are usually lower-case and are 1-2 characters long.            |","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"chunzkok"},"content":"|         `UPPER_CASE`         |            [Parameters](#glossary) to be specified by the user. These parameters are compulsory if they are not wrapped in square brackets.            |","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"chunzkok"},"content":"| `[Items in square brackets]` |                                       Optional parameters. The command will work fine if these are not included.                                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"chunzkok"},"content":"|   `param...`/`[param]...`    | More than one of the parameter `param` is accepted. The first case allows for 1 or more `params`, while the second case allows for 0 or more `params`. |","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"chunzkok"},"content":":bulb: **Tip:** Parameters can be specified in any order!","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"chunzkok"},"content":":information_source: **Info:** If a parameter is expected to be passed in only once, but is specified multiple times by the user, only the last occurrence of the parameter will be taken by the application.","lastModifiedDate":"2023-04-04"},{"lineNumber":178,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"chunzkok"},"content":":information_source: **Info:** Extraneous parameters for commands that do not take in parameters will be ignored.","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"chunzkok"},"content":"### General","lastModifiedDate":"2023-04-04"},{"lineNumber":185,"author":{"gitId":"chunzkok"},"content":"These commands are either used to interact with students across all class lists, or just general commands that are not related to any of the sections below:","lastModifiedDate":"2023-04-04"},{"lineNumber":186,"author":{"gitId":"chunzkok"},"content":"- `list`","lastModifiedDate":"2023-04-04"},{"lineNumber":187,"author":{"gitId":"chunzkok"},"content":"- `find`","lastModifiedDate":"2023-04-04"},{"lineNumber":188,"author":{"gitId":"chunzkok"},"content":"- `clear`","lastModifiedDate":"2023-04-04"},{"lineNumber":189,"author":{"gitId":"chunzkok"},"content":"- `help`","lastModifiedDate":"2023-04-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":191,"author":{"gitId":"chunzkok"},"content":"#### List all students : `list`","lastModifiedDate":"2023-04-04"},{"lineNumber":192,"author":{"gitId":"chunzkok"},"content":"Lists all students tracked by TAA, across all class lists.","lastModifiedDate":"2023-04-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"chunzkok"},"content":"Format: `list`","lastModifiedDate":"2023-04-04"},{"lineNumber":195,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":196,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":197,"author":{"gitId":"chunzkok"},"content":"#### Find a particular student : `find`","lastModifiedDate":"2023-04-04"},{"lineNumber":198,"author":{"gitId":"chunzkok"},"content":"Find students across all classes whose names contain any of the specified keywords.","lastModifiedDate":"2023-04-04"},{"lineNumber":199,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":200,"author":{"gitId":"chunzkok"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]...`","lastModifiedDate":"2023-04-04"},{"lineNumber":201,"author":{"gitId":"chunzkok"},"content":"- The given `KEYWORD`/`MORE_KEYWORDS` are not case-sensitive.","lastModifiedDate":"2023-04-04"},{"lineNumber":202,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":203,"author":{"gitId":"chunzkok"},"content":"Examples:","lastModifiedDate":"2023-04-04"},{"lineNumber":204,"author":{"gitId":"chunzkok"},"content":"- `find Alice Bob Charlie`","lastModifiedDate":"2023-04-04"},{"lineNumber":205,"author":{"gitId":"chunzkok"},"content":"- `find bAlAKRiSHNan`","lastModifiedDate":"2023-04-04"},{"lineNumber":206,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":207,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":208,"author":{"gitId":"chunzkok"},"content":":page_with_curl: **Note:** A given keyword must exist as a whole word in a name for it to be considered as a match.","lastModifiedDate":"2023-04-04"},{"lineNumber":209,"author":{"gitId":"chunzkok"},"content":"e.g. The keyword `bala` does not match the name `Roy Balakrishnan` as `Bala` is not the full word `Balakrishnan`.","lastModifiedDate":"2023-04-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":212,"author":{"gitId":"chunzkok"},"content":"#### Clear all students: `clear`","lastModifiedDate":"2023-04-04"},{"lineNumber":213,"author":{"gitId":"chunzkok"},"content":"Removes all students currently being tracked by TAA.","lastModifiedDate":"2023-04-04"},{"lineNumber":214,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":215,"author":{"gitId":"chunzkok"},"content":"Format: `clear`","lastModifiedDate":"2023-04-04"},{"lineNumber":216,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":217,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":218,"author":{"gitId":"chunzkok"},"content":":warning: **Warning:** This will delete all student records in TAA. Only use this command if you are sure you want to start off with a totally empty student list.","lastModifiedDate":"2023-04-04"},{"lineNumber":219,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":222,"author":{"gitId":"chunzkok"},"content":"#### Display the help menu: `help`","lastModifiedDate":"2023-04-04"},{"lineNumber":223,"author":{"gitId":"chunzkok"},"content":"Displays the help menu.","lastModifiedDate":"2023-04-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2023-04-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":227,"author":{"gitId":"chunzkok"},"content":"![Help menu](images/HelpMenu.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":228,"author":{"gitId":"chunzkok"},"content":"\u003cfigcaption style\u003d\"text-align:center\"\u003e\u003cem\u003e\u003cstrong\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":229,"author":{"gitId":"chunzkok"},"content":"Figure 3:","lastModifiedDate":"2023-04-04"},{"lineNumber":230,"author":{"gitId":"chunzkok"},"content":"\u003c/strong\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":231,"author":{"gitId":"chunzkok"},"content":"A preview of the help menu displayed.","lastModifiedDate":"2023-04-04"},{"lineNumber":232,"author":{"gitId":"chunzkok"},"content":"\u003c/em\u003e\u003c/figcaption\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":233,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":234,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":235,"author":{"gitId":"chunzkok"},"content":"### Attendance","lastModifiedDate":"2023-03-29"},{"lineNumber":236,"author":{"gitId":"bojie3"},"content":"For attendance, you can make the following calls:","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"chunzkok"},"content":"* markAtd","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"chunzkok"},"content":"* unmarkAtd","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"bojie3"},"content":"* listAtd","lastModifiedDate":"2023-04-04"},{"lineNumber":240,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":241,"author":{"gitId":"chunzkok"},"content":"#### Mark attendance: `markAtd`","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"bojie3"},"content":"Marks the attendance of a student for that week\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":243,"author":{"gitId":"bojie3"},"content":"Format: `markAtd STUDENT_INDEX w/WEEK_NUMBER`","lastModifiedDate":"2023-04-04"},{"lineNumber":244,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":245,"author":{"gitId":"bojie3"},"content":"`STUDENT_INDEX`: A positive integer that represents the index of student as shown in Class List display portion of TAA GUI\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":246,"author":{"gitId":"bojie3"},"content":"`WEEK_NUMBER`: A integer between 1 and 12 (inclusive of both 1 and 12) \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":247,"author":{"gitId":"bojie3"},"content":"Marking the attendance for a week that is already marked will result in","lastModifiedDate":"2023-04-04"},{"lineNumber":248,"author":{"gitId":"bojie3"},"content":"a message `This student\u0027s attendance has already been marked.`","lastModifiedDate":"2023-04-04"},{"lineNumber":249,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":250,"author":{"gitId":"bojie3"},"content":"Examples","lastModifiedDate":"2023-03-04"},{"lineNumber":251,"author":{"gitId":"bojie3"},"content":"* `markAtd 1 w/1` (marks attendance of student with index 1 for week 1)","lastModifiedDate":"2023-04-04"},{"lineNumber":252,"author":{"gitId":"bojie3"},"content":"* `markAtd 2 w/1` (marks attendance of student with index 2 for week 1)","lastModifiedDate":"2023-04-04"},{"lineNumber":253,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":254,"author":{"gitId":"chunzkok"},"content":"#### Unmark attendance: `unmarkAtd`","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"bojie3"},"content":"Unmarks the attendance of a student for that week\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":256,"author":{"gitId":"bojie3"},"content":"Format: `unmarkAtd STUDENT_INDEX w/WEEK_NUMBER`","lastModifiedDate":"2023-04-04"},{"lineNumber":257,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":258,"author":{"gitId":"bojie3"},"content":"`STUDENT_INDEX`: A positive integer that represents the index of student as shown in Class List display portion of TAA GUI \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":259,"author":{"gitId":"bojie3"},"content":"`WEEK_NUMBER`: A integer between 1 and 12 (inclusive of both 1 and 12) \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":260,"author":{"gitId":"bojie3"},"content":"Unmarking the attendance for a week that is already unmarked will just result in","lastModifiedDate":"2023-04-04"},{"lineNumber":261,"author":{"gitId":"bojie3"},"content":"the successful unmarking message being displayed `Attendance unmarked successfully!`","lastModifiedDate":"2023-04-04"},{"lineNumber":262,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"bojie3"},"content":"Examples","lastModifiedDate":"2023-03-04"},{"lineNumber":264,"author":{"gitId":"bojie3"},"content":"* `unmarkAtd 1 w/1` (unmarks attendance of student with index 1 for week 1)","lastModifiedDate":"2023-04-04"},{"lineNumber":265,"author":{"gitId":"bojie3"},"content":"* `unmarkAtd 2 w/1` (unmarks attendance of student with index 2 for week 1)","lastModifiedDate":"2023-04-04"},{"lineNumber":266,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":267,"author":{"gitId":"bojie3"},"content":"#### List Attendance: `listAtd`","lastModifiedDate":"2023-04-04"},{"lineNumber":268,"author":{"gitId":"bojie3"},"content":"Lists the attendance of a student from week 1 to week 12\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":269,"author":{"gitId":"bojie3"},"content":"Format: `listAtd STUDENT_INDEX`","lastModifiedDate":"2023-04-04"},{"lineNumber":270,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":271,"author":{"gitId":"bojie3"},"content":"`STUDENT_INDEX`: A positive integer that represents the index of student as shown in Class List display portion of TAA GUI \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":272,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":273,"author":{"gitId":"bojie3"},"content":"Examples","lastModifiedDate":"2023-04-04"},{"lineNumber":274,"author":{"gitId":"bojie3"},"content":"* `listAtd 1` (list attendance of student with index 1)","lastModifiedDate":"2023-04-04"},{"lineNumber":275,"author":{"gitId":"bojie3"},"content":"* `listAtd 2` (list attendance of student with index 2)","lastModifiedDate":"2023-04-04"},{"lineNumber":276,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":277,"author":{"gitId":"bojie3"},"content":"The listed attendance will be such that every line will be in the format `Week NUM: [PRESENT]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":278,"author":{"gitId":"bojie3"},"content":"where `NUM` represents the week number, and `PRESENT` takes the value of `X` is the student is present, and empty otherwise","lastModifiedDate":"2023-04-04"},{"lineNumber":279,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":280,"author":{"gitId":"bojie3"},"content":"Example","lastModifiedDate":"2023-04-04"},{"lineNumber":281,"author":{"gitId":"bojie3"},"content":"* `Week 1: [X]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":282,"author":{"gitId":"bojie3"},"content":"  `Week 2: [X]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":283,"author":{"gitId":"bojie3"},"content":"  `Week 3: [X]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":284,"author":{"gitId":"bojie3"},"content":"  `Week 4: []` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":285,"author":{"gitId":"bojie3"},"content":"  `Week 5: []` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":286,"author":{"gitId":"bojie3"},"content":"  `Week 6: []` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":287,"author":{"gitId":"bojie3"},"content":"  `Week 7: []` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":288,"author":{"gitId":"bojie3"},"content":"  `Week 8: []` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":289,"author":{"gitId":"bojie3"},"content":"  `Week 9: []` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":290,"author":{"gitId":"bojie3"},"content":"  `Week 10: []` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":291,"author":{"gitId":"bojie3"},"content":"  `Week 11: []` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":292,"author":{"gitId":"bojie3"},"content":"  `Week 12: []` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":293,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":294,"author":{"gitId":"bojie3"},"content":"The above example shows that the student is present for week 1,2,3 and absent for the rest of the weeks","lastModifiedDate":"2023-04-04"},{"lineNumber":295,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":296,"author":{"gitId":"bojie3"},"content":"### Participation","lastModifiedDate":"2023-03-22"},{"lineNumber":297,"author":{"gitId":"chunzkok"},"content":"For participation, you can make the following calls:","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"chunzkok"},"content":"* insertPP","lastModifiedDate":"2023-04-04"},{"lineNumber":299,"author":{"gitId":"chunzkok"},"content":"* listPP","lastModifiedDate":"2023-04-04"},{"lineNumber":300,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":301,"author":{"gitId":"chunzkok"},"content":"#### Clarifications on Participation points","lastModifiedDate":"2023-04-04"},{"lineNumber":302,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":303,"author":{"gitId":"chunzkok"},"content":"* Participation points is represented by a integer from `0` to `700` (inclusive of both `0` and `700`) \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":304,"author":{"gitId":"bojie3"},"content":"  Except for the special situation where the attendance is not marked, then the participation points will be `-1` \u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":305,"author":{"gitId":"chunzkok"},"content":"  If users are inserting participation points, only a integer from `0` to `700` (inclusive of both `0` and `700`) is allowed","lastModifiedDate":"2023-04-04"},{"lineNumber":306,"author":{"gitId":"bojie3"},"content":"* When the attendance of a student for a week is marked (not present -\u003e present for the week) \u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":307,"author":{"gitId":"bojie3"},"content":"  TAA will automatically change the participation points of the student changes from `-1` to `0`","lastModifiedDate":"2023-04-06"},{"lineNumber":308,"author":{"gitId":"chunzkok"},"content":"* Unmarking a student\u0027s attendance automatically changes the participation points of a student to `-1`","lastModifiedDate":"2023-04-04"},{"lineNumber":309,"author":{"gitId":"chunzkok"},"content":"* The participation points displayed in Class List portion of the TAA GUI is the average points, which is calculated using `Total participation points` / `Number of weeks present` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":310,"author":{"gitId":"chunzkok"},"content":"  `Total participation points` is the sum of all participation points for weeks when the student is present \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":311,"author":{"gitId":"chunzkok"},"content":"  `Number of weeks present` refers to the number of week present from week 1 to week 12","lastModifiedDate":"2023-04-04"},{"lineNumber":312,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":313,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":314,"author":{"gitId":"chunzkok"},"content":"#### Insert participation points: `insertPP`","lastModifiedDate":"2023-03-29"},{"lineNumber":315,"author":{"gitId":"chunzkok"},"content":"Inserts participation points of a student for that week\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":316,"author":{"gitId":"chunzkok"},"content":"Format: `insertPP STUDENT_INDEX w/WEEK_NUMBER pp/POINTS`","lastModifiedDate":"2023-04-04"},{"lineNumber":317,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":318,"author":{"gitId":"chunzkok"},"content":"`STUDENT_INDEX`: A positive integer that represents the index of student as shown in Class List display portion of TAA GUI \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":319,"author":{"gitId":"chunzkok"},"content":"`WEEK_NUMBER`: A integer between 1 and 12 (inclusive of both 1 and 12) \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":320,"author":{"gitId":"chunzkok"},"content":"`POINTS`: A integer between 0 and 700 (inclusive of both 0 and 700)","lastModifiedDate":"2023-04-04"},{"lineNumber":321,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":322,"author":{"gitId":"chunzkok"},"content":"Participation points can only be inserted for a week when the attendance is already marked. \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":323,"author":{"gitId":"chunzkok"},"content":"Violation of this will result in a message `Mark the attendance of the student first before inserting points!`","lastModifiedDate":"2023-04-04"},{"lineNumber":324,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":325,"author":{"gitId":"bojie3"},"content":"Examples","lastModifiedDate":"2023-04-04"},{"lineNumber":326,"author":{"gitId":"chunzkok"},"content":"* `insertPP 1 w/1 pp/200` (inserts participation points of 200 for week 1 of student with index 1)","lastModifiedDate":"2023-04-04"},{"lineNumber":327,"author":{"gitId":"chunzkok"},"content":"* `insertPP 2 w/1 pp/300` (inserts participation points of 200 for week 1 of student with index 2)","lastModifiedDate":"2023-04-04"},{"lineNumber":328,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":329,"author":{"gitId":"chunzkok"},"content":"#### List participation points: `listPP`","lastModifiedDate":"2023-04-04"},{"lineNumber":330,"author":{"gitId":"chunzkok"},"content":"Lists the participation points of a student from week 1 to week 12\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":331,"author":{"gitId":"chunzkok"},"content":"Format: `listPP STUDENT_INDEX`","lastModifiedDate":"2023-04-04"},{"lineNumber":332,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":333,"author":{"gitId":"chunzkok"},"content":"`STUDENT_INDEX`: A positive integer that represents the index of student as shown in Class List display portion of TAA GUI \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":334,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":335,"author":{"gitId":"chunzkok"},"content":"Examples","lastModifiedDate":"2023-04-04"},{"lineNumber":336,"author":{"gitId":"chunzkok"},"content":"* `listAtd 1` (list participation points of student with index 1)","lastModifiedDate":"2023-04-04"},{"lineNumber":337,"author":{"gitId":"chunzkok"},"content":"* `listAtd 2` (list participation points of student with index 2)","lastModifiedDate":"2023-04-04"},{"lineNumber":338,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":339,"author":{"gitId":"chunzkok"},"content":"The listed participation points will be such that every line will be in the format `Week NUM: [POINTS]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":340,"author":{"gitId":"chunzkok"},"content":"where `NUM` represents the week number, and `POINTS` is the participation points for that week","lastModifiedDate":"2023-04-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":342,"author":{"gitId":"chunzkok"},"content":"Example","lastModifiedDate":"2023-04-04"},{"lineNumber":343,"author":{"gitId":"chunzkok"},"content":"* `Week 1: [200]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":344,"author":{"gitId":"chunzkok"},"content":"  `Week 2: [300]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":345,"author":{"gitId":"chunzkok"},"content":"  `Week 3: [400]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":346,"author":{"gitId":"chunzkok"},"content":"  `Week 4: [-1]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":347,"author":{"gitId":"chunzkok"},"content":"  `Week 5: [-1]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":348,"author":{"gitId":"chunzkok"},"content":"  `Week 6: [-1]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":349,"author":{"gitId":"chunzkok"},"content":"  `Week 7: [-1]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":350,"author":{"gitId":"chunzkok"},"content":"  `Week 8: [-1]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":351,"author":{"gitId":"chunzkok"},"content":"  `Week 9: [-1]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":352,"author":{"gitId":"chunzkok"},"content":"  `Week 10: [-1]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":353,"author":{"gitId":"chunzkok"},"content":"  `Week 11: [-1]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":354,"author":{"gitId":"chunzkok"},"content":"  `Week 12: [-1]` \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":356,"author":{"gitId":"chunzkok"},"content":"The above example shows that the student have a participation point of 200 for week 1, 300 for week 2, 400 for week 3 \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":357,"author":{"gitId":"chunzkok"},"content":"And -1 for the rest of the weeks (attendance is not marked)","lastModifiedDate":"2023-04-04"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":360,"author":{"gitId":"TamKengHong"},"content":"### Assignments \u0026 Submissions","lastModifiedDate":"2023-04-04"},{"lineNumber":361,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":362,"author":{"gitId":"chunzkok"},"content":"#### Preface","lastModifiedDate":"2023-04-04"},{"lineNumber":363,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":364,"author":{"gitId":"TamKengHong"},"content":"Assignment: A school assignment. Has an alphanumeric name, a non-negative integer total marks, and","lastModifiedDate":"2023-04-04"},{"lineNumber":365,"author":{"gitId":"TamKengHong"},"content":"student submissions associated with it.","lastModifiedDate":"2023-04-04"},{"lineNumber":366,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":367,"author":{"gitId":"TamKengHong"},"content":"Submission: Linked to an assignment. Each student has a submission for every existing assignment.","lastModifiedDate":"2023-04-04"},{"lineNumber":368,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":369,"author":{"gitId":"TamKengHong"},"content":"For assignments \u0026 submissions, you can make the following calls:","lastModifiedDate":"2023-04-04"},{"lineNumber":370,"author":{"gitId":"TamKengHong"},"content":"* add_asgn","lastModifiedDate":"2023-03-29"},{"lineNumber":371,"author":{"gitId":"TamKengHong"},"content":"* delete_asgn","lastModifiedDate":"2023-03-29"},{"lineNumber":372,"author":{"gitId":"TamKengHong"},"content":"* grade","lastModifiedDate":"2023-03-07"},{"lineNumber":373,"author":{"gitId":"TamKengHong"},"content":"* ungrade","lastModifiedDate":"2023-03-07"},{"lineNumber":374,"author":{"gitId":"TamKengHong"},"content":"* list_asgn","lastModifiedDate":"2023-03-29"},{"lineNumber":375,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":376,"author":{"gitId":"chunzkok"},"content":"#### Add Assignment: `add_asgn`","lastModifiedDate":"2023-04-04"},{"lineNumber":377,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":378,"author":{"gitId":"TamKengHong"},"content":"Adds an assignment with a specified name and total marks.","lastModifiedDate":"2023-04-04"},{"lineNumber":379,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":380,"author":{"gitId":"TamKengHong"},"content":"If the total marks for the assignment is unspecified, a default value of 100 will be given.","lastModifiedDate":"2023-04-04"},{"lineNumber":381,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":382,"author":{"gitId":"TamKengHong"},"content":"Student submissions for that assignment will be also created for all existing students.","lastModifiedDate":"2023-04-04"},{"lineNumber":383,"author":{"gitId":"TamKengHong"},"content":"All student submissions for that assignment will initially be ungraded.","lastModifiedDate":"2023-04-04"},{"lineNumber":384,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":385,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":386,"author":{"gitId":"TamKengHong"},"content":"Format: `add_asgn n/ASSIGNMENT_NAME [m/TOTAL_MARKS]`\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":387,"author":{"gitId":"TamKengHong"},"content":"Example:","lastModifiedDate":"2023-03-07"},{"lineNumber":388,"author":{"gitId":"TamKengHong"},"content":"* `add_asgn n/Lab 1`","lastModifiedDate":"2023-04-04"},{"lineNumber":389,"author":{"gitId":"TamKengHong"},"content":"* `add_asgn n/Lab 2 m/50`","lastModifiedDate":"2023-04-04"},{"lineNumber":390,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":391,"author":{"gitId":"chunzkok"},"content":"#### Delete Assignment: `delete_asgn`","lastModifiedDate":"2023-04-04"},{"lineNumber":392,"author":{"gitId":"TamKengHong"},"content":"Deletes the assignment of assignment_name you provided, along with the student submissions for that assignment.","lastModifiedDate":"2023-04-04"},{"lineNumber":393,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":394,"author":{"gitId":"TamKengHong"},"content":"Format: `delete n/ASSIGNMENT_NAME`\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":395,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":396,"author":{"gitId":"TamKengHong"},"content":"Example:","lastModifiedDate":"2023-03-07"},{"lineNumber":397,"author":{"gitId":"TamKengHong"},"content":"* `delete_asgn n/Lab 1`","lastModifiedDate":"2023-04-04"},{"lineNumber":398,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":399,"author":{"gitId":"chunzkok"},"content":"#### Grade Assignment: `grade`","lastModifiedDate":"2023-04-04"},{"lineNumber":400,"author":{"gitId":"TamKengHong"},"content":"Grades the student submission of assignment_name and student_id with the provided marks.","lastModifiedDate":"2023-04-04"},{"lineNumber":401,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":402,"author":{"gitId":"TamKengHong"},"content":"You can also indicate whether a student submission is late by adding \"late/\" at the end.","lastModifiedDate":"2023-04-04"},{"lineNumber":403,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":404,"author":{"gitId":"TamKengHong"},"content":"A submission can be graded multiple times, even if it is already graded. In that case, the latest","lastModifiedDate":"2023-04-04"},{"lineNumber":405,"author":{"gitId":"TamKengHong"},"content":"grade will be taken.","lastModifiedDate":"2023-04-04"},{"lineNumber":406,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":407,"author":{"gitId":"TamKengHong"},"content":"Format: `grade n/ASSIGNMENT_NAME i/STUDENT_ID m/MARKS [late/]`\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":408,"author":{"gitId":"TamKengHong"},"content":"Example:","lastModifiedDate":"2023-03-07"},{"lineNumber":409,"author":{"gitId":"TamKengHong"},"content":"* `grade n/Lab 1 i/2 m/20`","lastModifiedDate":"2023-04-04"},{"lineNumber":410,"author":{"gitId":"TamKengHong"},"content":"* `grade n/Lab 1 i/3 m/30 late/`","lastModifiedDate":"2023-04-04"},{"lineNumber":411,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":412,"author":{"gitId":"chunzkok"},"content":"#### Ungrade Assignment: `ungrade`","lastModifiedDate":"2023-04-04"},{"lineNumber":413,"author":{"gitId":"TamKengHong"},"content":"Resets the grade of the submission of assignment_name and student_id. It will also reset","lastModifiedDate":"2023-03-29"},{"lineNumber":414,"author":{"gitId":"TamKengHong"},"content":"the late submission status of the submission, if the submission was marked as late.","lastModifiedDate":"2023-03-29"},{"lineNumber":415,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":416,"author":{"gitId":"TamKengHong"},"content":"A submission can be ungraded multiple times, even if it is already ungraded. In that case, the subsequent ungrades","lastModifiedDate":"2023-04-04"},{"lineNumber":417,"author":{"gitId":"TamKengHong"},"content":"will have no effect.","lastModifiedDate":"2023-04-04"},{"lineNumber":418,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":419,"author":{"gitId":"chunzkok"},"content":"Format: `ungrade n/ASSIGNMENT_ID i/STUDENT_ID`\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":420,"author":{"gitId":"TamKengHong"},"content":"Example:","lastModifiedDate":"2023-03-07"},{"lineNumber":421,"author":{"gitId":"TamKengHong"},"content":"* `ungrade n/Lab 1 i/2`","lastModifiedDate":"2023-04-04"},{"lineNumber":422,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":423,"author":{"gitId":"chunzkok"},"content":"#### List all assignments: `list_asgn`","lastModifiedDate":"2023-04-04"},{"lineNumber":424,"author":{"gitId":"TamKengHong"},"content":"Lists all assignments, submissions and their respective information.","lastModifiedDate":"2023-03-29"},{"lineNumber":425,"author":{"gitId":"TamKengHong"},"content":"Format: `list_asgn`","lastModifiedDate":"2023-03-29"},{"lineNumber":426,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":427,"author":{"gitId":"chunzkok"},"content":"### Class List","lastModifiedDate":"2023-04-04"},{"lineNumber":428,"author":{"gitId":"chunzkok"},"content":"For class lists, you can call the following commands:","lastModifiedDate":"2023-03-29"},{"lineNumber":429,"author":{"gitId":"cyli133"},"content":"- Create class list: `create_class`","lastModifiedDate":"2023-04-07"},{"lineNumber":430,"author":{"gitId":"chunzkok"},"content":"- View class statistics: `class_stats`","lastModifiedDate":"2023-03-30"},{"lineNumber":431,"author":{"gitId":"chunzkok"},"content":"- (Random) Groupings: `rand_grp`","lastModifiedDate":"2023-03-05"},{"lineNumber":432,"author":{"gitId":"chunzkok"},"content":"- Adding a student: `add`","lastModifiedDate":"2023-03-05"},{"lineNumber":433,"author":{"gitId":"chunzkok"},"content":"- Deleting a student: `delete`","lastModifiedDate":"2023-03-05"},{"lineNumber":434,"author":{"gitId":"cyli133"},"content":"- Listing all students in a class: `list`","lastModifiedDate":"2023-04-07"},{"lineNumber":435,"author":{"gitId":"chunzkok"},"content":"- Find student: `find`","lastModifiedDate":"2023-03-05"},{"lineNumber":436,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":437,"author":{"gitId":"chunzkok"},"content":"#### Create a class list: `create_class`","lastModifiedDate":"2023-04-04"},{"lineNumber":438,"author":{"gitId":"chunzkok"},"content":"Creates a class list to store the information about a group of students.","lastModifiedDate":"2023-03-05"},{"lineNumber":439,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":440,"author":{"gitId":"cyli133"},"content":"Format: `create_class LIST_NAME`","lastModifiedDate":"2023-04-07"},{"lineNumber":441,"author":{"gitId":"chunzkok"},"content":"- The argument `LIST_NAME` should be the name of the new class list","lastModifiedDate":"2023-03-05"},{"lineNumber":442,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":443,"author":{"gitId":"chunzkok"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":444,"author":{"gitId":"chunzkok"},"content":"- `create_class cs6244` creates an empty class list.","lastModifiedDate":"2023-03-29"},{"lineNumber":445,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":446,"author":{"gitId":"chunzkok"},"content":"#### Add a student: `add_student`","lastModifiedDate":"2023-03-29"},{"lineNumber":447,"author":{"gitId":"chunzkok"},"content":"Adds a student to a given class list.","lastModifiedDate":"2023-03-05"},{"lineNumber":448,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":449,"author":{"gitId":"chunzkok"},"content":"Format: `add_student n/STUDENT_NAME cl/CLASS_NAME...`","lastModifiedDate":"2023-03-29"},{"lineNumber":450,"author":{"gitId":"chunzkok"},"content":"- The argument `STUDENT_NAME` should be the name of the student to be added","lastModifiedDate":"2023-03-15"},{"lineNumber":451,"author":{"gitId":"chunzkok"},"content":"- The argument `STUDENT_NAME` only accepts alphanumeric inputs and spaces.","lastModifiedDate":"2023-04-04"},{"lineNumber":452,"author":{"gitId":"chunzkok"},"content":"- The argument `CLASS_NAME` should be the name of a given class the student belongs to","lastModifiedDate":"2023-03-15"},{"lineNumber":453,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":454,"author":{"gitId":"chunzkok"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":455,"author":{"gitId":"chunzkok"},"content":"- `add_student n/Tom cl/cs2103t-t14` adds Tom to the class CS2103T-T14","lastModifiedDate":"2023-04-04"},{"lineNumber":456,"author":{"gitId":"chunzkok"},"content":"- `add_student n/Harry cl/cs6244` adds Harry to the class CS6244","lastModifiedDate":"2023-04-04"},{"lineNumber":457,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":458,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":459,"author":{"gitId":"chunzkok"},"content":":information_source: **Info:** If the class list `CLASS_NAME` does not exist, it will automatically be created with student","lastModifiedDate":"2023-04-04"},{"lineNumber":460,"author":{"gitId":"chunzkok"},"content":"`STUDENT_NAME` as its first student","lastModifiedDate":"2023-04-04"},{"lineNumber":461,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":462,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":463,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":464,"author":{"gitId":"chunzkok"},"content":":bulb: **Tip:** You can add a student to multiple classes at once! Just specify multiple `cl/` prefixes in your command. e.g. `add n/Harry cl/cs6244 cl/cs1231s`","lastModifiedDate":"2023-03-29"},{"lineNumber":465,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":466,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":467,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":468,"author":{"gitId":"chunzkok"},"content":":bulb: **Tip:** As `STUDENT_NAME` accepts alphanumeric inputs, student numbers such as `A1234567X` are perfectly valid student names!","lastModifiedDate":"2023-04-04"},{"lineNumber":469,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":471,"author":{"gitId":"chunzkok"},"content":"#### Edit a student: `edit_student`","lastModifiedDate":"2023-03-29"},{"lineNumber":472,"author":{"gitId":"chunzkok"},"content":"Edits a student in the active class list.","lastModifiedDate":"2023-03-14"},{"lineNumber":473,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":474,"author":{"gitId":"chunzkok"},"content":"Format: `edit_student STUDENT_INDEX [n/STUDENT_NAME] [cl/CLASS_NAME]`","lastModifiedDate":"2023-03-14"},{"lineNumber":475,"author":{"gitId":"chunzkok"},"content":"- The `STUDENT_INDEX` is the index of the student that is currently being shown on screen.","lastModifiedDate":"2023-03-14"},{"lineNumber":476,"author":{"gitId":"chunzkok"},"content":"- At least one of the optional fields must be present. (i.e. either `STUDENT_NAME` and/or `CLASS_NAME`)","lastModifiedDate":"2023-03-14"},{"lineNumber":477,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":478,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-14"},{"lineNumber":479,"author":{"gitId":"chunzkok"},"content":"- `edit_student 3 n/Barry Allen` changes the name of the 3rd student to \"Barry Allen\"","lastModifiedDate":"2023-03-14"},{"lineNumber":480,"author":{"gitId":"chunzkok"},"content":"- `edit_student 5 cl/Tutorial_T14` assigns the 5th student only to the class \"Tutorial_14\"","lastModifiedDate":"2023-03-14"},{"lineNumber":481,"author":{"gitId":"chunzkok"},"content":"- `edit_student 12 n/Tom Hanks cl/Lab_L11` changes the name of the 12th student to \"Tom Hanks\", and assigns","lastModifiedDate":"2023-03-14"},{"lineNumber":482,"author":{"gitId":"chunzkok"},"content":"him to the class \"Lab_L11\"","lastModifiedDate":"2023-03-14"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":484,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":485,"author":{"gitId":"chunzkok"},"content":":warning: **Warning:**  The new fields will override the fields of the targeted student completely. i.e. to add an extra field, you will have to copy over the previous fields and add one additional parameter containing the new field to be added.","lastModifiedDate":"2023-03-29"},{"lineNumber":486,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":488,"author":{"gitId":"chunzkok"},"content":"#### Delete a student: `delete_student`","lastModifiedDate":"2023-03-29"},{"lineNumber":489,"author":{"gitId":"chunzkok"},"content":"Deletes a student from the active class list.","lastModifiedDate":"2023-03-14"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":491,"author":{"gitId":"chunzkok"},"content":"Format: `delete_student STUDENT_INDEX`","lastModifiedDate":"2023-03-14"},{"lineNumber":492,"author":{"gitId":"chunzkok"},"content":"- The `STUDENT_INDEX` is the index of the student that is currently being shown on screen.","lastModifiedDate":"2023-03-14"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":494,"author":{"gitId":"chunzkok"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":495,"author":{"gitId":"chunzkok"},"content":"- `delete_student 3` removes the 3rd student in the currently active/displayed class list","lastModifiedDate":"2023-03-14"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":497,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":498,"author":{"gitId":"chunzkok"},"content":":page_with_curl: **Note:** This command will delete the student with the given ID on the active class list, not from the list of all students obtained from using the `list` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":499,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":501,"author":{"gitId":"chunzkok"},"content":"#### View class statistics: `class_stats`","lastModifiedDate":"2023-04-04"},{"lineNumber":502,"author":{"gitId":"chunzkok"},"content":"Displays statistics for the class, based on the specified field.","lastModifiedDate":"2023-04-04"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":504,"author":{"gitId":"chunzkok"},"content":"Format: `class_stats st/FIELD [as/ASSIGNMENT_NAME]`","lastModifiedDate":"2023-04-04"},{"lineNumber":505,"author":{"gitId":"chunzkok"},"content":"- The argument `FIELD` must only be one of `attendance`/`grades`","lastModifiedDate":"2023-04-04"},{"lineNumber":506,"author":{"gitId":"chunzkok"},"content":"- If `attendance` is entered as the `FIELD` parameter, then `ASSIGNMENT_NAME` is not required and will be ignored.","lastModifiedDate":"2023-04-04"},{"lineNumber":507,"author":{"gitId":"chunzkok"},"content":"- If `grades` is entered as the `FIELD` parameter, then `ASSIGNMENT_NAME` is required.","lastModifiedDate":"2023-04-04"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":509,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-04-04"},{"lineNumber":510,"author":{"gitId":"chunzkok"},"content":"- `class_stats st/attendance` -- see Figure 4 below","lastModifiedDate":"2023-04-04"},{"lineNumber":511,"author":{"gitId":"chunzkok"},"content":"- `class_stats st/grades as/Test 2` -- see Figure 5 below","lastModifiedDate":"2023-04-04"},{"lineNumber":512,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":513,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":514,"author":{"gitId":"chunzkok"},"content":":page_with_curl: **Note:** To view grade statistics, the assignment `ASSIGNMENT_NAME` must have at least 2 graded submissions, and the submission grades must contain some variance. (i.e. if all the submissions are graded with the exact same marks, then no curve will be drawn as a normal distribution cannot be modelled with 0 variance.)","lastModifiedDate":"2023-04-04"},{"lineNumber":515,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":516,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":517,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":518,"author":{"gitId":"chunzkok"},"content":":information_source: **Info:** The `FIELD` parameter is case-insensitive!","lastModifiedDate":"2023-04-04"},{"lineNumber":519,"author":{"gitId":"chunzkok"},"content":"i.e. `atTenDanCE`, while unusual, is still a valid argument to `FIELD`.","lastModifiedDate":"2023-04-04"},{"lineNumber":520,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":521,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":522,"author":{"gitId":"chunzkok"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":523,"author":{"gitId":"chunzkok"},"content":":bulb: **Tip:** Want to save the chart? Right click on it, mouseover \u0027Save As\u0027 and click on \u0027PNG\u0027!","lastModifiedDate":"2023-04-04"},{"lineNumber":524,"author":{"gitId":"chunzkok"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":525,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":526,"author":{"gitId":"chunzkok"},"content":"![Attendance Statistics](images/Class_Statistics_Attendance.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":527,"author":{"gitId":"chunzkok"},"content":"\u003cfigcaption style\u003d\"text-align:center\"\u003e\u003cem\u003e\u003cstrong\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":528,"author":{"gitId":"chunzkok"},"content":"Figure 4","lastModifiedDate":"2023-04-04"},{"lineNumber":529,"author":{"gitId":"chunzkok"},"content":"\u003c/strong\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":530,"author":{"gitId":"chunzkok"},"content":": An example of the chart displayed for the command `class_stats st/attendance`","lastModifiedDate":"2023-04-04"},{"lineNumber":531,"author":{"gitId":"chunzkok"},"content":"\u003c/em\u003e\u003c/figcaption\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":532,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":533,"author":{"gitId":"chunzkok"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":534,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":535,"author":{"gitId":"chunzkok"},"content":"![Grade Statistics](images/Class_Statistics_Grades.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":536,"author":{"gitId":"chunzkok"},"content":"\u003cfigcaption style\u003d\"text-align:center\"\u003e\u003cem\u003e\u003cstrong\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":537,"author":{"gitId":"chunzkok"},"content":"Figure 5","lastModifiedDate":"2023-04-04"},{"lineNumber":538,"author":{"gitId":"chunzkok"},"content":"\u003c/strong\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":539,"author":{"gitId":"chunzkok"},"content":": An example of the chart displayed for the command `class_stats st/grades as/Test 2`","lastModifiedDate":"2023-04-04"},{"lineNumber":540,"author":{"gitId":"chunzkok"},"content":"\u003c/em\u003e\u003c/figcaption\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":541,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":543,"author":{"gitId":"chunzkok"},"content":"#### Group students at random: `rand_grp` [coming soon]","lastModifiedDate":"2023-04-04"},{"lineNumber":544,"author":{"gitId":"chunzkok"},"content":"Forms random groups of a specified size within a given class list.","lastModifiedDate":"2023-04-04"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":546,"author":{"gitId":"chunzkok"},"content":"Format: `rand_grp CLASS_LIST GROUP_SIZE`","lastModifiedDate":"2023-04-04"},{"lineNumber":547,"author":{"gitId":"chunzkok"},"content":"- The argument `CLASS_LIST` should be the name of a given class list","lastModifiedDate":"2023-04-04"},{"lineNumber":548,"author":{"gitId":"chunzkok"},"content":"- The search for `CLASS_LIST` is case-insensitive. e.g. cs2103T will match CS2103T","lastModifiedDate":"2023-04-04"},{"lineNumber":549,"author":{"gitId":"chunzkok"},"content":"- The argument `GROUP_SIZE` will determine the size of the groups to be formed.","lastModifiedDate":"2023-04-04"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":552,"author":{"gitId":"cyli133"},"content":"Examples:","lastModifiedDate":"2023-03-07"},{"lineNumber":553,"author":{"gitId":"chunzkok"},"content":"- `rand_grp cs2103t-t14 2` returns: Group 1: Alex, John; Group 2: Bonnie, Clyde","lastModifiedDate":"2023-04-04"},{"lineNumber":554,"author":{"gitId":"chunzkok"},"content":"- `rand_grp cs2103t-t14 3` returns: Group 1: Alex, John, Clyde; Group 2: Bonnie","lastModifiedDate":"2023-04-04"},{"lineNumber":555,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":556,"author":{"gitId":"chunzkok"},"content":"### Alarm","lastModifiedDate":"2023-04-04"},{"lineNumber":557,"author":{"gitId":"cyli133"},"content":"![Alarm Window](images/alarm_warning.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":558,"author":{"gitId":"cyli133"},"content":"For Alarm, you can call the following commands:","lastModifiedDate":"2023-03-30"},{"lineNumber":559,"author":{"gitId":"cyli133"},"content":"- Schedule an alarm: `add_alarm`","lastModifiedDate":"2023-03-30"},{"lineNumber":560,"author":{"gitId":"cyli133"},"content":"- Remove a scheduled alarm: `delete_alarm`","lastModifiedDate":"2023-03-30"},{"lineNumber":561,"author":{"gitId":"cyli133"},"content":"- List all scheduled alarms: `list_alarms`","lastModifiedDate":"2023-03-30"},{"lineNumber":562,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":563,"author":{"gitId":"cyli133"},"content":"#### Schedule an alarm : `add_alarm`","lastModifiedDate":"2023-03-30"},{"lineNumber":564,"author":{"gitId":"cyli133"},"content":"Add an alarm to the current application.","lastModifiedDate":"2023-03-30"},{"lineNumber":565,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":566,"author":{"gitId":"cyli133"},"content":"Format: `add_alarm t/TIME c/COMMENT`","lastModifiedDate":"2023-03-30"},{"lineNumber":567,"author":{"gitId":"cyli133"},"content":"- The TIME field must be numbers representing minutes","lastModifiedDate":"2023-03-30"},{"lineNumber":568,"author":{"gitId":"cyli133"},"content":"- The COMMENT field contains content of the alarm","lastModifiedDate":"2023-03-30"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":570,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":571,"author":{"gitId":"cyli133"},"content":"- add_alarm t/5 c/finish question one","lastModifiedDate":"2023-03-30"},{"lineNumber":572,"author":{"gitId":"cyli133"},"content":"- The above command adds an alarm that rings in 5 minutes, with comment \"finish question 1\"","lastModifiedDate":"2023-03-30"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":574,"author":{"gitId":"cyli133"},"content":"#### Remove a scheduled alarm : `delete_alarm`","lastModifiedDate":"2023-03-30"},{"lineNumber":575,"author":{"gitId":"cyli133"},"content":"Delete a scheduled alarm from the current alarm list. It will not ring on the scheduled time after deletion.","lastModifiedDate":"2023-03-30"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":577,"author":{"gitId":"cyli133"},"content":"Format: `delete_alarm INDEX`","lastModifiedDate":"2023-03-30"},{"lineNumber":578,"author":{"gitId":"cyli133"},"content":"- the INDEX is the number assigned to the alarm in the alarm list when we call the list_alarms command","lastModifiedDate":"2023-03-30"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":580,"author":{"gitId":"cyli133"},"content":"Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":581,"author":{"gitId":"cyli133"},"content":"- delete_alarm 1","lastModifiedDate":"2023-03-30"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":583,"author":{"gitId":"cyli133"},"content":"#### List all scheduled alarms : `list_alarms`","lastModifiedDate":"2023-03-30"},{"lineNumber":584,"author":{"gitId":"cyli133"},"content":"![Alarm List](images/list_alarms_screenshot.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":585,"author":{"gitId":"cyli133"},"content":"List all alarms scheduled, arranged in the order of creation, containing time left and comment of each alarm.","lastModifiedDate":"2023-03-30"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":587,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":588,"author":{"gitId":"cyli133"},"content":"- list_alarms","lastModifiedDate":"2023-03-30"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":591,"author":{"gitId":"chunzkok"},"content":"### CSV Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":593,"author":{"gitId":"WilliamHaiweiGu"},"content":"Stores and loads data in with CSV files.","lastModifiedDate":"2023-03-08"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":595,"author":{"gitId":"WilliamHaiweiGu"},"content":"* Import data in CSV format: `import`","lastModifiedDate":"2023-03-08"},{"lineNumber":596,"author":{"gitId":"WilliamHaiweiGu"},"content":"* Export data in CSV format: `export`","lastModifiedDate":"2023-03-08"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":598,"author":{"gitId":"WilliamHaiweiGu"},"content":"Our CSV files follow the following format:","lastModifiedDate":"2023-03-14"},{"lineNumber":599,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. All CSV files are header-less. Student data has exactly 5 columns: name, attendence, participation points,","lastModifiedDate":"2023-03-31"},{"lineNumber":600,"author":{"gitId":"WilliamHaiweiGu"},"content":"   submissions, and tags.","lastModifiedDate":"2023-03-31"},{"lineNumber":601,"author":{"gitId":"WilliamHaiweiGu"},"content":"2. All columns other than the name is optional, but a comma representing the tags column is still required","lastModifiedDate":"2023-03-31"},{"lineNumber":602,"author":{"gitId":"WilliamHaiweiGu"},"content":"   because [if a column is defined as optional, it means that the column is required to exist, but the value can be blank.](https://www.ibm.com/docs/en/atlas-policy-suite/6.0.3?topic\u003dfiles-rules-creating-populating-csv)","lastModifiedDate":"2023-03-31"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":604,"author":{"gitId":"WilliamHaiweiGu"},"content":"Acceptable CSV format example:","lastModifiedDate":"2023-03-14"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":606,"author":{"gitId":"WilliamHaiweiGu"},"content":"```","lastModifiedDate":"2023-03-14"},{"lineNumber":607,"author":{"gitId":"WilliamHaiweiGu"},"content":"Technoblade,1;0;0;1;1;1;0;0;0;0;0;0,-1;-1;-1;-1;-1;-1;-1;-1;200;-1;-1;-1,\"x,0,0,0,16;y,0,0,0,120;\",Tut_T01;","lastModifiedDate":"2023-03-31"},{"lineNumber":608,"author":{"gitId":"WilliamHaiweiGu"},"content":"Dream Was Taken,0;0;0;0;0;0;0;0;0;0;0;0,-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1,\"z,0,0,0,200\",Tut_T01;Lab_L01;","lastModifiedDate":"2023-03-31"},{"lineNumber":609,"author":{"gitId":"WilliamHaiweiGu"},"content":"Tommy In It,,,\"x,0,0,0,100;y,0,0,0,100;\",Tut_T02;","lastModifiedDate":"2023-03-31"},{"lineNumber":610,"author":{"gitId":"WilliamHaiweiGu"},"content":"Wilbur Soot,,-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1,\"x,0,0,0,100;y,0,0,0,100;\",Lab_L02;","lastModifiedDate":"2023-03-31"},{"lineNumber":611,"author":{"gitId":"WilliamHaiweiGu"},"content":"Philza Minercaft,,,\"x,0,0,0,100;y,0,0,0,100;\",Rec_R03;","lastModifiedDate":"2023-03-31"},{"lineNumber":612,"author":{"gitId":"WilliamHaiweiGu"},"content":"Mumbo Jumbo,,,,Lab_L12;","lastModifiedDate":"2023-03-31"},{"lineNumber":613,"author":{"gitId":"WilliamHaiweiGu"},"content":"```","lastModifiedDate":"2023-03-14"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":615,"author":{"gitId":"WilliamHaiweiGu"},"content":"Excel spreadsheet format that exports acceptable CSV files:","lastModifiedDate":"2023-04-04"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":617,"author":{"gitId":"WilliamHaiweiGu"},"content":"| \u003cspan style\u003d\"font-weight:normal\"\u003eTechnoblade\u003c/span\u003e | \u003cspan style\u003d\"font-weight:normal\"\u003e1;0;0;1;1;1;0;0;0;0;0;0\u003c/span\u003e | \u003cspan style\u003d\"font-weight:normal\"\u003e-1;-1;-1;-1;-1;-1;-1;-1;200;-1;-1;-1\u003c/span\u003e | \u003cspan style\u003d\"font-weight:normal\"\u003ex,0,0,0,16;y,0,0,0,120;\u003c/span\u003e | \u003cspan style\u003d\"font-weight:normal\"\u003eTut_T01;\u003c/span\u003e |","lastModifiedDate":"2023-04-04"},{"lineNumber":618,"author":{"gitId":"WilliamHaiweiGu"},"content":"|-----------------------------------------------------|-----------------------------------------------------------------|------------------------------------------------------------------------------|-----------------------------------------------------------------|--------------------------------------------------|","lastModifiedDate":"2023-04-04"},{"lineNumber":619,"author":{"gitId":"WilliamHaiweiGu"},"content":"| Dream Was Taken                                     | 0;0;0;0;0;0;0;0;0;0;0;0                                         | -1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1                                          | z,0,0,0,200                                                     | Tut_T01;Lab_L01;                                 |","lastModifiedDate":"2023-04-04"},{"lineNumber":620,"author":{"gitId":"WilliamHaiweiGu"},"content":"| Tommy In It                                         |                                                                 |                                                                              | x,0,0,0,100;y,0,0,0,100;                                        | Tut_T02;                                         |","lastModifiedDate":"2023-04-04"},{"lineNumber":621,"author":{"gitId":"WilliamHaiweiGu"},"content":"| Wilbur Soot                                         |                                                                 | -1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1                                          | x,0,0,0,100;y,0,0,0,100;                                        | Lab_L02;                                         |","lastModifiedDate":"2023-04-04"},{"lineNumber":622,"author":{"gitId":"WilliamHaiweiGu"},"content":"| Philza Minercaft                                    |                                                                 |                                                                              | x,0,0,0,100;y,0,0,0,100;                                        | Rec_R03;                                         |","lastModifiedDate":"2023-04-04"},{"lineNumber":623,"author":{"gitId":"WilliamHaiweiGu"},"content":"| Mumbo Jumbo                                         |                                                                 |                                                                              |                                                                 | Lab_L12;                                         |","lastModifiedDate":"2023-04-04"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":625,"author":{"gitId":"WilliamHaiweiGu"},"content":"#### Import data in CSV format: `import`","lastModifiedDate":"2023-03-31"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":627,"author":{"gitId":"WilliamHaiweiGu"},"content":"Import data in CSV format from file.","lastModifiedDate":"2023-03-08"},{"lineNumber":628,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":629,"author":{"gitId":"WilliamHaiweiGu"},"content":"Format: `import [-force] FILE_PATH`","lastModifiedDate":"2023-03-31"},{"lineNumber":630,"author":{"gitId":"WilliamHaiweiGu"},"content":"* Flag -force overwrites records of existing students.","lastModifiedDate":"2023-03-22"},{"lineNumber":631,"author":{"gitId":"WilliamHaiweiGu"},"content":"* Nothing is changed if file does not exist or file access denied.","lastModifiedDate":"2023-03-08"},{"lineNumber":632,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":633,"author":{"gitId":"WilliamHaiweiGu"},"content":"Successful import of a file containing the example data should display this:","lastModifiedDate":"2023-04-04"},{"lineNumber":634,"author":{"gitId":"WilliamHaiweiGu"},"content":"![import result](./images/importResult.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":635,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":636,"author":{"gitId":"WilliamHaiweiGu"},"content":"#### Export data in CSV format: `export`","lastModifiedDate":"2023-03-31"},{"lineNumber":637,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":638,"author":{"gitId":"WilliamHaiweiGu"},"content":"Export data in CSV format to file.","lastModifiedDate":"2023-03-08"},{"lineNumber":639,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":640,"author":{"gitId":"WilliamHaiweiGu"},"content":"Format: `export [-force] FILE_PATH`","lastModifiedDate":"2023-03-31"},{"lineNumber":641,"author":{"gitId":"WilliamHaiweiGu"},"content":"* If file exists, export is blocked unless -force flag is used. Otherwise, create file and export.","lastModifiedDate":"2023-03-08"},{"lineNumber":642,"author":{"gitId":"WilliamHaiweiGu"},"content":"* Flag -force overwrites existing file.","lastModifiedDate":"2023-03-08"},{"lineNumber":643,"author":{"gitId":"WilliamHaiweiGu"},"content":"* Nothing is changed if file access denied.","lastModifiedDate":"2023-03-08"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":647,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":648,"author":{"gitId":"chunzkok"},"content":"## **Appendix A: Planned Enhancements**","lastModifiedDate":"2023-04-04"},{"lineNumber":649,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":650,"author":{"gitId":"chunzkok"},"content":"### 1. Allow multiple students with the same name to be added","lastModifiedDate":"2023-04-04"},{"lineNumber":651,"author":{"gitId":"chunzkok"},"content":"Currently, users are unable to add a student with the same name as another student that already exists in TAA.","lastModifiedDate":"2023-04-04"},{"lineNumber":652,"author":{"gitId":"chunzkok"},"content":"This could be troubling for tutors who have two students with the exact same name in the same class.","lastModifiedDate":"2023-04-04"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":654,"author":{"gitId":"chunzkok"},"content":"However, the current state of TAA is unable to provide sufficient information about students to distinguish between two students with the same name.","lastModifiedDate":"2023-04-04"},{"lineNumber":655,"author":{"gitId":"chunzkok"},"content":"This should be doable only after TAA also has the ability to store student photos for each student (slated for future release), which would enable users to identify students using their names and portraits.","lastModifiedDate":"2023-04-04"},{"lineNumber":656,"author":{"gitId":"chunzkok"},"content":"Therefore, we plan to implement this enhancement when TAA matures further to allow users to identify students with the same name correctly.","lastModifiedDate":"2023-04-04"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"chunzkok"},"content":"This would be done by allowing the commands `add_student` and `edit_student` to succeed when using an existing student name, albeit with a warning \"Note: A student with the same name already exists. If this is not what you intended, please undo this operation.\".","lastModifiedDate":"2023-04-04"},{"lineNumber":659,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":660,"author":{"gitId":"chunzkok"},"content":"### 2. Enhance input validation for the student name field","lastModifiedDate":"2023-04-04"},{"lineNumber":661,"author":{"gitId":"chunzkok"},"content":"Currently, students with the same name, but with different capitalisations and whitespace positions are treated as different entities by TAA.","lastModifiedDate":"2023-04-04"},{"lineNumber":662,"author":{"gitId":"chunzkok"},"content":"However, in the real world, this is unlikely the case. Such entities are likely to represent the same student, which can lead to confusion when users accidentally create multiple student entities for the same student as a result of a typo.","lastModifiedDate":"2023-04-04"},{"lineNumber":663,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":664,"author":{"gitId":"chunzkok"},"content":"Therefore, we plan to further extend the checks performed on the student name provided to the commands `add_student` and `edit_student` that treats students with the same name, but different capitalisation and/or whitespace positions to be the same student.","lastModifiedDate":"2023-04-04"},{"lineNumber":665,"author":{"gitId":"chunzkok"},"content":"Consequently, such operations will not be allowed to execute, and an error message \"A student with a similar name already exists! Did you mean [student name]?\" will be shown to the user instead.","lastModifiedDate":"2023-04-05"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":667,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":668,"author":{"gitId":"chunzkok"},"content":"## **Glossary**","lastModifiedDate":"2023-03-29"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"chunzkok"},"content":"|           Term           |                                                                               Explanation                                                                                |","lastModifiedDate":"2023-03-29"},{"lineNumber":671,"author":{"gitId":"chunzkok"},"content":"|:------------------------:|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2023-03-29"},{"lineNumber":672,"author":{"gitId":"chunzkok"},"content":"|       Desktop App        |                           A software program that runs on a computer\u0027s desktop or laptop operating system, rather than through a web browser.                            |","lastModifiedDate":"2023-03-29"},{"lineNumber":673,"author":{"gitId":"chunzkok"},"content":"|  Command Line Interface  |            A way of interacting with a computer program by typing in text commands instead of using a graphical user interface (GUI) with buttons and menus.             |","lastModifiedDate":"2023-03-29"},{"lineNumber":674,"author":{"gitId":"chunzkok"},"content":"| Graphical User Interface | A type of user interface that allows users to interact with a computer program using graphical elements such as buttons, menus, and icons instead of typing in commands. |","lastModifiedDate":"2023-03-29"},{"lineNumber":675,"author":{"gitId":"chunzkok"},"content":"|         Terminal         |                    Text-based interface used to interact with the computer\u0027s operating system. For Windows, it is usually called the Command Prompt.                     |","lastModifiedDate":"2023-03-29"},{"lineNumber":676,"author":{"gitId":"chunzkok"},"content":"|       Host Machine       |                                                    The computer that is used to run the software/program in question.                                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":677,"author":{"gitId":"chunzkok"},"content":"|        Parameter         |                                  A value that is passed in by the user. This value changes depending on what the user decides to enter.                                  |","lastModifiedDate":"2023-03-29"},{"lineNumber":678,"author":{"gitId":"TamKengHong"},"content":"|         Student          |                                  A person recorded in our app. Has an alphanumeric name and may have class list tags associated to it.                                   |","lastModifiedDate":"2023-04-04"},{"lineNumber":679,"author":{"gitId":"TamKengHong"},"content":"|        Assignment        |                      A school assignment. Has an alphanumeric name, a non-negative integer total marks, and student submissions associated with it.                      |","lastModifiedDate":"2023-04-04"},{"lineNumber":680,"author":{"gitId":"TamKengHong"},"content":"|        Submission        |                                          Linked to an assignment. Each student has a submission for every existing assignment.                                           |","lastModifiedDate":"2023-04-04"},{"lineNumber":681,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"chunzkok":385,"bojie3":64,"cyli133":38,"-":93,"WilliamHaiweiGu":43,"TamKengHong":59}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"chunzkok"},"content":"    content: \"TAA\";","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"chunzkok":1,"-":294}},{"path":"docs/diagrams/AddAlarmSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"participant \":TAA\" as TAA LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"participant \":AddAlarmCommandParser\" as AddAlarmCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"participant \"d:AddAlarmCommand\" as AddAlarmCommand LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"[-\u003e LogicManager : execute(\"add_alarm t/1 c/question 1\")","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"activate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"LogicManager -\u003e TAA : parseCommand(\"add_alarm t/1 c/question 1\")","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"activate TAA","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"create AddAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"TAA -\u003e AddAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"activate AddAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"AddAlarmCommandParser --\u003e TAA","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"deactivate AddAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"TAA -\u003e AddAlarmCommandParser : parse(\"t/1 c/question 1\")","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"activate AddAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"create AddAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"AddAlarmCommandParser -\u003e AddAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"activate AddAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"AddAlarmCommand --\u003e AddAlarmCommandParser : d","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"deactivate AddAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"AddAlarmCommandParser --\u003e TAA : d","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"deactivate AddAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"AddAlarmCommandParser -[hidden]-\u003e TAA","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"destroy AddAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"TAA --\u003e LogicManager : d","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"deactivate TAA","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"LogicManager -\u003e AddAlarmCommand : execute()","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"activate AddAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"AddAlarmCommand -\u003e Model : addAlarm(Alarm)","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"Model --\u003e AddAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"cyli133"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"AddAlarmCommand -\u003e CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"cyli133"},"content":"activate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"CommandResult --\u003e AddAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"cyli133"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"cyli133"},"content":"AddAlarmCommand --\u003e LogicManager : result","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"deactivate AddAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"cyli133"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"cyli133"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"cyli133"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"cyli133":68}},{"path":"docs/diagrams/AddAssignmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"@startuml","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"!include style.puml","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"participant \":TAA\" as TAA LOGIC_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"participant \":AddAssignmentCommandParser\" as AddAssignmentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"participant \"d:AddAssignmentCommand\" as AddAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"end box","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"end box","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"[-\u003e LogicManager : execute(\"add_asgn n/Assignment 1\")","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"activate LogicManager","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"LogicManager -\u003e TAA : parseCommand(\"add_asgn n/Assignment 1\")","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"activate TAA","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"create AddAssignmentCommandParser","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"TAA -\u003e AddAssignmentCommandParser","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"activate AddAssignmentCommandParser","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"AddAssignmentCommandParser --\u003e TAA","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"deactivate AddAssignmentCommandParser","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"TAA -\u003e AddAssignmentCommandParser : parse(\"n/Assignment 1\")","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"activate AddAssignmentCommandParser","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"create AddAssignmentCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"AddAssignmentCommandParser -\u003e AddAssignmentCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"activate AddAssignmentCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"AddAssignmentCommand --\u003e AddAssignmentCommandParser : d","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"deactivate AddAssignmentCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"AddAssignmentCommandParser --\u003e TAA : d","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"deactivate AddAssignmentCommandParser","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"AddAssignmentCommandParser -[hidden]-\u003e TAA","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"destroy AddAssignmentCommandParser","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"TAA --\u003e LogicManager : d","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"deactivate TAA","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"LogicManager -\u003e AddAssignmentCommand : execute()","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"activate AddAssignmentCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"AddAssignmentCommand -\u003e Model : updateStudent(student)","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"activate Model","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"Model --\u003e AddAssignmentCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"deactivate Model","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"create CommandResult","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"AddAssignmentCommand -\u003e CommandResult","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"activate CommandResult","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"CommandResult --\u003e AddAssignmentCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"AddAssignmentCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"deactivate AddAssignmentCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"@enduml","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"bojie3":68}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"user -[USER_COLOR]\u003e ui : \"delete_student 1\"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete_student 1\")","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(s)","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(classList)","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"chunzkok":3,"cyli133":1,"-":34}},{"path":"docs/diagrams/DeleteAlarmSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"participant \":TAA\" as TAA LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"participant \":DeleteCommandParser\" as DeleteAlarmCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"participant \"d:DeleteAlarmCommand\" as DeleteAlarmCommand LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"[-\u003e LogicManager : execute(\"delete_alarm 1\")","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"activate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"LogicManager -\u003e TAA : parseCommand(\"delete_alarm 1\")","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"activate TAA","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"create DeleteAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"TAA -\u003e DeleteAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"activate DeleteAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"DeleteAlarmCommandParser --\u003e TAA","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"deactivate DeleteAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"TAA -\u003e DeleteAlarmCommandParser : parse(\"1\")","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"activate DeleteAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"create DeleteAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"DeleteAlarmCommandParser -\u003e DeleteAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"activate DeleteAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"DeleteAlarmCommand --\u003e DeleteAlarmCommandParser : d","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"deactivate DeleteAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"DeleteAlarmCommandParser --\u003e TAA : d","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"deactivate DeleteAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"DeleteAlarmCommandParser -[hidden]-\u003e TAA","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"destroy DeleteAlarmCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"TAA --\u003e LogicManager : d","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"deactivate TAA","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"LogicManager -\u003e DeleteAlarmCommand : execute()","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"activate DeleteAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"DeleteAlarmCommand -\u003e Model : deleteAlarm(Index)","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"Model --\u003e DeleteAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"cyli133"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"DeleteAlarmCommand -\u003e CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"cyli133"},"content":"activate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"CommandResult --\u003e DeleteAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"cyli133"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"cyli133"},"content":"DeleteAlarmCommand --\u003e LogicManager : result","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"deactivate DeleteAlarmCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"cyli133"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"cyli133"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"cyli133"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"cyli133":68}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"participant \":TaaParser\" as TaaParser LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"participant \":DeleteStudentCommandParser\" as DeleteStudentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"participant \"d:DeleteStudentCommand\" as DeleteStudentCommand LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"[-\u003e LogicManager : execute(\"delete_student 1\")","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"LogicManager -\u003e TaaParser : parseCommand(\"delete_student 1\")","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"activate TaaParser","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"create DeleteStudentCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"TaaParser -\u003e DeleteStudentCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"activate DeleteStudentCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"DeleteStudentCommandParser --\u003e TaaParser","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"deactivate DeleteStudentCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"TaaParser -\u003e DeleteStudentCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"activate DeleteStudentCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"create DeleteStudentCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"DeleteStudentCommandParser -\u003e DeleteStudentCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"activate DeleteStudentCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"DeleteStudentCommand --\u003e DeleteStudentCommandParser : d","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"deactivate DeleteStudentCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"DeleteStudentCommandParser --\u003e TaaParser : d","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"deactivate DeleteStudentCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"DeleteStudentCommandParser -[hidden]-\u003e TaaParser","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"destroy DeleteStudentCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"TaaParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"deactivate TaaParser","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"LogicManager -\u003e DeleteStudentCommand : execute()","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"activate DeleteStudentCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"DeleteStudentCommand -\u003e Model : deleteStudent(1)","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"Model --\u003e DeleteStudentCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"DeleteStudentCommand -\u003e CommandResult","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"CommandResult --\u003e DeleteStudentCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"DeleteStudentCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"deactivate DeleteStudentCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"chunzkok":32,"-":37}},{"path":"docs/diagrams/InsertParticipationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"!include style.puml","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"participant \":TAA\" as TAA LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"participant \":InsertParticipationParser\" as InsertParticipationParser LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"participant \"d:InsertParticipationCommand\" as InsertParticipationCommand LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"end box","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"end box","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"[-\u003e LogicManager : execute(\"insertPP 1 w/1 pp/200\")","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"activate LogicManager","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"LogicManager -\u003e TAA : parseCommand(\"insertPP 1 w/1 pp/200\")","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"activate TAA","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"create InsertParticipationParser","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"TAA -\u003e InsertParticipationParser","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"activate InsertParticipationParser","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"InsertParticipationParser --\u003e TAA","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"deactivate InsertParticipationParser","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"TAA -\u003e InsertParticipationParser : parse(\"1 w/1 pp/200\")","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"activate InsertParticipationParser","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"create InsertParticipationCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"InsertParticipationParser -\u003e InsertParticipationCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"activate InsertParticipationCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"InsertParticipationCommand --\u003e InsertParticipationParser : d","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"deactivate InsertParticipationCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"InsertParticipationParser --\u003e TAA : d","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"deactivate InsertParticipationParser","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"InsertParticipationParser -[hidden]-\u003e TAA","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"destroy InsertParticipationParser","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"TAA --\u003e LogicManager : d","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"deactivate TAA","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"LogicManager -\u003e InsertParticipationCommand : execute()","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"activate InsertParticipationCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"InsertParticipationCommand -\u003e Model : updateStudent(student)","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"activate Model","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"Model --\u003e InsertParticipationCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"deactivate Model","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"create CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"InsertParticipationCommand -\u003e CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"activate CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"CommandResult --\u003e InsertParticipationCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"InsertParticipationCommand --\u003e LogicManager : result","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"deactivate InsertParticipationCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"bojie3":68}},{"path":"docs/diagrams/ListAlarmsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"@@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":" !include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":" box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":" participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":" participant \":TAA\" as TAA LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":" participant \"d:ListAlarmsCommand\" as ListAlarmsCommand LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":" participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":" end box","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":" box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":" participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":" end box","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":" [-\u003e LogicManager : execute(\"list_alarms\")","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":" activate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":" LogicManager -\u003e TAA : parseCommand(\"list_alarms\")","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":" activate TAA","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":" create ListAlarmsCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":" TAA -\u003e ListAlarmsCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":" activate ListAlarmsCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":" ListAlarmsCommand --\u003e TAA : d","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":" deactivate ListAlarmsCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":" TAA --\u003e LogicManager : d","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":" deactivate TAA","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":" LogicManager -\u003e ListAlarmsCommand : execute()","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":" activate ListAlarmsCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":" ListAlarmsCommand -\u003e Model : listAlarms()","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":" activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":" Model --\u003e ListAlarmsCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":" deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":" create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":" ListAlarmsCommand -\u003e CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":" activate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":" CommandResult --\u003e ListAlarmsCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":" deactivate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":" ListAlarmsCommand --\u003e LogicManager : result","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":" deactivate ListAlarmsCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":" [\u003c--LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":" deactivate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":" @enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"cyli133":52}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"Class TaaParser","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"LogicManager -right-\u003e\"1\" TaaParser","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"TaaParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"chunzkok":3,"-":43}},{"path":"docs/diagrams/MarkAttendanceSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"participant \":TAA\" as TAA LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"participant \":MarkAttendanceParser\" as MarkAttendanceParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"participant \"d:MarkAttendanceCommand\" as MarkAttendanceCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"[-\u003e LogicManager : execute(\"markAtd 1 w/1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"LogicManager -\u003e TAA : parseCommand(\"markAtd 1 w/1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"activate TAA","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"create MarkAttendanceParser","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"TAA -\u003e MarkAttendanceParser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"activate MarkAttendanceParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"MarkAttendanceParser --\u003e TAA","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"deactivate MarkAttendanceParser","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"TAA -\u003e MarkAttendanceParser : parse(\"1 w/1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"activate MarkAttendanceParser","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"create MarkAttendanceCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"MarkAttendanceParser -\u003e MarkAttendanceCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"activate MarkAttendanceCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"MarkAttendanceCommand --\u003e MarkAttendanceParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"deactivate MarkAttendanceCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"MarkAttendanceParser --\u003e TAA : d","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"deactivate MarkAttendanceParser","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"MarkAttendanceParser -[hidden]-\u003e TAA","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"destroy MarkAttendanceParser","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"TAA --\u003e LogicManager : d","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"deactivate TAA","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"LogicManager -\u003e MarkAttendanceCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"activate MarkAttendanceCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"MarkAttendanceCommand -\u003e Model : updateStudent(student)","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"Model --\u003e MarkAttendanceCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"MarkAttendanceCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"CommandResult --\u003e MarkAttendanceCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"MarkAttendanceCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"deactivate MarkAttendanceCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"bojie3":68}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"Class UniqueStudentList","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"Class Student","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"Class Attendance","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"Class Submissions","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"AddressBook *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"UniqueStudentList --\u003e \"~* all\" Student","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"Student *--\u003e Name","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"Student *--\u003e Attendance","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"Student *--\u003e Submissions","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"Student *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"Name -[hidden]right-\u003e Attendance","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"Attendance -[hidden]right-\u003e Submissions","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"Submissions -[hidden]right-\u003e Tag","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"ModelManager --\u003e\"~* filtered\" Student","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"chunzkok":14,"-":33}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"Class TaaParser","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"HiddenOutside ..\u003e TaaParser","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"TaaParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"TaaParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"chunzkok":4,"-":34}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"Class StudentListPanel","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"Class StudentCard","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"Student ..\u003e Model","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"chunzkok":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"ecp -\u003e ec ++: index, editStudentDescriptor","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"chunzkok":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"title: Teaching Assistant Assistant","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T14-4/tp/actions)","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"[![codecov](https://codecov.io/gh/nus-cs2103-AY2223S2/tp/branch/master/graph/badge.svg?token\u003dSNV76O467D)](https://codecov.io/gh/nus-cs2103-AY2223S2/tp)","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"**Teaching Assistant Assistant (TAA) is a desktop app for managing teaching assistant activities, optimized for use via a Command Line Interface (CLI) while still retaining the benefits of a Graphical User Interface (GUI).**","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"With TAA, you can easily track student attendance and grades using just a keyboard, eliminating the need for multiple clicks.","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"You can even view grade statistics without the use of a dedicated data analysis application!","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"* If you are interested in using TAA, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"* If you are interested about developing TAA, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [JFreeChart](https://github.com/jfree/jfreechart)","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"chunzkok":11,"-":12}},{"path":"docs/team/bojie3.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"title: Xu BoJie\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"## Project: Teaching Assistant Assistant","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"Teaching Assistant Assistant (TAA) is a desktop app for managing teaching assistant","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"activities, optimized for use via a Command Line Interface (CLI) while still having","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"the benefits of a Graphical User Interface (GUI). If you can type fast, TAA can get","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"your teaching assistant tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"- **Code Contributed**: [RepoSense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbojie3\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"- **New Features**","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"  - **Attendance and Participation**","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    - **What it does**: Allows users to include attendance and participation points for their students.","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"      - This feature allows user to easily mark, unmark attendance and allocate participation points","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"      - User can view the overall attendance and average participation points easily in the GUI","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"- **Enhancements**","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"  - **Updated help command UI to be more comprehensive** ([PR #140](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/140))","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    - Included a summary of TAA features in the help command window","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"    - Updated the URL from AB3 to TAA\u0027s userGuide","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    - Changed UI aspects of the help window","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"  - **Modified storage to store student\u0027s Attendance and Participation info** ([PR #85](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/130))","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    - Updated the JsonAdaptedStudent to include student information such Attendance and participation","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"    - Fixed failing test cases due to the modification of student class","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"- **Bug Fixes**","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"  - Fixed bug where invalid attendace/participation value in JSON causes error in GUI startup ([PR #213](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/213))","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"  - Fixed bug where invalid user input casues error ([PR #213](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/213))","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"  - Fixed bug where user cannot add valid participation points ([PR #213](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/213))","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"- **Documentation**","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"  - **User Guide**","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"    - Updated feature explanations for the following commands","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"      ([PR #197](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/197)):","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"      - `markAtd`","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"      - `unmarkAtd`","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"      - `listAtd`","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"      - `insertPP`","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"      - `listPP`","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"  - **Developer Guide**","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"    - Added MSS and puml diagrams for the following commands","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"      - `markAtd/unmarkAtd` ([PR #117](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/117))","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"      - `insertPP`","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"- **Team-based Tasks**","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"  - Helped with discussions on project ideas and core features ","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"bojie3":48}},{"path":"docs/team/chunzkok.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"layout: page","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"title: Kok Chun Zhi\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"## Project: Teaching Assistant Assistant","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"Teaching Assistant Assistant (TAA) is a desktop app for managing teaching assistant","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"activities, optimized for use via a Command Line Interface (CLI) while still having","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"the benefits of a Graphical User Interface (GUI). If you can type fast, TAA can get","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"your teaching assistant tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"- **Code Contributed**: [RepoSense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dchunzkok\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"- **New Features**","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"  - **Class Statistics** ([PR #142](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/142))","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    - **What it does**: Allows users to view statistics regarding the active class list\u0027s attendance and grades.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"      - The attendance chart displays the number of students that have been marked as \u0027present\u0027 for each of the 12 weeks.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"      - The grades chart displays a normal distribution generated using the mean and standard deviation of the scores of the students in the class, for a specific assignment.","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    - Imported and integrated library `JFreeChart` to help with chart drawing.","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    - Created helper methods to aggregate across different systems (i.e. `Assignment` and `Attendance` systems) to generate the relevant statistics.","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"- **Enhancements**","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"  - **Refactored Person class to the Student class** ([PR #67](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/67))","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    - Replaced all usages of `Person` and its related classes from original AB-3 code to use `Student` instead","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    - Removed redundant fields in Person (`Address`, `Phone`, `Email`)","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    - Update JavaFX view for `StudentCard` (previously `PersonCard`) to follow mockup of the product","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    - Tweaked all failing tests to pass with the new `Student` class (e.g. replacing reference .json files and expected outputs)","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"  - **Modified `add` command into `add_student`** ([PR #85](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/85))","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    - Changed the name to avoid clashes with other systems","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    - Removed unnecessary parameters (address, phone, email) and added new ones (class tags)","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"  - **Modified `edit` command into `edit_student`** ([PR #87](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/87))","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    - Changed the name to avoid clashes with other systems","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    - Removed unnecessary parameters (address, phone, email) and added new ones (class tags)","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"  - **Modified `delete` command into `delete_student`** ([PR #87](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/87))","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"  - **Integrated `Assignment` commands with the GUI to update relevant fields after they are executed** ([PR #101](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/101))","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"    - Involves commands `addAsgn`, `grade`, `ungrade`, `deleteAsgn`","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"  - **Refactored code to weed out traces of AB-3** ([PR #194](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/194))","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"- **Bug Fixes**","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"  - Fixed bug where `Attendance` and `Assignment` systems were not in migrated `taa` package ([PR #71](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/71))","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"  - Fixed bug where `add_student` does not add the student into the Class Lists specified by their class tags ([PR #99](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/99))","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"  - Fixed bug where `add_student` throws an `InvocationTargetException` in certain execution paths ([PR #108](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/108))","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"  - Fixed bug where `delete_student` throws an `InvocationTargetException` when executed ([PR #195](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/195))","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"- **Documentation**","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"  - **User Guide**","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"    - Fixed Table of Contents so that it builds automatically ([PR #132](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/132))","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"    - Added purpose and target audience of User Guide ([PR #132](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/132))","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"    - Added instructions on how to use the User Guide (Navigation, special formats) ([PR #132](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/132))","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"    - Added GUI section with labelled GUI with a table explaining the various components of our GUI ([PR #132](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/132))","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"    - Added explanation of command syntax used in command formats under the \u0027Features\u0027 section ([PR #132](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/132))","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"    - Added Glossary ([PR #132](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/132))","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"    - Added feature explanations for `add_student`, `edit_student`, `delete_student`, `class_statistics`","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"  - **Developer Guide**","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"    - Added value proposition and initial set of user stories ([PR #32](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/32), [PR #35](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/35))","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"    - Added use case for `add_student` command ([PR #119](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/119))","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"- **Team-based Tasks**","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"  - Enabled assertions in project Gradle file ([PR #106](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/106))","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"  - Created releases for [v1.2](https://github.com/AY2223S2-CS2103T-T14-4/tp/releases/tag/v1.2), [v1.2.1](https://github.com/AY2223S2-CS2103T-T14-4/tp/releases/tag/v1.2), [v1.3](https://github.com/AY2223S2-CS2103T-T14-4/tp/releases/tag/v1.3)","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"  - Created and closed milestones [v1.1](https://github.com/AY2223S2-CS2103T-T14-4/tp/milestone/1), [v1.2](https://github.com/AY2223S2-CS2103T-T14-4/tp/milestone/2), [v1.2b](https://github.com/AY2223S2-CS2103T-T14-4/tp/milestone/3), [v1.3](https://github.com/AY2223S2-CS2103T-T14-4/tp/milestone/4), [v1.4](https://github.com/AY2223S2-CS2103T-T14-4/tp/milestone/5)","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"chunzkok":60}},{"path":"docs/team/cyli133.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"---","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"layout: page","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"title: Li Chengyue\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"---","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"## Project: Teaching Assistant Assistant","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"Teaching Assistant Assistant (TAA) is a desktop app for managing teaching assistant","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"activities, optimized for use via a Command Line Interface (CLI) while still having","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"the benefits of a Graphical User Interface (GUI). If you can type fast, TAA can get","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"your teaching assistant tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"- **Code Contributed**: [RepoSense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dcyli133\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"- **New Features**","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    - **Alarm Scheduling** ([PR #137](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/137))","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        - **What it does**:","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"          - Allows users to schedule alarms that will ring at the scheduled time.","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"          - This feature greatly helps the TAs to manage their time during class, which is an existing problem faced","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"            by many TAs.","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"          - Users can create alarms with specified time and comment, upon time-up the alarm will sound off,","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"            with a notification window popping up.","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"          - Users can delete scheduled alarm as well. Upon deletion, the alarm deleted will no longer ring.","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"- **Enhancements**","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"    - **Refactored AddressBook Class to ClassList class** ([PR #75](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/75))","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"        - Implemented unique class lists.","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"        - Adapted the Student class to become the Tutor class.","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"        - Made the Student class compatible with the Tutor class and the ClassList class.","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"        - Tweaked all failing tests to pass with the new `Tutor` `ClassList` classes.","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"    - **Allowed multiple ClassLists to be supported** ([PR #94](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/94))","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"        - Implemented the create class list command.","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"        - Modified the default storage loader to correct load demo data into the class list.","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"        - Allowed users to list students in particular class using the `list` command.","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"        - Implemented helper functions to be used for adding/deleting students from a specified class.","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"        - Tweaked the UI to load students from specified class.","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"- **Bug Fixes**","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"    - Fixed bug where `add_alarm` does not report errors properly for negative or non-numeric input.","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"      ([PR #212](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/212))","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"    - Fixed bug where  `create_class` does not behave as expected when optional student names is added.","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"      ([PR #212](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/212))","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"    - Fixed bug where `add_alarm`, no error thrown when parameters are empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"      ([PR #212](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/212))","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"- **Documentation**","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"    - **User Guide**","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"        - Added feature explanations for the following commands","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"          ([PR #60](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/60)):","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"          - `list`","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"          - `find`","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"          - `add_alarm`","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"          - `delete_alarm`","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"          - `list_alarms`","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"    - **Developer Guide**","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"        - Added MSS for the following commands","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"cyli133"},"content":"          ([PR #118](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/118)):","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"cyli133"},"content":"            - `list`","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"            - `find`","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"            - `create_class`","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"cyli133"},"content":"        - Added sequence diagrams and MSS for the following commands:","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"cyli133"},"content":"          ([PR #218](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/218)):","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"            - `add_alarm`","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"cyli133"},"content":"            - `delete_alarm`","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"cyli133"},"content":"            - `list_alarms`","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"cyli133"},"content":"- **Team-based Tasks**","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"  - Suggested the idea of Teaching Assistant Assistant","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"cyli133"},"content":"  - Suggested the features of csv import and alarms, apart from the other main features.","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"cyli133":65}},{"path":"docs/team/tamkenghong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"title: Tam Keng Hong\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"### Overview","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"Draft Draft.","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"- Code contributed: Created classes and methods for: Assignment, AssignmentList, Submissions, and","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"everything related to them (Parser, command, testcases and so on.)","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"- Enhancements implemented: For assignments: add_asgn, delete_asgn, grade, ungrade, list_asgn.","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"- Contributions to the UG: Everything related to assignments and submissions.","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"- Contributions to the DG: Everything related to assignments and submissions.","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"- Contributions to team-based tasks: (TODO: Draft)","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"- Review/mentoring contributions: Links to PRs reviewed, instances of helping team members in other ways. (TODO: Draft)","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"- Contributions beyond the project team: Helped with design (Logo + first draft screenshot).","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"TamKengHong":19}},{"path":"docs/team/williamhaiweigu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"#Overview:","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"Teaching Assistant Assistant (TAA) is a desktop app for managing teaching assistant","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"activities, optimized for use via a Command Line Interface (CLI) while still having","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"the benefits of a Graphical User Interface (GUI). If you can type fast, TAA can get","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"your teaching assistant tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"#Summary of Contributions","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"##Code contributed:","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"I write concise code. Details are in [tp dash board](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dwilliamhaiweigu\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dWilliamHaiweiGu\u0026tabRepo\u003dAY2223S2-CS2103T-T14-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse).","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"##Enhancements implemented:","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"Designed and implemented classes and methods to support import and export of application data in CSV format.","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"Implemented error handling at various occurrences to deal with any user input.","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"Implemented command history navigation functionality.","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"##Contributions to the UG: TBA","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"Authored the CSV section. The CSV format and command instructions.","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"Alert the team of a mistakenly deleted section.","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"##Contributions to the DG: TBA","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"Authored the CSV section. The CSV format and error handling details.","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"##Contributions to team-based tasks: TBA","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"Labeled PED issues.","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"##Review/mentoring contributions: TBA","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"Reported bugs and reviewed respective changes: [#108](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/108), [#203](https://github.com/AY2223S2-CS2103T-T14-4/tp/pull/203)","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"##Contributions beyond the project team: TBA","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"Reported [7 issues](https://github.com/WilliamHaiweiGu/ped/issues) to [W16](https://github.com/AY2223S2-CS2103-W16-3/tp).","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"WilliamHaiweiGu":24}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"import model.taa.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":" * Changes the remark of an existing student in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"            + \": Edits the remark of the student identified \"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"import static util.commons.taa.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"chunzkok"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"chunzkok"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of student data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the student’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a student.","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"chunzkok"},"content":"Create a new `Remark` in `seedu.address.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"chunzkok"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each student.","lastModifiedDate":"2023-03-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"chunzkok"},"content":"Simply add the following to [`ui.taa.StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"chunzkok"},"content":"public PersonCard(Person student, int displayedIndex) {","lastModifiedDate":"2023-03-09"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"chunzkok"},"content":"    remark.setText(student.getRemark().value);","lastModifiedDate":"2023-03-09"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"chunzkok"},"content":"        Person studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":347,"author":{"gitId":"chunzkok"},"content":"        Person editedStudent \u003d new Person(","lastModifiedDate":"2023-03-09"},{"lineNumber":348,"author":{"gitId":"chunzkok"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2023-03-09"},{"lineNumber":349,"author":{"gitId":"chunzkok"},"content":"                studentToEdit.getAddress(), remark, studentToEdit.getTags());","lastModifiedDate":"2023-03-09"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"chunzkok"},"content":"        model.setPerson(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"chunzkok"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2023-03-09"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"chunzkok"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2023-03-09"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"chunzkok"},"content":"    private String generateSuccessMessage(Person studentToEdit) {","lastModifiedDate":"2023-03-09"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"chunzkok"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2023-03-09"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"chunzkok":22,"-":379}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"  \"students\": [ {","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chunzkok":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `logic.taa.Logic`.","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"A quick look at the `logic.taa.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"chunzkok"},"content":"       Person studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"chunzkok"},"content":"       Person editedStudent \u003d createEditedPerson(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"chunzkok"},"content":"       if (!studentToEdit.isSamePerson(editedStudent) \u0026\u0026 model.hasPerson(editedStudent)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"chunzkok"},"content":"       model.setPerson(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"chunzkok"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedStudent));","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"chunzkok"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the student data.","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"chunzkok"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ students.\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"chunzkok"},"content":"     FYI, The \u0027filtered list\u0027 is the list of students resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the students so that the user can see the edited student along with all other students. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"chunzkok"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of students is being tracked.","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"chunzkok"},"content":"        students.addAll(","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chunzkok":12,"-":289}},{"path":"src/main/java/taa/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.FileUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"chunzkok":3,"-":61}},{"path":"src/main/java/taa/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"chunzkok":1,"-":24}},{"path":"src/main/java/taa/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Config;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Version;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.SampleDataUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.StringUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.logic.Logic;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.logic.LogicManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"import taa.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"import taa.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"import taa.storage.JsonTaaStorage;","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"import taa.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"import taa.storage.Storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"import taa.storage.StorageManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"import taa.storage.TaaStorage;","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"import taa.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"import taa.ui.Ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"import taa.ui.UiManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ClassList ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"        TaaStorage taaStorage \u003d new JsonTaaStorage(userPrefs.getTaaDataFilePath());","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"        storage \u003d new StorageManager(taaStorage, userPrefsStorage);","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"        logger.info(\"Starting ClassList \" + MainApp.VERSION);","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void stop() {","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"WilliamHaiweiGu"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s student list and {@code userPrefs}. \u003cbr\u003e The","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * data from the sample student list will be used instead if {@code storage}\u0027s student list is not found, or an","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * empty student list will be used instead if errors occur when reading {@code storage}\u0027s student list.","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Optional\u003cTaaData\u003e taaDataOptional;","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"WilliamHaiweiGu"},"content":"        TaaData initialData;","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"WilliamHaiweiGu"},"content":"            taaDataOptional \u003d storage.readTaaData();","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (!taaDataOptional.isPresent()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"cyli133"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ClassList\");","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"WilliamHaiweiGu"},"content":"            initialData \u003d taaDataOptional.orElseGet(SampleDataUtil::getSampleTaaData);","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"cyli133"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ClassList\");","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"WilliamHaiweiGu"},"content":"            initialData \u003d new TaaData();","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":104,"author":{"gitId":"cyli133"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ClassList\");","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"WilliamHaiweiGu"},"content":"            initialData \u003d new TaaData();","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e The default file path {@code","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Config#DEFAULT_CONFIG_FILE} will be used instead if {@code configFilePath} is null.","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path, or a new {@code UserPrefs}","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * with default configuration if errors occur when reading from the file.","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"cyli133"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ClassList\");","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":23,"cyli133":5,"-":120,"WilliamHaiweiGu":32}},{"path":"src/main/java/taa/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.core;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"        sb.append(\"Current log level : \").append(logLevel);","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"        sb.append(\"\\nPreference file Location : \").append(userPrefsFilePath);","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":3,"-":60}},{"path":"src/main/java/taa/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.core;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"        sb.append(\"Width : \").append(windowWidth).append(\"\\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"        sb.append(\"Height : \").append(windowHeight).append(\"\\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"        sb.append(\"Position : \").append(windowCoordinates);","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":4,"-":75}},{"path":"src/main/java/taa/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.core;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":1,"-":111}},{"path":"src/main/java/taa/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.core;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private Messages() {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":6,"-":10}},{"path":"src/main/java/taa/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.core;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":1,"-":115}},{"path":"src/main/java/taa/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.core.index;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    private final int zeroBasedIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"chunzkok":2,"-":52}},{"path":"src/main/java/taa/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.exceptions;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":1,"-":10}},{"path":"src/main/java/taa/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.exceptions;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":1,"-":20}},{"path":"src/main/java/taa/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.Closeable;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.MainApp;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Closes the closable if it is non-null to save resource.*/","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static void closeIfClosable(Closeable c) {","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (c !\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"            try {","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"                c.close();","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"            } catch (IOException ignored) {","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"                // Can\u0027t help if closing failed.","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chunzkok":2,"-":40,"WilliamHaiweiGu":14}},{"path":"src/main/java/taa/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":1,"-":34}},{"path":"src/main/java/taa/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Config;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chunzkok":3,"-":19}},{"path":"src/main/java/taa/commons/util/CsvUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import org.apache.commons.csv.CSVFormat;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Specifies the CSV file format used by this program.","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class CsvUtil {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String FILE_PREFIX \u003d \".csv\";","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String KW_NAME \u003d \"name\";","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    public static final String KW_ATTENDANCE \u003d \"attendance\";","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    public static final String KW_PP \u003d \"pp\";","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String KW_TAGS \u003d \"tags\";","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String KW_SUBMISSIONS \u003d \"submissions\";","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static final CSVFormat.Builder FMT \u003d CSVFormat.Builder.create(CSVFormat.DEFAULT)","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"            .setHeader(KW_NAME, KW_ATTENDANCE, KW_PP, KW_SUBMISSIONS, KW_TAGS);","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final CSVFormat IN_FMT \u003d FMT.build();","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final CSVFormat OUT_FMT \u003d FMT.setSkipHeaderRecord(true).build();","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chunzkok":1,"bojie3":1,"WilliamHaiweiGu":17}},{"path":"src/main/java/taa/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_FILE_IS_DIR \u003d \"The specified file path is a directory.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_FILE_ACCESS_DENIED \u003d \"Access to the specified file is denied by system.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_FILE_IO_EXCEPTION \u003d \"An IOException occurred while reading specified file.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":1,"-":81,"WilliamHaiweiGu":3}},{"path":"src/main/java/taa/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    private static final ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":4,"-":138}},{"path":"src/main/java/taa/commons/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"import taa.model.Tutor;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"import taa.model.UniqueClassLists;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.Assignment;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":" * Contains utility methods for populating {@code ClassList} with sample data.","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        return new Student[]{","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"            new Student(new Name(\"Alex Yeoh\"), Attendance.ORIGINAL_ATD, Attendance.ORIGINAL_PP, new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"                    getTagSet(\"Tut_T01\")),","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"            new Student(new Name(\"Bernice Yu\"), Attendance.ORIGINAL_ATD, Attendance.ORIGINAL_PP, new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"                    getTagSet(\"Tut_T01\", \"Lab_L01\")),","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), Attendance.ORIGINAL_ATD, Attendance.ORIGINAL_PP,","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    new ArrayList\u003c\u003e(), getTagSet(\"Tut_T02\")),","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"            new Student(new Name(\"David Li\"), Attendance.ORIGINAL_ATD, Attendance.ORIGINAL_PP, new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"                    getTagSet(\"Lab_L02\")),","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), Attendance.ORIGINAL_ATD, Attendance.ORIGINAL_PP, new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"                    getTagSet(\"Rec_R03\")),","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), Attendance.ORIGINAL_ATD, Attendance.ORIGINAL_PP,","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    new ArrayList\u003c\u003e(), getTagSet(\"Lab_L12\"))","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static TaaData getSampleTaaData() {","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"        ClassList sampleAb \u003d new ClassList(\"T01\");","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"        UniqueClassLists classLists \u003d new UniqueClassLists();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"        classLists.add(sampleAb);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"        Tutor tutor \u003d new Tutor(new Name(\"James\"), new HashSet\u003c\u003e(), classLists);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new TaaData(tutor, new Assignment[0]);","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"chunzkok":11,"cyli133":9,"-":24,"WilliamHaiweiGu":14,"TamKengHong":1}},{"path":"src/main/java/taa/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return New stiring equal to {@code s} with all adjacent space characters compressed into one whitespace, where","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *          space is defined as [ \\t\\r\\n\\f].","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * */","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String rmAdjSpace(String s) {","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return s.replaceAll(\"[ \\t\\r\\n\\f]+\", \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":2,"-":66,"WilliamHaiweiGu":8}},{"path":"src/main/java/taa/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.CommandResult;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"     * Returns the ClassList.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"     * @see Model#getTaaData()","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"    TaaData getTaaData();","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"     * Returns the user prefs\u0027 TAA data file path.","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"    Path getTaaDataFilePath();","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** @return previously executed command or null if has none */","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"    String getPrevCmd();","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** @return next executed command or null if has none */","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"    String getNextCmd();","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chunzkok":11,"cyli133":1,"-":37,"WilliamHaiweiGu":9}},{"path":"src/main/java/taa/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.Command;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.CommandResult;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.TaaParser;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.storage.Storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    private final TaaParser taaParser;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final ArrayList\u003cString\u003e cmdHistory;","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private int curCmdIdx;","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"        taaParser \u003d new TaaParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"        cmdHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"        curCmdIdx \u003d 0;","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"        cmdHistory.add(commandText);","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"        curCmdIdx \u003d cmdHistory.size();","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"        Command command \u003d taaParser.parseCommand(commandText);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"            storage.saveTaaData(model.getTaaData());","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public TaaData getTaaData() {","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"        return model.getTaaData();","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"    public Path getTaaDataFilePath() {","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"        return model.getTaaDataFilePath();","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String getPrevCmd() {","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return curCmdIdx \u003c\u003d 0 ? null : cmdHistory.get(--curCmdIdx);","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String getNextCmd() {","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return curCmdIdx \u003e\u003d cmdHistory.size() - 1 ? null : cmdHistory.get(++curCmdIdx);","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chunzkok":20,"-":59,"WilliamHaiweiGu":20}},{"path":"src/main/java/taa/logic/commands/AddAlarmCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import taa.model.alarm.Alarm;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":" * Defines the add alarm command","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"public class AddAlarmCommand extends Command {","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    public static final String MESSAGE_ALARM_ACKNOWLEDGEMENT \u003d \"Added a new alarm!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    public static final String COMMAND_WORD \u003d \"add_alarm\";","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"    public static final String MESSAGE_USAGE \u003d \"Format: add_alarm t/{time} c/{comment}\";","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    private final Alarm alarm;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"    public AddAlarmCommand(Alarm alarm) {","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"        this.alarm \u003d alarm;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"        model.addAlarm(alarm);","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"        return new CommandResult(MESSAGE_ALARM_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"        if (o instanceof AddAlarmCommand) {","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"            return ((AddAlarmCommand) o).alarm.equals(this.alarm);","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"        } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"            return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"cyli133":39}},{"path":"src/main/java/taa/logic/commands/AddAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":" * Adds a new assignment of {assignmentName} into AssignmentList.  .","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"public class AddAssignmentCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"    public static final String COMMAND_WORD \u003d \"add_asgn\";","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Assignment %s with %s marks added.\";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Format: asgn_add n/{name} (optional: m/{marks}) \"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"            + \"(optional: cl/{class_list}\";","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"    private final String toAdd;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"    private final int totalMarks;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"     * Constructor for our command","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"     * @param assignmentName","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"     * @param totalMarks","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"    public AddAssignmentCommand(String assignmentName, int totalMarks) {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"        requireNonNull(assignmentName);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"        toAdd \u003d assignmentName;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"        this.totalMarks \u003d totalMarks;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"            model.addAssignment(toAdd, totalMarks);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        } catch (DuplicateAssignmentException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"TamKengHong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd, totalMarks));","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"chunzkok":6,"TamKengHong":38}},{"path":"src/main/java/taa/logic/commands/AddStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":" * Adds a student to the student list.","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"public class AddStudentCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    public static final String COMMAND_WORD \u003d \"add_student\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the class list. \"","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"            + \"[\" + PREFIX_CLASS_TAG + \"CLASS_NAME]...\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"            + PREFIX_CLASS_TAG + \"Tutorial_T01 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"            + PREFIX_CLASS_TAG + \"Lab_L01\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the class list.\";","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    private final Student toAdd;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"     * Creates an AddStudentCommand to add the specified {@code Student}","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    public AddStudentCommand(Student student) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        toAdd \u003d student;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"TamKengHong"},"content":"        model.addStudentAssignment(toAdd);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"                || (other instanceof AddStudentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 toAdd.equals(((AddStudentCommand) other).toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":25,"-":33,"TamKengHong":1}},{"path":"src/main/java/taa/logic/commands/ClassStatisticsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_ASSIGNMENT_NAME;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_STAT_TYPE;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.enums.ChartType;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.NoGradeVarianceException;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.NoSubmissionsFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":" * Displays the statistics for the active class list.","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"public class ClassStatisticsCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    public static final String COMMAND_WORD \u003d \"class_stats\";","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Examples: \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"            + \"- \" + COMMAND_WORD + \" \" + PREFIX_STAT_TYPE + \"attendance\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"            + \"- \" + COMMAND_WORD + \" \" + PREFIX_STAT_TYPE + \"grades \" + PREFIX_ASSIGNMENT_NAME + \"Homework 1\\n\";","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    public static final String SAVE_IMAGE_HINT \u003d \"Tip: Want to save the chart? \\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"            + \"Right click on it, select \u0027Save As\u0027 and click on \u0027PNG\u0027!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displayed statistics for the %1$s of the active class %2$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays statistics for the active class.\\n\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"            + \"Parameters: \" + PREFIX_STAT_TYPE + \"FIELD [\" + PREFIX_ASSIGNMENT_NAME + \"ASSIGNMENT_NAME]\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"            + \"where FIELD is either \u0027\"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"            + ChartType.CLASS_ATTENDANCE.toString().toLowerCase() + \"\u0027 or \u0027\"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"            + ChartType.CLASS_GRADES.toString().toLowerCase() + \"\u0027. \\n\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"            + EXAMPLE_USAGE;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_EMPTY_CLASSLIST \u003d \"The class list cannot be empty!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_UNKNOWN_FIELD \u003d \"The FIELD parameter passed in is not recognised. \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"            + \"Please enter only either \u0027attendance\u0027 or \u0027grades\u0027 for this parameter.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"            + EXAMPLE_USAGE;","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_MISSING_ASSIGNMENT_NAME \u003d \"For grade statistics, the parameter ASSIGNMENT_NAME\"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"            + \" is compulsory. \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"            + \"Please include the ASSIGNMENT_NAME of the assignment you wish to analyse.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"            + EXAMPLE_USAGE;","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_ASSIGNMENT_NOT_FOUND \u003d \"The assignment name you have entered does not exist.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"            + \"Please check that the assignment with the specified name exists for this active class list.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"            + EXAMPLE_USAGE;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"    private ChartType field;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"    private String assignmentName;","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"     * Handles the case where no assignment name is passed in.","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"    public ClassStatisticsCommand(ChartType field) {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"        this.field \u003d field;","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"     * Handles the case where an assignment name is passed in.","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"    public ClassStatisticsCommand(ChartType field, String assignmentName) {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"        this.field \u003d field;","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(this.field);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        if (model.getClassListSize() \u003d\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(MESSAGE_EMPTY_CLASSLIST);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"        if (this.field \u003d\u003d ChartType.CLASS_GRADES","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 !model.hasAssignment(this.assignmentName)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(MESSAGE_ASSIGNMENT_NOT_FOUND);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        CommandResult result;","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"        if (this.field \u003d\u003d ChartType.CLASS_ATTENDANCE) {","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"            return displayAttendanceChart(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"        } else if (this.field \u003d\u003d ChartType.CLASS_GRADES) {","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"            return displayGradeChart(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_FIELD);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"    private CommandResult displayAttendanceChart(Model model)","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"            model.displayChart(this.field);","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"        } catch (AssignmentNotFoundException | NoSubmissionsFoundException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(\"Could not display attendance distribution: \\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"                    + e.getMessage());","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"        } catch (NoGradeVarianceException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"            // should not ever reach this, attendance distribution will not require grade variance","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"            assert false;","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, \"attendance\", \"\")","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"                + \"\\n\\n\" + SAVE_IMAGE_HINT);","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"chunzkok"},"content":"    private CommandResult displayGradeChart(Model model)","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"            model.displayChart(this.field, this.assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"        } catch (AssignmentNotFoundException | NoSubmissionsFoundException | NoGradeVarianceException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(\"Could not display grade distribution: \\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"                    + e.getMessage());","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"                MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"                \"grades\",","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"chunzkok"},"content":"                \"(\" + this.assignmentName + \")\")","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"                + \"\\n\\n\" + SAVE_IMAGE_HINT);","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"chunzkok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"chunzkok"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"chunzkok"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"        if (other instanceof ClassStatisticsCommand) { // instanceof handles null values","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"chunzkok"},"content":"            ClassStatisticsCommand otherCommand \u003d (ClassStatisticsCommand) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"chunzkok"},"content":"            return this.field \u003d\u003d otherCommand.field","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"chunzkok"},"content":"                    \u0026\u0026 this.assignmentName.equals(otherCommand.assignmentName);","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"chunzkok"},"content":"        return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"chunzkok":135,"TamKengHong":3}},{"path":"src/main/java/taa/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.AssignmentList;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" * Clears the entire class list.","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All students have been cleared!\";","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"        model.setTaaData(new TaaData(new ClassList(\"no name\"), AssignmentList.INSTANCE.getAssignments()));","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":4,"cyli133":1,"-":17,"WilliamHaiweiGu":3}},{"path":"src/main/java/taa/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":3,"-":17}},{"path":"src/main/java/taa/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    /** Show set a timer for alarm for the user */","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    private final boolean isAlarm;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean showAlarm) {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"        this.isAlarm \u003d showAlarm;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"    public boolean isAlarm() {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"        return isAlarm;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":1,"cyli133":10,"-":68}},{"path":"src/main/java/taa/logic/commands/CreateClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" * Adds a student to the class list.","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"public class CreateClassCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    public static final String COMMAND_WORD \u003d \"create_class\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a new class \"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"            + \"[\" + PREFIX_CLASS_TAG + \"CLASS_NAME]...\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"            + PREFIX_CLASS_TAG + \"T01 \";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New class added: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This class already exists\";","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"    private final ClassList toAdd;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"     * Creates an AddStudentCommand to add the specified {@code Student}","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"    public CreateClassCommand(ClassList classList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"        requireNonNull(classList);","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"        toAdd \u003d classList;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"        if (model.hasClassList(toAdd)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"        model.addClassList(toAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"                || (other instanceof CreateClassCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"                \u0026\u0026 toAdd.equals(((CreateClassCommand) other).toAdd));","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"chunzkok":1,"cyli133":53}},{"path":"src/main/java/taa/logic/commands/CsvCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.File;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.FileUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"/** The elements shared by import and export command.*/","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"public abstract class CsvCommand extends Command {","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"    final File f;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    final boolean isNotForced;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Create import command by passing a file. Nothing is checked. */","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public CsvCommand(String f, boolean isForced) {","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"        requireNonNull(f);","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.f \u003d new File(f);","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.isNotForced \u003d !isForced;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"    void throwIoExceptionAsCmdException() throws CommandException {","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"        throw new CommandException(FileUtil.MSG_FILE_IO_EXCEPTION);","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"WilliamHaiweiGu":24}},{"path":"src/main/java/taa/logic/commands/DeleteAlarmCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import taa.model.alarm.AlarmList;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":" * Deletes an alarm identified using it\u0027s displayed index.","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"public class DeleteAlarmCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    public static final String COMMAND_WORD \u003d \"delete_alarm\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"            + \": Deletes the alarm identified by the index number used in the displayed alarm list.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"    public static final String MESSAGE_DELETE_ALARM_SUCCESS \u003d \"Successfully deleted the alarm\";","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"    private final int targetIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"     * Construct a DeleteAlarmCommand instance with the specified target index","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"     * @param targetIndex the target index to delete","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"    public DeleteAlarmCommand(int targetIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"        if (targetIndex \u003e AlarmList.getAlarmCount()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"            throw new CommandException(\"Alarm not found\");","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"        model.deleteAlarm(this.targetIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"        return new CommandResult(MESSAGE_DELETE_ALARM_SUCCESS);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"        if (o instanceof DeleteAlarmCommand) {","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"            return ((DeleteAlarmCommand) o).targetIndex \u003d\u003d this.targetIndex;","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"        } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"            return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"cyli133":52}},{"path":"src/main/java/taa/logic/commands/DeleteAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":" * Deletes an Assignment of {assignmentName} from AssignmentList.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"public class DeleteAssignmentCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"    public static final String COMMAND_WORD \u003d \"delete_asgn\";","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_USAGE \u003d \"Format: delete_asgn n/{name}\";","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"    public static final String MESSAGE_DELETE_ASSIGNMENT_SUCCESS \u003d \"Assignment: %s Deleted.\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"    private final String assignmentName;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"    public DeleteAssignmentCommand(String assignmentName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"            model.deleteAssignment(assignmentName);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        } catch (AssignmentException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"                \"An error occurred when deleting assignment %s:\\n%s\",","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"                assignmentName,","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"                e.getMessage()));","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ASSIGNMENT_SUCCESS, assignmentName));","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"chunzkok":9,"TamKengHong":30}},{"path":"src/main/java/taa/logic/commands/DeleteStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" * Deletes a student identified using it\u0027s displayed index from the class list.","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"public class DeleteStudentCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    public static final String COMMAND_WORD \u003d \"delete_student\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    public DeleteStudentCommand(Index targetIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"TamKengHong"},"content":"        model.deleteStudentSubmission(studentToDelete);","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"                || (other instanceof DeleteStudentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteStudentCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":19,"-":34,"TamKengHong":1}},{"path":"src/main/java/taa/logic/commands/EditStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.AssignmentList;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":" * Edits the details of an existing student in the class list.","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"public class EditStudentCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    public static final String COMMAND_WORD \u003d \"edit_student\";","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"            + \"[\" + PREFIX_CLASS_TAG + \"CLASS_NAME]...\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the class list.\";","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"    public EditStudentCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        Student editedStudent \u003d createEditedPerson(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"        if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // TODO suboptimal. updates the assignments to link to the new student.","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"        model.initAssignmentsFromStorage(AssignmentList.INSTANCE.getAssignments());","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"    private static Student createEditedPerson(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"bojie3"},"content":"        Attendance updatedAttendance \u003d editStudentDescriptor.getAttendance().orElse(studentToEdit.getAtd());","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"TamKengHong"},"content":"        ArrayList\u003cString\u003e submissionStrings \u003d editStudentDescriptor.getSubmissionStrings()","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"TamKengHong"},"content":"                .orElse(studentToEdit.getSubmissionStorageStrings());","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"        Set\u003cTag\u003e updatedClassTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getClassTags());","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"bojie3"},"content":"        return new Student(updatedName, updatedAttendance.atdStrorageStr(),","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"TamKengHong"},"content":"                updatedAttendance.partPointsStorageStr(), submissionStrings, updatedClassTags);","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"        if (!(other instanceof EditStudentCommand)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand e \u003d (EditStudentCommand) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"bojie3"},"content":"        private Attendance attendance;","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"TamKengHong"},"content":"        private ArrayList\u003cString\u003e submissionStrings;","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":135,"author":{"gitId":"chunzkok"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"bojie3"},"content":"            setAttendance(toCopy.attendance);","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"TamKengHong"},"content":"            setSubmissions(toCopy.submissionStrings);","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"chunzkok"},"content":"            return CollectionUtil.isAnyNonNull(name, tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"bojie3"},"content":"        public void setAttendance(Attendance attendance) {","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"bojie3"},"content":"            this.attendance \u003d attendance;","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"bojie3"},"content":"        public Optional\u003cAttendance\u003e getAttendance() {","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"bojie3"},"content":"            return Optional.ofNullable(this.attendance);","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"TamKengHong"},"content":"        public void setSubmissions(ArrayList\u003cString\u003e submissions) {","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"TamKengHong"},"content":"            this.submissionStrings \u003d submissions;","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"TamKengHong"},"content":"        public Optional\u003cArrayList\u003cString\u003e\u003e getSubmissionStrings() {","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"TamKengHong"},"content":"            return Optional.ofNullable(this.submissionStrings);","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"chunzkok"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"chunzkok"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"chunzkok":52,"bojie3":14,"-":120,"WilliamHaiweiGu":3,"TamKengHong":19}},{"path":"src/main/java/taa/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting TAA as requested ...\";","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chunzkok":3,"cyli133":1,"-":15}},{"path":"src/main/java/taa/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"import org.apache.commons.csv.CSVPrinter;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.AppUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.CsvUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.FileUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"/** Export data in CSV format.*/","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class ExportCommand extends CsvCommand {","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_USAGE \u003d COMMAND_WORD + \": Export data in CSV format from file. Parameter: FILE_PATH\";","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_FILE_EXISTS \u003d \"The specified file already exists. Use -force to overwrite.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_FILE_RD_ONLY \u003d \"The specified file is read-only and cannot be modified.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_SUCC \u003d \"%d student(s) saved to %s.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Create export command by passing a file. Nothing is checked. */","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public ExportCommand(String f, boolean isForced) {","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(f.endsWith(CsvUtil.FILE_PREFIX) ? f : f + CsvUtil.FILE_PREFIX, isForced);","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static String toStorageString(Set\u003cTag\u003e s) {","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"        StringBuilder tags \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (Tag tag : s) {","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"            tags.append(tag.tagName).append(\u0027;\u0027);","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return tags.toString();","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (!f.createNewFile()) { // File already exists","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"                if (isNotForced) {","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    throw new CommandException(MSG_FILE_EXISTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"                if (!f.canWrite()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    throw new CommandException(MSG_FILE_RD_ONLY);","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new CommandException(FileUtil.MSG_FILE_ACCESS_DENIED);","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwIoExceptionAsCmdException();","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final ObservableList\u003cStudent\u003e toSave \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"        FileWriter writer \u003d null;","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"        CSVPrinter printer \u003d null;","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"            writer \u003d new FileWriter(f);","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"            printer \u003d new CSVPrinter(writer, CsvUtil.OUT_FMT);","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"            for (Student stu : toSave) {","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"                final Attendance atd \u003d stu.getAtd();","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"                printer.printRecord(stu.getName(), atd.atdStrorageStr(), atd.partPointsStorageStr(),","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"                        stu.getSubmissionStorageString(), toStorageString(stu.getClassTags()));","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwIoExceptionAsCmdException();","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } finally {","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"            AppUtil.closeIfClosable(printer);","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"            AppUtil.closeIfClosable(writer);","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new CommandResult(String.format(MSG_SUCC, toSave.size(), f));","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"WilliamHaiweiGu":82}},{"path":"src/main/java/taa/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" * Finds and lists all persons in the class list whose name contains any of the argument keywords.","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chunzkok":7,"-":35}},{"path":"src/main/java/taa/logic/commands/GradeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":" * Grades a student submission of an assignment of assignmentName.","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"public class GradeCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"    public static final String COMMAND_WORD \u003d \"grade\";","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Format: grade n/{assignmentName} i/{studentId}\"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"            + \" m/{marks} (optional: late/)\";","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Assignment %s, submission from student %d graded: %d mark(s) %s\";","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"    private final String assignmentName;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"    private final int studentId;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"    private final int marks;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"    private final boolean isLateSubmission;","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"     * Constructor for GradeCommand","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"     * @param assignmentName","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"     * @param studentId","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"     * @param marks","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"    public GradeCommand(String assignmentName, int studentId, int marks, boolean isLateSubmission) {","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"        this.marks \u003d marks;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"TamKengHong"},"content":"        this.isLateSubmission \u003d isLateSubmission;","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"            model.grade(assignmentName, studentId, marks, isLateSubmission);","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        } catch (AssignmentException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(String.format(\"An error occurred when grading assignment %s:\\n\", assignmentName)","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"                    + e.getMessage());","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"TamKengHong"},"content":"        String late \u003d isLateSubmission ? \"(*Late Submission*)\" : \"\";","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"TamKengHong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, assignmentName, studentId, marks, late));","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"chunzkok":7,"TamKengHong":45}},{"path":"src/main/java/taa/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":2,"cyli133":1,"-":18}},{"path":"src/main/java/taa/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"import org.apache.commons.csv.CSVParser;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"import org.apache.commons.csv.CSVRecord;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.AppUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.CsvUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.FileUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.AssignmentList;","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.student.UniqueStudentList;","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Import student data in CSV format from file.","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class ImportCommand extends CsvCommand {","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_USAGE \u003d COMMAND_WORD + \": Import data in CSV format from file. Parameter: FILE_PATH\";","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_FILE_DNE \u003d \"The specified file does not exist.\";","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_FILE_CANT_RD \u003d \"The specified file does not grant read permission.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_FILE_NOT_FOUND \u003d \"The specified file cannot be opened for reading.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_ENTRY_FMT_ERR \u003d \"The following entry does not comply with format: \";","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_INCONSISTENT_ENTRY \u003d \"This entry has more columns than defined fields.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_DUP_STU_IN_FILE \u003d \"The file contains this student at least twice:\";","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MSG_SUCC \u003d \"%d student(s) added.\";","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static final Predicate\u003cString\u003e IS_UNEMPTY \u003d s -\u003e !s.isEmpty();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Create import command by passing a file. Nothing is checked.","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param f","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param isForced","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public ImportCommand(String f, boolean isForced) {","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(f, isForced);","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static String mkMsgNoColumn(String keyword) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \"This entry has no \\\"\" + keyword + \"\\\"column.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static void throwEntryFormatError(CSVRecord record, String errMsg) throws CommandException {","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"        throw new CommandException(MSG_ENTRY_FMT_ERR + \u0027\\\"\u0027 + Arrays.toString(record.values()) + \"\\\". \" + errMsg);","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"    static Student parseFromCsvRec(CSVRecord record) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (!record.isConsistent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwEntryFormatError(record, MSG_INCONSISTENT_ENTRY);","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (!record.isMapped(CsvUtil.KW_NAME)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwEntryFormatError(record, mkMsgNoColumn(CsvUtil.KW_NAME));","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String nameStr \u003d record.get(CsvUtil.KW_NAME).trim();","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (!Name.isValidName(nameStr)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwEntryFormatError(record, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"        if (!record.isMapped(CsvUtil.KW_ATTENDANCE)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwEntryFormatError(record, mkMsgNoColumn(CsvUtil.KW_ATTENDANCE));","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String atd \u003d record.get(CsvUtil.KW_ATTENDANCE);","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String atdStr;","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (atd.isBlank()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"WilliamHaiweiGu"},"content":"            atdStr \u003d Attendance.ORIGINAL_ATD;","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"WilliamHaiweiGu"},"content":"            atdStr \u003d atd.trim();","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (!Attendance.isValidAtdStr(atdStr)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throwEntryFormatError(record, Attendance.ATD_ERROR_MSG);","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"bojie3"},"content":"        if (!record.isMapped(CsvUtil.KW_PP)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwEntryFormatError(record, mkMsgNoColumn(CsvUtil.KW_PP));","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String pp \u003d record.get(CsvUtil.KW_PP);","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String ppStr;","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (pp.isBlank()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"WilliamHaiweiGu"},"content":"            ppStr \u003d Attendance.ORIGINAL_PP;","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"WilliamHaiweiGu"},"content":"            ppStr \u003d record.get(CsvUtil.KW_PP).trim();","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (!Attendance.isAcceptablePpStr(ppStr)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throwEntryFormatError(record, Attendance.PP_UNACCEPTABLE_MSG);","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final ArrayList\u003cString\u003e submissions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (!record.isMapped(CsvUtil.KW_SUBMISSIONS)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwEntryFormatError(record, mkMsgNoColumn(CsvUtil.KW_SUBMISSIONS));","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String submitStr \u003d record.get(CsvUtil.KW_SUBMISSIONS);","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (!submitStr.isBlank()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"WilliamHaiweiGu"},"content":"            Collections.addAll(submissions, submitStr.trim().split(\";\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"WilliamHaiweiGu"},"content":"            AssignmentList.INSTANCE.testValidCsvSubmissions(submissions);","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwEntryFormatError(record, e.getMessage());","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (!record.isMapped(CsvUtil.KW_TAGS)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwEntryFormatError(record, mkMsgNoColumn(CsvUtil.KW_TAGS));","lastModifiedDate":"2023-04-05"},{"lineNumber":125,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String tagStr \u003d record.get(CsvUtil.KW_TAGS).trim();","lastModifiedDate":"2023-04-05"},{"lineNumber":127,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Set\u003cTag\u003e parsedTags \u003d null;","lastModifiedDate":"2023-04-05"},{"lineNumber":128,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"WilliamHaiweiGu"},"content":"            // ignore all tokens that are empty strings.","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"WilliamHaiweiGu"},"content":"            parsedTags \u003d ParserUtil.parseTags(","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    Arrays.stream(tagStr.split(\";\")).filter(IS_UNEMPTY).collect(Collectors.toList()));","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwEntryFormatError(record, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new Student(new Name(nameStr), atdStr, ppStr, submissions, parsedTags);","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"WilliamHaiweiGu"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throw new CommandException(MSG_FILE_DNE);","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (f.isDirectory()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throw new CommandException(FileUtil.MSG_FILE_IS_DIR);","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (!f.canRead()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throw new CommandException(MSG_FILE_CANT_RD);","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new CommandException(FileUtil.MSG_FILE_ACCESS_DENIED);","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final FileReader reader;","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"WilliamHaiweiGu"},"content":"            reader \u003d new FileReader(f);","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new CommandException(MSG_FILE_NOT_FOUND);","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"WilliamHaiweiGu"},"content":"        CSVParser parser \u003d null;","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"WilliamHaiweiGu"},"content":"            parser \u003d CsvUtil.IN_FMT.parse(reader);","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwIoExceptionAsCmdException();","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final HashMap\u003cName, Student\u003e nameToStu \u003d UniqueStudentList.getNameToStuMap(model.getFilteredStudentList());","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final HashSet\u003cStudent\u003e inFileStu \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final ArrayList\u003cStudent\u003e toAdd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final ArrayList\u003cStudent\u003e toDel \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (CSVRecord record : parser) {","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final Student stu \u003d parseFromCsvRec(record);","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"WilliamHaiweiGu"},"content":"            toAdd.add(stu);","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final Student stuInList \u003d nameToStu.get(stu.getName());","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (stuInList \u003d\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"WilliamHaiweiGu"},"content":"                if (!inFileStu.add(stu)) { // duplicate student in file","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    throw new CommandException(MSG_DUP_STU_IN_FILE + \u0027 \u0027 + stu);","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"WilliamHaiweiGu"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"WilliamHaiweiGu"},"content":"            } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"WilliamHaiweiGu"},"content":"                if (isNotForced) {","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    throw new CommandException(AddStudentCommand.MESSAGE_DUPLICATE_STUDENT + \": \" + stu","lastModifiedDate":"2023-03-31"},{"lineNumber":185,"author":{"gitId":"WilliamHaiweiGu"},"content":"                            + \"\\nUse -force to overwrite.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":186,"author":{"gitId":"WilliamHaiweiGu"},"content":"                }","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"WilliamHaiweiGu"},"content":"                toDel.add(stuInList);","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":190,"author":{"gitId":"WilliamHaiweiGu"},"content":"        AppUtil.closeIfClosable(parser);","lastModifiedDate":"2023-03-31"},{"lineNumber":191,"author":{"gitId":"WilliamHaiweiGu"},"content":"        AppUtil.closeIfClosable(reader);","lastModifiedDate":"2023-03-31"},{"lineNumber":192,"author":{"gitId":"WilliamHaiweiGu"},"content":"        toDel.forEach(model::deleteStudent);","lastModifiedDate":"2023-03-31"},{"lineNumber":193,"author":{"gitId":"WilliamHaiweiGu"},"content":"        toDel.forEach(model::deleteStudentSubmission);","lastModifiedDate":"2023-04-06"},{"lineNumber":194,"author":{"gitId":"WilliamHaiweiGu"},"content":"        toAdd.forEach(model::addStudent);","lastModifiedDate":"2023-03-31"},{"lineNumber":195,"author":{"gitId":"WilliamHaiweiGu"},"content":"        toAdd.forEach(model::addStudentAssignment);","lastModifiedDate":"2023-04-06"},{"lineNumber":196,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new CommandResult(String.format(MSG_SUCC, toAdd.size()));","lastModifiedDate":"2023-03-22"},{"lineNumber":197,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chunzkok":1,"bojie3":5,"WilliamHaiweiGu":189,"TamKengHong":3}},{"path":"src/main/java/taa/logic/commands/InsertParticipationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_PARTICIPATION_POINTS;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":" * Class to insert participation points to an existing student in taa","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":" * for a specified week","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"public class InsertParticipationCommand extends Command {","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    public static final String COMMAND_WORD \u003d \"insertPP\";","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    public static final String SUCCESS_MSG \u003d \"Participation points inserted successfully!\";","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"    public static final String ATTENDANCE_NOT_MARKED \u003d \"Mark the attendance of the student \"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"            + \"first before inserting points!\";","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"            + \": Inserts attendance points to the student identified\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"            + \"by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"            + \"Parameters: INDEX (must be a positive integer), \"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"            + \"[\" + PREFIX_WEEK + \"WeekToMark] \\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"            + \"[\" + PREFIX_PARTICIPATION_POINTS + \"ParticipationPoints] \\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 w/1 pp/200\";","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"    private final Index index;","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"    private final Index week;","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"    private final int points;","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"     * Constructor for MarkAttendanceCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"     * @param index index of student to update","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"     * @param week week to update","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"    public InsertParticipationCommand(Index index, Index week, int points) {","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"        this.week \u003d week;","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"        this.points \u003d points;","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"        Attendance studentAtd \u003d studentToEdit.getAtd();","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"        if (!studentAtd.isMarkedWeek(this.week.getZeroBased())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"            return new CommandResult(ATTENDANCE_NOT_MARKED);","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"        studentAtd.insertParticipationPoints(this.week.getZeroBased(), this.points);","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"        model.updateStudent(studentToEdit);","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"        return new CommandResult(SUCCESS_MSG);","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"bojie3":75}},{"path":"src/main/java/taa/logic/commands/ListAlarmsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":" * Defines the command class for listing of alarms.","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"public class ListAlarmsCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"    public static final String COMMAND_WORD \u003d \"list_alarms\";","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"        return new CommandResult(model.listAlarms());","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"cyli133":19}},{"path":"src/main/java/taa/logic/commands/ListAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":" * Command that lists out all assignments.","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"public class ListAssignmentCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"    public static final String COMMAND_WORD \u003d \"list_asgn\";","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"        return new CommandResult(model.listAssignments());","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"TamKengHong":18}},{"path":"src/main/java/taa/logic/commands/ListAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":" * Class to list the attendance of an existing student in the taa.","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"public class ListAttendanceCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    public static final String COMMAND_WORD \u003d \"listAtd\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"            + \": Lists the attendance of the student identified\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"            + \"by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"            + \"Parameters: INDEX (must be a positive integer), \"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    private final Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"     * Constructor for ListAttendanceCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"     * @param index index of student to update","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    public ListAttendanceCommand(Index index) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"        Attendance studentAtd \u003d studentToEdit.getAtd();","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"        return new CommandResult(studentAtd.listAtdString());","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"bojie3":54}},{"path":"src/main/java/taa/logic/commands/ListByClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassIdMatchesPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" * Lists all persons in the class list to the user.","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"public class ListByClassCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    public static final String COMMAND_WORD \u003d \"classlist\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students in class\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List all students in the specified class\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"    private final ClassIdMatchesPredicate predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"    public ListByClassCommand(ClassIdMatchesPredicate predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"        model.updateFilteredClassLists(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"                || (other instanceof ListByClassCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"                \u0026\u0026 predicate.equals(((ListByClassCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chunzkok":1,"cyli133":42}},{"path":"src/main/java/taa/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":3,"-":19}},{"path":"src/main/java/taa/logic/commands/ListParticipationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":" * Class to List the participation points of an existing student in the taa.","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"public class ListParticipationCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    public static final String COMMAND_WORD \u003d \"listPP\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"            + \": Lists the participation of the student identified\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"            + \"by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"            + \"Parameters: INDEX (must be a positive integer), \"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    private final Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"     * Constructor for ListParticipationCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"     * @param index index of student to update","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    public ListParticipationCommand(Index index) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"        Attendance studentAtd \u003d studentToEdit.getAtd();","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"        return new CommandResult(studentAtd.listPpString());","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"bojie3":54}},{"path":"src/main/java/taa/logic/commands/MarkAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":" * Marks the attendance of an existing student in the taa.","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"public class MarkAttendanceCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    public static final String COMMAND_WORD \u003d \"markAtd\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    public static final String SUCCESS_MSG \u003d \"Attendance marked successfully!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    public static final String MESSAGE_DUPLICATE_MARKING \u003d \"This student\u0027s attendance has already been marked.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"            + \": Marks the attendance of the student identified\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"            + \"by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"            + \"Parameters: INDEX (must be a positive integer), \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"            + \"[\" + PREFIX_WEEK + \"WeekToMark] \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 w/1 \";","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"    private final Index index;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    private final Index week;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"     * Constructor for MarkAttendanceCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"     * @param index index of student to update","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"     * @param week week to update","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"    public MarkAttendanceCommand(Index index, Index week) {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"        this.week \u003d week;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"        Attendance studentAtd \u003d studentToEdit.getAtd();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"        if (studentAtd.isMarkedWeek(this.week.getZeroBased())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"            return new CommandResult(MESSAGE_DUPLICATE_MARKING);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"        studentAtd.markAttendance(this.week.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"        model.updateStudent(studentToEdit);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"        return new CommandResult(SUCCESS_MSG);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bojie3":67}},{"path":"src/main/java/taa/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" * Changes the remark of an existing student in the class list.","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"chunzkok":3,"cyli133":12}},{"path":"src/main/java/taa/logic/commands/UngradeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":" * Resets the marks and late status of a student submission.","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"public class UngradeCommand extends Command {","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"    public static final String COMMAND_WORD \u003d \"ungrade\";","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Format: ungrade n/{assignmentName} i/{studentId}\";","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Assignment %s, submission from student %d ungraded\";","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"    private final String assignmentName;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"    private final int studentId;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"     * @param assignmentName","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"     * @param studentId","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"    public UngradeCommand(String assignmentName, int studentId) {","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"            model.ungrade(assignmentName, studentId);","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        } catch (AssignmentException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"            throw new CommandException(","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"                    String.format(","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"                            \"An error occurred when ungrading assignment %s for student %d:\\n\",","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"                            assignmentName, studentId)","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"                    + e.getMessage());","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"TamKengHong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, assignmentName, studentId));","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"chunzkok":9,"TamKengHong":38}},{"path":"src/main/java/taa/logic/commands/UnmarkAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":" * Unmarks the attendance of an existing student in the taa.","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"public class UnmarkAttendanceCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    public static final String COMMAND_WORD \u003d \"unmarkAtd\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    public static final String SUCCESS_MSG \u003d \"Attendance unmarked successfully!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"            + \": Unmarks the attendance of the student identified\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"            + \"by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"            + \"Parameters: INDEX (must be a positive integer), \"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"            + \"[\" + PREFIX_WEEK + \"WeekToMark] \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 w/1 \";","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"    private final Index index;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"    private final Index week;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"     * Constructor for UnarkAttendanceCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"     * @param index index of student to update","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"     * @param week week to update","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"    public UnmarkAttendanceCommand(Index index, Index week) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"        this.week \u003d week;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"        Attendance studentAtd \u003d studentToEdit.getAtd();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"        studentAtd.unmarkAttendance(this.week.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"        model.updateStudent(studentToEdit);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"        return new CommandResult(SUCCESS_MSG);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bojie3":64}},{"path":"src/main/java/taa/logic/commands/enums/ChartType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands.enums;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * Represents the type of charts that can be shown by TAA.","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"public enum ChartType {","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"    CLASS_ATTENDANCE,","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"    CLASS_GRADES","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"chunzkok":9}},{"path":"src/main/java/taa/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands.exceptions;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"chunzkok":1,"-":16}},{"path":"src/main/java/taa/logic/parser/AddAlarmCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.AddAlarmCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"import taa.model.alarm.Alarm;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":" * Defines the parser for the add alarm command.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"public class AddAlarmCommandParser {","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"     * Parses the add alarm command and returns an AddAlarmCommand instance after execution","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"     * @param string user input to be parsed","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"     * @return the parsed AddAlarmCommand instance","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"     * @throws ParseException for invalid user input","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"    public AddAlarmCommand parse(String string) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"                ArgumentTokenizer.tokenize(string, PREFIX_TIME, PREFIX_COMMENT);","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TIME)","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"                || !arePrefixesPresent(argMultimap, PREFIX_COMMENT)","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"                    AddAlarmCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"        int minutes;","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"        Object obj \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"        if (obj instanceof Integer \u0026\u0026 (int) obj \u003e 0) {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"            minutes \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"                    AddAlarmCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"        String comment \u003d argMultimap.getValue(PREFIX_COMMENT).get();","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"        Alarm alarm \u003d new Alarm(minutes, comment);","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"        return new AddAlarmCommand(alarm);","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"cyli133":53}},{"path":"src/main/java/taa/logic/parser/AddAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_MARK;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":" * Parses input arguments and creates a new AddStudentCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"public class AddAssignmentCommandParser implements Parser\u003cAddAssignmentCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStudentCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"     * and returns an AddStudentCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"    public AddAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CLASS_TAG, PREFIX_MARK);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"                    AddAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"TamKengHong"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"        int totalMarks \u003d 100;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_MARK)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"            totalMarks \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_MARK).get());","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"            if (totalMarks \u003c 0) {","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"                throw new ParseException(\"Marks cannot be negative.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"TamKengHong"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"TamKengHong"},"content":"        return new AddAssignmentCommand(name.toString(), totalMarks);","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"TamKengHong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"TamKengHong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"TamKengHong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"TamKengHong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chunzkok":5,"TamKengHong":50}},{"path":"src/main/java/taa/logic/parser/AddStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.AddStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":" * Parses input arguments and creates a new AddStudentCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"public class AddStudentCommandParser implements Parser\u003cAddStudentCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStudentCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     * and returns an AddStudentCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    public AddStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CLASS_TAG);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"                    AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_CLASS_TAG));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"TamKengHong"},"content":"        Student student \u003d new Student(name, Attendance.ORIGINAL_ATD, Attendance.ORIGINAL_PP,","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"                new ArrayList\u003cString\u003e(), tagList);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        return new AddStudentCommand(student);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"chunzkok":21,"bojie3":1,"-":31,"TamKengHong":3}},{"path":"src/main/java/taa/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"chunzkok":1,"-":59}},{"path":"src/main/java/taa/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"chunzkok"},"content":"        private final int startPosition;","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"chunzkok":2,"-":145}},{"path":"src/main/java/taa/logic/parser/ClassStatisticsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_ASSIGNMENT_NAME;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_STAT_TYPE;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.ClassStatisticsCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.enums.ChartType;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" * Parses input arguments and creates a new ClassStatisticsCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"public class ClassStatisticsCommandParser implements Parser\u003cClassStatisticsCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     * Parses the given {@code String} of arguments in the context of the ClassStatisticsCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"     * and returns an ClassStatisticsCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    public ClassStatisticsCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STAT_TYPE, PREFIX_ASSIGNMENT_NAME);","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STAT_TYPE)","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"                    ClassStatisticsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        String rawField \u003d \"CLASS_\" + argMultimap.getValue(PREFIX_STAT_TYPE).get().toUpperCase();","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        if (!rawField.equals(ChartType.CLASS_GRADES.toString())","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 !rawField.equals(ChartType.CLASS_ATTENDANCE.toString())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"                    ClassStatisticsCommand.MESSAGE_UNKNOWN_FIELD));","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        ChartType field \u003d ChartType.valueOf(rawField);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        if (field \u003d\u003d ChartType.CLASS_GRADES","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT_NAME)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"                    ClassStatisticsCommand.MESSAGE_MISSING_ASSIGNMENT_NAME));","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"        if (field \u003d\u003d ChartType.CLASS_ATTENDANCE) {","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"            return new ClassStatisticsCommand(field);","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"            String assignmentName \u003d argMultimap.getValue(PREFIX_ASSIGNMENT_NAME).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"            return new ClassStatisticsCommand(field, assignmentName);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"chunzkok":68}},{"path":"src/main/java/taa/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    public static final Prefix PREFIX_COMMENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    public static final Prefix PREFIX_CLASS_TAG \u003d new Prefix(\"cl/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"    public static final Prefix PREFIX_WEEK \u003d new Prefix(\"w/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"    public static final Prefix PREFIX_STUDENT_ID \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    public static final Prefix PREFIX_ASSIGNMENT_NAME \u003d new Prefix(\"as/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"    public static final Prefix PREFIX_MARK \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"    public static final Prefix PREFIX_LATE \u003d new Prefix(\"late/\");","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    public static final Prefix PREFIX_PARTICIPATION_POINTS \u003d new Prefix(\"pp/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    public static final Prefix PREFIX_STAT_TYPE \u003d new Prefix(\"st/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    private CliSyntax() {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"chunzkok":7,"bojie3":3,"cyli133":4,"-":10,"TamKengHong":7}},{"path":"src/main/java/taa/logic/parser/CreateClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.CreateClassCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":" * Parses input arguments and creates a new AddStudentCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"public class CreateClassCommandParser implements Parser\u003cCreateClassCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStudentCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"     * and returns an AddStudentCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    public CreateClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, CreateClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"        ClassList toAdd \u003d new ClassList(trimmedArgs);","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"        return new CreateClassCommand(toAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"cyli133":28}},{"path":"src/main/java/taa/logic/parser/CsvCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.StringUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.commands.CsvCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"/** The shared elements of {@link ImportCommandParser} and {@link ExportCommandParser}.*/","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"public abstract class CsvCommandParser implements Parser\u003cCsvCommand\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static final String FORCE_FLAG \u003d \"-force\";","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final BiFunction\u003cString, Boolean, CsvCommand\u003e mkCmd;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    protected CsvCommandParser(BiFunction\u003cString, Boolean, CsvCommand\u003e mkCmd) {","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.mkCmd \u003d mkCmd;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"    abstract void throwParseException() throws ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public CsvCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String sanitizedArgs \u003d StringUtil.rmAdjSpace(args).trim();","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (sanitizedArgs.isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwParseException();","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String[] tokens \u003d sanitizedArgs.split(\" \");","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final boolean isForced \u003d FORCE_FLAG.equals(tokens[0]);","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int fileIdx \u003d isForced ? 1 : 0;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (tokens.length \u003e fileIdx + 1) {","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throwParseException();","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return mkCmd.apply(tokens[fileIdx], isForced);","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"WilliamHaiweiGu":34}},{"path":"src/main/java/taa/logic/parser/DeleteAlarmCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.DeleteAlarmCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":" * Defines a parser for delete alarm command","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"public class DeleteAlarmCommandParser implements Parser\u003cDeleteAlarmCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"     * Parses the command line arguments and identify the alarm that is to be deleted/","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"     * @param args command line arguments","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"     * @return the corresponding delete alarm command","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"     * @throws ParseException if the parsing fails","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"    public DeleteAlarmCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"            return new DeleteAlarmCommand(index.getOneBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteAlarmCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"cyli133":28}},{"path":"src/main/java/taa/logic/parser/DeleteAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.commands.DeleteAssignmentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" * Parses input arguments and creates a new DeleteStudentCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"public class DeleteAssignmentCommandParser implements Parser\u003cDeleteAssignmentCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAssignmentCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"     * and returns a DeleteAssignmentCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"    public DeleteAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CLASS_TAG);","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"                    DeleteAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"        return new DeleteAssignmentCommand(name.toString());","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chunzkok":1,"TamKengHong":39}},{"path":"src/main/java/taa/logic/parser/DeleteStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" * Parses input arguments and creates a new DeleteStudentCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"public class DeleteStudentCommandParser implements Parser\u003cDeleteStudentCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteStudentCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"     * and returns a DeleteStudentCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    public DeleteStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"            return new DeleteStudentCommand(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chunzkok":12,"-":16}},{"path":"src/main/java/taa/logic/parser/EditStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.EditStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":" * Parses input arguments and creates a new EditStudentCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"public class EditStudentCommandParser implements Parser\u003cEditStudentCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"     * Parses the given {@code String} of arguments in the context of the EditStudentCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     * and returns an EditStudentCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    public EditStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CLASS_TAG);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"                    EditStudentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor editStudentDescriptor \u003d new EditStudentCommand.EditStudentDescriptor();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_CLASS_TAG)).ifPresent(editStudentDescriptor::setTags);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"            throw new ParseException(EditStudentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"        return new EditStudentCommand(index, editStudentDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chunzkok":22,"-":48}},{"path":"src/main/java/taa/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"/** Parses import command. Format: import FILE_NAME. */","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class ExportCommandParser extends CsvCommandParser {","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static final String SYNTAX_ERR_MSG_FULL \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ExportCommand.MSG_USAGE);","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public ExportCommandParser() {","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(ExportCommand::new);","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"    void throwParseException() throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"        throw new ParseException(SYNTAX_ERR_MSG_FULL);","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"WilliamHaiweiGu":21}},{"path":"src/main/java/taa/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.FindCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chunzkok":6,"-":26}},{"path":"src/main/java/taa/logic/parser/GradeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_LATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_MARK;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.commands.GradeCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":" * Parser for gradeCommand.","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"public class GradeCommandParser {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"     * Parses the given {@code String} of arguments in the context of the GradeCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"     * and returns a GradeCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"    public GradeCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENT_ID, PREFIX_MARK, PREFIX_LATE);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_STUDENT_ID, PREFIX_MARK)","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"                    GradeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"TamKengHong"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"        int studentId \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_STUDENT_ID).get()).getOneBased();","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"        int mark \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_MARK).get());","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"        boolean isLateSubmission \u003d arePrefixesPresent(argMultimap, PREFIX_LATE);","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"        return new GradeCommand(name.toString(), studentId, mark, isLateSubmission);","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"TamKengHong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"TamKengHong":45}},{"path":"src/main/java/taa/logic/parser/ImportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.commands.ImportCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"/** Parses import command. Format: import FILE_NAME. */","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class ImportCommandParser extends CsvCommandParser {","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static final String SYNTAX_ERR_MSG_FULL \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MSG_USAGE);","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public ImportCommandParser() {","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(ImportCommand::new);","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    void throwParseException() throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"        throw new ParseException(SYNTAX_ERR_MSG_FULL);","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"WilliamHaiweiGu":20}},{"path":"src/main/java/taa/logic/parser/InsertParticipationParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_PARTICIPATION_POINTS;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.InsertParticipationCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":" * Parses input arguments and creates a new InsertParticipationCommand object","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"public class InsertParticipationParser implements Parser\u003cInsertParticipationCommand\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    public InsertParticipationCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_CLASS_TAG, PREFIX_WEEK,","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"                        PREFIX_PARTICIPATION_POINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"        Index index;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"        int week \u003d -1;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"        int points \u003d -1;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"        if (argMultimap.getValue(PREFIX_WEEK).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"            week \u003d ParserUtil.parseWeek(argMultimap.getValue(PREFIX_WEEK).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"        if (argMultimap.getValue(PREFIX_PARTICIPATION_POINTS).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"            points \u003d ParserUtil.parsePartPoints(argMultimap.getValue(PREFIX_PARTICIPATION_POINTS).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"        if (week \u003d\u003d -1) {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"            throw new ParseException(Attendance.WEEK_ERROR_MSG);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"        if (points \u003d\u003d -1) {","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"            throw new ParseException(Attendance.POINTS_ERROR_MSG);","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"        return new InsertParticipationCommand(index, Index.fromOneBased(week), points);","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"bojie3":49}},{"path":"src/main/java/taa/logic/parser/ListAttendanceParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.ListAttendanceCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":" * Parses input arguments and creates a new ListAttendanceCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"public class ListAttendanceParser implements Parser\u003cListAttendanceCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    public ListAttendanceCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_CLASS_TAG, PREFIX_WEEK);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"        Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"                    ListAttendanceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"        return new ListAttendanceCommand(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"bojie3":34}},{"path":"src/main/java/taa/logic/parser/ListByClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.ListByClassCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassIdMatchesPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"public class ListByClassCommandParser implements Parser\u003cListByClassCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    public ListByClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ListByClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"        return new ListByClassCommand(new ClassIdMatchesPredicate(trimmedArgs));","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"cyli133":27}},{"path":"src/main/java/taa/logic/parser/ListParticipationParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.ListParticipationCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":" * Parses input arguments and creates a new ListParticipationCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"public class ListParticipationParser implements Parser\u003cListParticipationCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    public ListParticipationCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"                ArgumentTokenizer.tokenize(userInput);","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"        Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"                    ListParticipationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"        return new ListParticipationCommand(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"bojie3":31}},{"path":"src/main/java/taa/logic/parser/MarkAttendanceParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":" * Parses input arguments and creates a new MarkAttendanceCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"public class MarkAttendanceParser implements Parser\u003cMarkAttendanceCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    public MarkAttendanceCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_CLASS_TAG, PREFIX_WEEK);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"        Index index;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"        int week \u003d -1;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        if (argMultimap.getValue(PREFIX_WEEK).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"            week \u003d ParserUtil.parseWeek(argMultimap.getValue(PREFIX_WEEK).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"        if (week \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"            throw new ParseException(Attendance.WEEK_ERROR_MSG);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"        return new MarkAttendanceCommand(index, Index.fromOneBased(week));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chunzkok":3,"bojie3":35}},{"path":"src/main/java/taa/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.Command;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"chunzkok":3,"-":13}},{"path":"src/main/java/taa/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.StringUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a valid non-zero unsigned integer.\";","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Checks if a string is either 1 or 0 after trimming.","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param points String version of mark to be checked","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return boolean if points is valid or not","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final Predicate\u003cString\u003e IS_BIN_INT \u003d s -\u003e {","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"        s \u003d s.trim();","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \"0\".equals(s) || \"1\".equals(s);","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"    };","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Parses a {@code String name} into a {@code Name}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"     * Parses a {@code String week} into an int","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"     * @param week String value of week","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"     * @return int value of week if valid","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"     * @throws ParseException if the given {@code week} is invalid","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"    public static int parseWeek(String week) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"        requireNonNull(week);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"        String trimmedWeek \u003d week.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"            int value \u003d Integer.parseInt(trimmedWeek);","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"bojie3"},"content":"            throw new ParseException(Attendance.WEEK_ERROR_MSG);","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"bojie3"},"content":"        if (!Attendance.isValidWeek(trimmedWeek)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"bojie3"},"content":"            throw new ParseException(Attendance.WEEK_ERROR_MSG);","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"bojie3"},"content":"        return Attendance.convertToIntegerWeek(trimmedWeek);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Parses a {@code String points} into a {@code int}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"bojie3"},"content":"     * @param points String version of the points to be parsed","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"bojie3"},"content":"     * @return int version of points if is valid","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"bojie3"},"content":"     * @throws ParseException if points are not integers between 0-700","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"bojie3"},"content":"    public static int parsePartPoints(String points) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"bojie3"},"content":"        requireNonNull(points);","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String trimmedPoints \u003d points.trim();","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"bojie3"},"content":"        if (!Attendance.isValidParticipationPoints(trimmedPoints)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"bojie3"},"content":"            throw new ParseException(Attendance.POINTS_ERROR_MSG);","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"bojie3"},"content":"        return Integer.parseInt(trimmedPoints);","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Parses a {@code String tag} into a {@code Tag}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"cyli133"},"content":"     * Parses time for countdown","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"bojie3"},"content":"    public static Integer parseTime(String time) throws ParseException {","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"cyli133"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int value;","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"WilliamHaiweiGu"},"content":"            value \u003d Integer.parseInt(time.trim());","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"bojie3"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"bojie3"},"content":"            throw new ParseException(\"Invalid time for alarm\");","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return value;","lastModifiedDate":"2023-04-05"},{"lineNumber":138,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"TamKengHong"},"content":"     * Parse int input given","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"TamKengHong"},"content":"    public static int parseInt(String s) throws ParseException {","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"TamKengHong"},"content":"        int theInt;","lastModifiedDate":"2023-04-04"},{"lineNumber":145,"author":{"gitId":"TamKengHong"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":146,"author":{"gitId":"TamKengHong"},"content":"            theInt \u003d Integer.parseInt(s);","lastModifiedDate":"2023-04-04"},{"lineNumber":147,"author":{"gitId":"TamKengHong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":148,"author":{"gitId":"TamKengHong"},"content":"            throw new ParseException(String.format(\"Invalid input: %s\", s));","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":150,"author":{"gitId":"TamKengHong"},"content":"        return theInt;","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"chunzkok":6,"bojie3":40,"cyli133":6,"-":65,"WilliamHaiweiGu":22,"TamKengHong":13}},{"path":"src/main/java/taa/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"chunzkok":1,"-":38}},{"path":"src/main/java/taa/logic/parser/TaaParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.AddAlarmCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.AddStudentCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.ClassStatisticsCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.Command;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.CreateClassCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.DeleteAlarmCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.DeleteAssignmentCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.EditStudentCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.FindCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.GradeCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.ImportCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.InsertParticipationCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.ListAlarmsCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.ListAssignmentCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.ListAttendanceCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.ListByClassCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.ListCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.ListParticipationCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.UngradeCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"public class TaaParser {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"cyli133"},"content":"            return new RemarkCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"        case MarkAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"            return new MarkAttendanceParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"        case UnmarkAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"            return new UnmarkAttendanceParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"        case InsertParticipationCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"            return new InsertParticipationParser().parse(arguments);","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"bojie3"},"content":"        case ListAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"bojie3"},"content":"            return new ListAttendanceParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"bojie3"},"content":"        case ListParticipationCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"bojie3"},"content":"            return new ListParticipationParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"        case AddStudentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"            return new AddStudentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"        case EditStudentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"            return new EditStudentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"        case DeleteStudentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"            return new DeleteStudentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":106,"author":{"gitId":"WilliamHaiweiGu"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return new ImportCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"WilliamHaiweiGu"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"cyli133"},"content":"        case ListByClassCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"cyli133"},"content":"            return new ListByClassCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"cyli133"},"content":"        case CreateClassCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"cyli133"},"content":"            return new CreateClassCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"TamKengHong"},"content":"        case AddAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"TamKengHong"},"content":"            return new AddAssignmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"TamKengHong"},"content":"        case DeleteAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"TamKengHong"},"content":"            return new DeleteAssignmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"TamKengHong"},"content":"        case GradeCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"TamKengHong"},"content":"            return new GradeCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"TamKengHong"},"content":"        case UngradeCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"TamKengHong"},"content":"            return new UngradeCommandParser().parse(arguments);","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"TamKengHong"},"content":"        case ListAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"TamKengHong"},"content":"            return new ListAssignmentCommand();","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"cyli133"},"content":"        case AddAlarmCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"cyli133"},"content":"            return new AddAlarmCommandParser().parse(arguments);","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"chunzkok"},"content":"        case ClassStatisticsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"chunzkok"},"content":"            return new ClassStatisticsCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"cyli133"},"content":"        case ListAlarmsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"cyli133"},"content":"            return new ListAlarmsCommand();","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"cyli133"},"content":"        case DeleteAlarmCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"cyli133"},"content":"            return new DeleteAlarmCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":146,"author":{"gitId":"chunzkok"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":16,"bojie3":17,"cyli133":41,"-":53,"WilliamHaiweiGu":8,"TamKengHong":15}},{"path":"src/main/java/taa/logic/parser/UngradeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.commands.UngradeCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":" * Parser for UngradeCommand.","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"public class UngradeCommandParser {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"     * Parses the given {@code String} of arguments in the context of the GradeCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"     * and returns a GradeCommand object for execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"    public UngradeCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENT_ID);","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_STUDENT_ID)","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"                    UngradeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"        int studentId \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_STUDENT_ID).get()).getOneBased();","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"TamKengHong"},"content":"        return new UngradeCommand(name.toString(), studentId);","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"TamKengHong":41}},{"path":"src/main/java/taa/logic/parser/UnmarkAttendanceParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import static taa.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import taa.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":" * Parses input arguments and creates a new UnmarkAttendanceCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"public class UnmarkAttendanceParser implements Parser\u003cUnmarkAttendanceCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    public UnmarkAttendanceCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_CLASS_TAG, PREFIX_WEEK);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"        Index index;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"        int week \u003d -1;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        if (argMultimap.getValue(PREFIX_WEEK).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"            week \u003d ParserUtil.parseWeek(argMultimap.getValue(PREFIX_WEEK).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"        if (week \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"            throw new ParseException(Attendance.WEEK_ERROR_MSG);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"        return new UnmarkAttendanceCommand(index, Index.fromOneBased(week));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chunzkok":3,"bojie3":35}},{"path":"src/main/java/taa/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser.exceptions;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Consumer that might throw a {@link ParseException}.","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param \u003cE\u003e input type.","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public interface Consumer\u003cE\u003e {","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"        void accept(E e) throws ParseException;","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"chunzkok":2,"-":15,"WilliamHaiweiGu":9}},{"path":"src/main/java/taa/model/ClassIdMatchesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.model;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"public class ClassIdMatchesPredicate implements Predicate\u003cClassList\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"    private final String keywords;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"    public ClassIdMatchesPredicate(String keyword) {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"        this.keywords \u003d keyword;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    public boolean test(ClassList classList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"        return classList.getClassId().equals(keywords);","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"                || (other instanceof ClassIdMatchesPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"                \u0026\u0026 keywords \u003d\u003d ((ClassIdMatchesPredicate) other).keywords); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"cyli133":28}},{"path":"src/main/java/taa/model/ClassList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.AssignmentList;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.UniqueStudentList;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"public class ClassList implements ReadOnlyStudentList {","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    private static int lastId;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"    private UniqueStudentList students;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"    private AssignmentList assignments;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"    private String className \u003d \"DEFAULT\";","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"    private int classId;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    private int studentCount;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"     * Creates a class list instance with the given class name.","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"     * @param name the name of the class.","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"    public ClassList(String name) {","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignments \u003d AssignmentList.INSTANCE;","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"        this.classId \u003d ++lastId;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"        this.className \u003d name;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"     * Creates a class list instance with a default name.","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"    public ClassList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignments \u003d AssignmentList.INSTANCE;","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"        this.classId \u003d ++lastId;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"     * Creates an ClassList using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"    public ClassList(ReadOnlyStudentList toBeCopied) {","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"        this(\"DEFAULT\");","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"cyli133"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"    public boolean isSameClassList(ClassList otherClassList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"cyli133"},"content":"        if (otherClassList \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"cyli133"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"cyli133"},"content":"        return otherClassList !\u003d null","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"cyli133"},"content":"                \u0026\u0026 otherClassList.getClassId() \u003d\u003d (getClassId());","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"cyli133"},"content":"    public String getClassId() {","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"cyli133"},"content":"        return this.className;","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"cyli133"},"content":"     * Resets the existing data of this {@code ClassList} with {@code newData}.","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"    public void resetData(ReadOnlyStudentList newData) {","lastModifiedDate":"2023-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"    //// student-level operations","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the class list.","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"        return students.contains(student);","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"chunzkok"},"content":"        students.add(p);","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"cyli133"},"content":"        this.studentCount +\u003d 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"     * Updates the student list to propagate change to the rest of the model.","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"     * @param target The student to be refreshed.","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"    public void updateStudent(Student target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"        students.update(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"cyli133"},"content":"    public int getStudentCount() {","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"cyli133"},"content":"        return this.studentCount;","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"cyli133"},"content":"    public UniqueStudentList getUniqueStudentList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"cyli133"},"content":"        return this.students;","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"chunzkok"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"chunzkok"},"content":"     * The student identity of {@code editedStudent} must not be the same as another","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"chunzkok"},"content":"     * existing student in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"chunzkok"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"cyli133"},"content":"     * Removes {@code key} from this {@code ClassList}.","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"chunzkok"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"chunzkok"},"content":"        students.remove(key);","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"cyli133"},"content":"        this.studentCount -\u003d 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"cyli133"},"content":"        return \"class name: \" + this.className + \" \" + students.asUnmodifiableObservableList().size() + \" person(s)\";","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"chunzkok"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"chunzkok"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"cyli133"},"content":"                || (other instanceof ClassList // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"cyli133"},"content":"                \u0026\u0026 students.equals(((ClassList) other).students));","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"chunzkok"},"content":"        return students.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":42,"cyli133":54,"-":70,"WilliamHaiweiGu":2,"TamKengHong":1}},{"path":"src/main/java/taa/model/IntStatistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * Contains the statistics of a list of integers.","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"public class IntStatistics {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    private final double mean;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    private final double variance;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"     * Initialises the statistics of a given list of Integers.","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    public IntStatistics(List\u003cInteger\u003e numbers) {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(numbers);","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"        long sum \u003d calcSum(numbers);","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        this.mean \u003d (double) sum / numbers.size();","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        this.variance \u003d calcVariance(numbers, this.mean);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     * Returns the mean of the list of Integers passed in during construction.","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    public double getMean() {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        return this.mean;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"     * Returns the variance of the list of Integers passed in during construction.","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    public double getVariance() {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        return this.variance;","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"     * Returns the standard deviation of the list of Integers passed in during construction.","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"    public double getStdDev() {","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        return Math.sqrt(this.variance);","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"    private long calcSum(List\u003cInteger\u003e numbers) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        long result \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        for (int number : numbers) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"            result +\u003d number;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        return result;","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"    private double calcVariance(List\u003cInteger\u003e numbers, double mean) {","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"        double result \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"        for (int number : numbers) {","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"            result +\u003d Math.pow(number - mean, 2);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"        return result;","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"chunzkok":61}},{"path":"src/main/java/taa/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.enums.ChartType;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"import taa.model.alarm.Alarm;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.Assignment;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.NoGradeVarianceException;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.NoSubmissionsFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"    Predicate\u003cClassList\u003e PREDICATE_SHOW_ALL_CLASSES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"     * Returns the user prefs\u0027 TAA data file path.","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"    Path getTaaDataFilePath();","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"     * Sets the user prefs\u0027 TAA data file path.","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"    void setTaaDataFilePath(Path taaDataFilePath);","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Returns the TAA data */","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"    TaaData getTaaData();","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"     * Replaces TAA data with the data in {@code taaData}.","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"    void setTaaData(TaaData taaData);","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the student list.","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"cyli133"},"content":"    boolean hasClassList(ClassList tocheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"     * Returns the number of students in the active class list.","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"    int getClassListSize();","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Deletes the given student. The student must exist in the student list.","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Adds the given student. {@code student} must not already exist in the student list.","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"    void addStudent(Student student);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"cyli133"},"content":"    void addClassList(ClassList toAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"     * Updates the student list to propagate change to the rest of the model.","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"     * @param student The student to be refreshed.","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"    void updateStudent(Student student);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}. {@code target} must exist in the student","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * list. The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * student list.","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"TamKengHong"},"content":"     * Returns an unmodifiable view of the filtered student list","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"cyli133"},"content":"    ObservableList\u003cStudent\u003e getFilteredClassList();","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"TamKengHong"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"cyli133"},"content":"    void updateFilteredClassLists(Predicate\u003cClassList\u003e predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Adds a student to all the class lists he/she is tagged with. Creates new class lists to add the student into, if","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * required.","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"chunzkok"},"content":"     * @param student The student to include in all of his/her tagged classes.","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"chunzkok"},"content":"    void addStudentToTaggedClasses(Student student);","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"     * Checks if a given assignment already exists.","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"chunzkok"},"content":"    boolean hasAssignment(String assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"chunzkok"},"content":"    void addAssignment(String assignmentName, int totalMarks) throws DuplicateAssignmentException;","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"chunzkok"},"content":"    void deleteAssignment(String assignmentName) throws AssignmentNotFoundException;","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"chunzkok"},"content":"    void grade(String assignmentName, int studentId, int marks, boolean isLateSubmission) throws AssignmentException;","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"TamKengHong"},"content":"    String listAssignments();","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"chunzkok"},"content":"    void ungrade(String assignmentName, int studentId) throws AssignmentException;","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"cyli133"},"content":"    void addAlarm(Alarm alarm) throws CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":145,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"TamKengHong"},"content":"    void deleteStudentSubmission(Student studentToDelete);","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"WilliamHaiweiGu"},"content":"    void initAssignmentsFromStorage(Assignment[] asgnArr);","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"TamKengHong"},"content":"    void addStudentAssignment(Student toAdd);","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"chunzkok"},"content":"    void displayChart(ChartType chartType, String... args)","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"chunzkok"},"content":"            throws AssignmentNotFoundException, NoSubmissionsFoundException, NoGradeVarianceException;","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"cyli133"},"content":"    String listAlarms();","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"cyli133"},"content":"    void deleteAlarm(int index) throws CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chunzkok":44,"cyli133":16,"-":54,"WilliamHaiweiGu":22,"TamKengHong":24}},{"path":"src/main/java/taa/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import java.awt.Color;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import java.awt.Font;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import java.io.File;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"import javax.sound.sampled.AudioInputStream;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"import javax.sound.sampled.AudioSystem;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"import javax.sound.sampled.Clip;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"import org.jfree.chart.ChartFactory;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"import org.jfree.chart.ChartFrame;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"import org.jfree.chart.JFreeChart;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"import org.jfree.chart.axis.NumberAxis;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"import org.jfree.chart.axis.ValueAxis;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"import org.jfree.chart.plot.Marker;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"import org.jfree.chart.plot.PlotOrientation;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"import org.jfree.chart.plot.ValueMarker;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"import org.jfree.chart.ui.RectangleAnchor;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"import org.jfree.chart.ui.TextAnchor;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"import org.jfree.data.category.DefaultCategoryDataset;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"import org.jfree.data.function.Function2D;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"import org.jfree.data.function.NormalDistributionFunction2D;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"import org.jfree.data.general.DatasetUtils;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"import org.jfree.data.xy.XYDataset;","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.enums.ChartType;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"import taa.model.alarm.Alarm;","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"import taa.model.alarm.AlarmList;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.Assignment;","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.AssignmentList;","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.NoGradeVarianceException;","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.NoSubmissionsFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"import taa.model.student.SameStudentPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":" * Represents the in-memory model of the student listdata.","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"cyli133"},"content":"    private final ClassList classList;","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":70,"author":{"gitId":"cyli133"},"content":"    private final Tutor tutor;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"cyli133"},"content":"    private final FilteredList\u003cClassList\u003e filteredClassLists;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"cyli133"},"content":"    private final AlarmList alarmList;","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final AssignmentList assignmentList \u003d AssignmentList.INSTANCE;","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"    private Predicate\u003cClassList\u003e activeClassListPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"cyli133"},"content":"     * Initializes a ModelManager with the given classList and userPrefs.","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public ModelManager(TaaData taaData, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"WilliamHaiweiGu"},"content":"        CollectionUtil.requireAllNonNull(taaData, taaData.studentList, userPrefs);","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"WilliamHaiweiGu"},"content":"        logger.fine(\"Initializing with student list: \" + taaData.studentList + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.classList \u003d new ClassList(taaData.studentList);","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"cyli133"},"content":"        UniqueClassLists temp \u003d new UniqueClassLists(this.classList);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"cyli133"},"content":"        this.tutor \u003d new Tutor(new Name(\"James\"), new HashSet\u003c\u003e(), temp);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"        this.filteredStudents \u003d new FilteredList\u003c\u003e(this.classList.getStudentList());","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.filteredClassLists \u003d new FilteredList\u003c\u003e(this.tutor.getClassList());","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"        this.activeClassListPredicate \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"cyli133"},"content":"        this.alarmList \u003d new AlarmList();","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"        for (Student student : this.classList.getUniqueStudentList()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"            addStudentToTaggedClasses(student);","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"WilliamHaiweiGu"},"content":"        initAssignmentsFromStorage(taaData.asgnArr);","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"    public ModelManager() {","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this(new TaaData(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return userPrefs;","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"WilliamHaiweiGu"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"    public Path getTaaDataFilePath() {","lastModifiedDate":"2023-04-03"},{"lineNumber":131,"author":{"gitId":"chunzkok"},"content":"        return userPrefs.getTaaDataFilePath();","lastModifiedDate":"2023-04-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"chunzkok"},"content":"    public void setTaaDataFilePath(Path taaDataFilePath) {","lastModifiedDate":"2023-04-03"},{"lineNumber":136,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(taaDataFilePath);","lastModifiedDate":"2023-04-03"},{"lineNumber":137,"author":{"gitId":"chunzkok"},"content":"        userPrefs.setTaaDataFilePath(taaDataFilePath);","lastModifiedDate":"2023-04-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public TaaData getTaaData() {","lastModifiedDate":"2023-04-08"},{"lineNumber":142,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new TaaData(classList, assignmentList.getAssignments());","lastModifiedDate":"2023-04-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void setTaaData(TaaData taaData) {","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.classList.resetData(taaData.studentList);","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"chunzkok"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"cyli133"},"content":"        return classList.hasStudent(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":157,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Check whether the tutor already has the class.","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param classList the class name to be checked.","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Boolean variable indicating whether it\u0027s contained.","lastModifiedDate":"2023-04-08"},{"lineNumber":161,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":162,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public boolean hasClassList(ClassList classList) {","lastModifiedDate":"2023-04-08"},{"lineNumber":163,"author":{"gitId":"WilliamHaiweiGu"},"content":"        requireNonNull(classList);","lastModifiedDate":"2023-04-08"},{"lineNumber":164,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return tutor.containsClassList(classList);","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":166,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":167,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public int getClassListSize() {","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return this.filteredStudents.size();","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"chunzkok"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"cyli133"},"content":"        classList.removeStudent(target);","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"chunzkok"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"cyli133"},"content":"        classList.addStudent(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"chunzkok"},"content":"        addStudentToTaggedClasses(student);","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"chunzkok"},"content":"        if (activeClassListPredicate \u003d\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"chunzkok"},"content":"            updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"chunzkok"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"chunzkok"},"content":"            updateFilteredClassLists(activeClassListPredicate);","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":188,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"chunzkok"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ClassList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"chunzkok"},"content":"    public void addClassList(ClassList toAdd) {","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"chunzkok"},"content":"        tutor.addClass(toAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"chunzkok"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void updateStudent(Student target) {","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"WilliamHaiweiGu"},"content":"        classList.updateStudent(target);","lastModifiedDate":"2023-04-08"},{"lineNumber":200,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":202,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":203,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-04-08"},{"lineNumber":204,"author":{"gitId":"WilliamHaiweiGu"},"content":"        CollectionUtil.requireAllNonNull(target, editedStudent);","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":206,"author":{"gitId":"WilliamHaiweiGu"},"content":"        classList.setStudent(target, editedStudent);","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"chunzkok"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":212,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of {@code","lastModifiedDate":"2023-04-08"},{"lineNumber":213,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * versionedAddressBook}","lastModifiedDate":"2023-04-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":216,"author":{"gitId":"chunzkok"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"chunzkok"},"content":"        return filteredStudents;","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":220,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"cyli133"},"content":"    public ObservableList\u003cStudent\u003e getFilteredClassList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"cyli133"},"content":"        return filteredStudents;","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":226,"author":{"gitId":"chunzkok"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":228,"author":{"gitId":"chunzkok"},"content":"        this.activeClassListPredicate \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"chunzkok"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":232,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"cyli133"},"content":"    public void updateFilteredClassLists(Predicate\u003cClassList\u003e predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"cyli133"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"cyli133"},"content":"        //filteredClassLists.setPredicate(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"chunzkok"},"content":"        this.activeClassListPredicate \u003d predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"chunzkok"},"content":"        FilteredList\u003cClassList\u003e filtered \u003d filteredClassLists.filtered(this.activeClassListPredicate);","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"cyli133"},"content":"        if (filtered.size() \u003e 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"cyli133"},"content":"            filteredStudents.setPredicate(new SameStudentPredicate(filtered.get(0)));","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"cyli133"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"cyli133"},"content":"            filteredStudents.setPredicate(p -\u003e false);","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void addStudentToTaggedClasses(Student student) {","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"WilliamHaiweiGu"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Set\u003cTag\u003e classTags \u003d student.getClassTags();","lastModifiedDate":"2023-04-08"},{"lineNumber":250,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (Tag tag : classTags) {","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"WilliamHaiweiGu"},"content":"            String className \u003d tag.tagName;","lastModifiedDate":"2023-04-08"},{"lineNumber":252,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.tutor.addStudentToClass(student, className);","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"chunzkok"},"content":"    public boolean hasAssignment(String assignmentName) {","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(assignmentName);","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"chunzkok"},"content":"        return assignmentList.contains(assignmentName);","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"WilliamHaiweiGu"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AssignmentList Helpers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":263,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":264,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":265,"author":{"gitId":"chunzkok"},"content":"    public void addAssignment(String assignmentName, int totalMarks) throws DuplicateAssignmentException {","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(assignmentName, filteredStudents, totalMarks);","lastModifiedDate":"2023-03-25"},{"lineNumber":267,"author":{"gitId":"chunzkok"},"content":"        for (Student student : filteredStudents) {","lastModifiedDate":"2023-03-15"},{"lineNumber":268,"author":{"gitId":"chunzkok"},"content":"            updateStudent(student);","lastModifiedDate":"2023-03-15"},{"lineNumber":269,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":270,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":271,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":272,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":273,"author":{"gitId":"chunzkok"},"content":"    public void deleteAssignment(String assignmentName) throws AssignmentNotFoundException {","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.delete(assignmentName);","lastModifiedDate":"2023-03-13"},{"lineNumber":275,"author":{"gitId":"chunzkok"},"content":"        for (Student student : filteredStudents) {","lastModifiedDate":"2023-03-15"},{"lineNumber":276,"author":{"gitId":"chunzkok"},"content":"            updateStudent(student);","lastModifiedDate":"2023-03-15"},{"lineNumber":277,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":278,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":279,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":280,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":281,"author":{"gitId":"TamKengHong"},"content":"    public void grade(String assignmentName, int studentId, int marks, boolean isLateSubmission)","lastModifiedDate":"2023-03-25"},{"lineNumber":282,"author":{"gitId":"chunzkok"},"content":"            throws AssignmentException {","lastModifiedDate":"2023-03-30"},{"lineNumber":283,"author":{"gitId":"TamKengHong"},"content":"        Student student;","lastModifiedDate":"2023-04-04"},{"lineNumber":284,"author":{"gitId":"TamKengHong"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":285,"author":{"gitId":"TamKengHong"},"content":"            student \u003d this.filteredStudents.get(Index.fromOneBased(studentId).getZeroBased());","lastModifiedDate":"2023-04-04"},{"lineNumber":286,"author":{"gitId":"TamKengHong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":287,"author":{"gitId":"TamKengHong"},"content":"            throw new AssignmentException(String.format(\"Invalid student id: %d\", studentId));","lastModifiedDate":"2023-04-04"},{"lineNumber":288,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":289,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.grade(assignmentName, student, marks, isLateSubmission);","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"chunzkok"},"content":"        updateStudent(student);","lastModifiedDate":"2023-03-15"},{"lineNumber":291,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":292,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":293,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":294,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String listAssignments() {","lastModifiedDate":"2023-04-08"},{"lineNumber":295,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return assignmentList.list();","lastModifiedDate":"2023-04-08"},{"lineNumber":296,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":297,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":298,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":299,"author":{"gitId":"chunzkok"},"content":"    public void ungrade(String assignmentName, int studentId) throws AssignmentException {","lastModifiedDate":"2023-03-30"},{"lineNumber":300,"author":{"gitId":"TamKengHong"},"content":"        Student student;","lastModifiedDate":"2023-04-04"},{"lineNumber":301,"author":{"gitId":"TamKengHong"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":302,"author":{"gitId":"TamKengHong"},"content":"            student \u003d this.filteredStudents.get(Index.fromOneBased(studentId).getZeroBased());","lastModifiedDate":"2023-04-04"},{"lineNumber":303,"author":{"gitId":"TamKengHong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":304,"author":{"gitId":"TamKengHong"},"content":"            throw new AssignmentException(String.format(\"Invalid student id: %d\", studentId));","lastModifiedDate":"2023-04-04"},{"lineNumber":305,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":306,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.ungrade(assignmentName, student);","lastModifiedDate":"2023-03-22"},{"lineNumber":307,"author":{"gitId":"TamKengHong"},"content":"        updateStudent(student);","lastModifiedDate":"2023-03-22"},{"lineNumber":308,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":309,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":310,"author":{"gitId":"cyli133"},"content":"    //Solution below adapted from ChatGPT","lastModifiedDate":"2023-03-26"},{"lineNumber":311,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":312,"author":{"gitId":"cyli133"},"content":"    public void addAlarm(Alarm alarm) {","lastModifiedDate":"2023-03-26"},{"lineNumber":313,"author":{"gitId":"cyli133"},"content":"        Duration duration \u003d Duration.minutes(alarm.getTime());","lastModifiedDate":"2023-03-26"},{"lineNumber":314,"author":{"gitId":"cyli133"},"content":"        Timeline timeline \u003d new Timeline(new KeyFrame(duration, event -\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":315,"author":{"gitId":"cyli133"},"content":"            String music \u003d \"src/main/resources/sounds/bell.wav\";","lastModifiedDate":"2023-03-26"},{"lineNumber":316,"author":{"gitId":"cyli133"},"content":"            try {","lastModifiedDate":"2023-03-26"},{"lineNumber":317,"author":{"gitId":"cyli133"},"content":"                AudioInputStream audioInputStream \u003d AudioSystem.getAudioInputStream(new File(music));","lastModifiedDate":"2023-03-26"},{"lineNumber":318,"author":{"gitId":"cyli133"},"content":"                Clip clip \u003d AudioSystem.getClip();","lastModifiedDate":"2023-03-26"},{"lineNumber":319,"author":{"gitId":"cyli133"},"content":"                clip.open(audioInputStream);","lastModifiedDate":"2023-03-26"},{"lineNumber":320,"author":{"gitId":"cyli133"},"content":"                clip.start();","lastModifiedDate":"2023-03-26"},{"lineNumber":321,"author":{"gitId":"cyli133"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2023-03-26"},{"lineNumber":322,"author":{"gitId":"cyli133"},"content":"                ex.printStackTrace();","lastModifiedDate":"2023-03-26"},{"lineNumber":323,"author":{"gitId":"cyli133"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":324,"author":{"gitId":"cyli133"},"content":"            String alertString \u003d AlarmList.getAlarmAlert(alarm);","lastModifiedDate":"2023-03-30"},{"lineNumber":325,"author":{"gitId":"cyli133"},"content":"            AlarmList.deleteTheAlarm(alarm); //when the alarm is sounded, it\u0027s deleted from the alarm list","lastModifiedDate":"2023-03-30"},{"lineNumber":326,"author":{"gitId":"cyli133"},"content":"            Alert alert \u003d new Alert(Alert.AlertType.INFORMATION);","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"cyli133"},"content":"            alert.setTitle(\"Alarm Warning\");","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"cyli133"},"content":"            alert.setHeaderText(\"Hey, your time\u0027s up!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":329,"author":{"gitId":"cyli133"},"content":"            alert.setContentText(\"Note: \" + alertString);","lastModifiedDate":"2023-03-30"},{"lineNumber":330,"author":{"gitId":"cyli133"},"content":"            alert.show();","lastModifiedDate":"2023-03-30"},{"lineNumber":331,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":332,"author":{"gitId":"cyli133"},"content":"        }));","lastModifiedDate":"2023-03-26"},{"lineNumber":333,"author":{"gitId":"cyli133"},"content":"        timeline.setCycleCount(1);","lastModifiedDate":"2023-03-30"},{"lineNumber":334,"author":{"gitId":"cyli133"},"content":"        timeline.play();","lastModifiedDate":"2023-03-26"},{"lineNumber":335,"author":{"gitId":"cyli133"},"content":"        alarm.addTimeline(timeline);","lastModifiedDate":"2023-03-30"},{"lineNumber":336,"author":{"gitId":"cyli133"},"content":"        this.alarmList.addAlarm(alarm);","lastModifiedDate":"2023-03-30"},{"lineNumber":337,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":338,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":339,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":340,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void deleteStudentSubmission(Student studentToDelete) {","lastModifiedDate":"2023-04-08"},{"lineNumber":341,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignmentList.deleteStudent(studentToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":342,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":343,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":344,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":345,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void initAssignmentsFromStorage(Assignment[] asgnArr) {","lastModifiedDate":"2023-04-08"},{"lineNumber":346,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignmentList.initFromStorage(filteredStudents, asgnArr);","lastModifiedDate":"2023-04-08"},{"lineNumber":347,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (Student stu : filteredStudents) {","lastModifiedDate":"2023-04-08"},{"lineNumber":348,"author":{"gitId":"WilliamHaiweiGu"},"content":"            updateStudent(stu);","lastModifiedDate":"2023-04-08"},{"lineNumber":349,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":350,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":351,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":352,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":353,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param stu student to be added to assignmentList","lastModifiedDate":"2023-04-08"},{"lineNumber":354,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":355,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void addStudentAssignment(Student stu) {","lastModifiedDate":"2023-04-08"},{"lineNumber":356,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignmentList.addStudent(stu);","lastModifiedDate":"2023-04-08"},{"lineNumber":357,"author":{"gitId":"WilliamHaiweiGu"},"content":"        updateStudent(stu);","lastModifiedDate":"2023-04-08"},{"lineNumber":358,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":359,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":360,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":361,"author":{"gitId":"chunzkok"},"content":"    public void displayChart(ChartType chartType, String... args)","lastModifiedDate":"2023-03-30"},{"lineNumber":362,"author":{"gitId":"chunzkok"},"content":"            throws AssignmentNotFoundException, NoSubmissionsFoundException, NoGradeVarianceException {","lastModifiedDate":"2023-03-30"},{"lineNumber":363,"author":{"gitId":"chunzkok"},"content":"        String title;","lastModifiedDate":"2023-03-29"},{"lineNumber":364,"author":{"gitId":"chunzkok"},"content":"        JFreeChart chart;","lastModifiedDate":"2023-03-29"},{"lineNumber":365,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":366,"author":{"gitId":"chunzkok"},"content":"        switch (chartType) {","lastModifiedDate":"2023-03-29"},{"lineNumber":367,"author":{"gitId":"chunzkok"},"content":"        case CLASS_GRADES:","lastModifiedDate":"2023-03-29"},{"lineNumber":368,"author":{"gitId":"chunzkok"},"content":"            // args[0] should not be null here -- should be ensured in ClassStatisticsCommandParser","lastModifiedDate":"2023-03-30"},{"lineNumber":369,"author":{"gitId":"chunzkok"},"content":"            assert args[0] !\u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":370,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":371,"author":{"gitId":"chunzkok"},"content":"            title \u003d \"Grade Distribution\";","lastModifiedDate":"2023-03-29"},{"lineNumber":372,"author":{"gitId":"chunzkok"},"content":"            chart \u003d generateGradeDistribution(args[0]);","lastModifiedDate":"2023-03-30"},{"lineNumber":373,"author":{"gitId":"chunzkok"},"content":"            break;","lastModifiedDate":"2023-03-29"},{"lineNumber":374,"author":{"gitId":"chunzkok"},"content":"        case CLASS_ATTENDANCE:","lastModifiedDate":"2023-03-29"},{"lineNumber":375,"author":{"gitId":"chunzkok"},"content":"            title \u003d \"Attendance Distribution\";","lastModifiedDate":"2023-03-29"},{"lineNumber":376,"author":{"gitId":"chunzkok"},"content":"            chart \u003d generateAttendanceDistribution();","lastModifiedDate":"2023-03-29"},{"lineNumber":377,"author":{"gitId":"chunzkok"},"content":"            break;","lastModifiedDate":"2023-03-29"},{"lineNumber":378,"author":{"gitId":"chunzkok"},"content":"        default:","lastModifiedDate":"2023-03-29"},{"lineNumber":379,"author":{"gitId":"chunzkok"},"content":"            // this should be unreachable; any invalid ChartType should","lastModifiedDate":"2023-03-30"},{"lineNumber":380,"author":{"gitId":"chunzkok"},"content":"            // already be handled by ClassStatisticsCommandParser","lastModifiedDate":"2023-03-30"},{"lineNumber":381,"author":{"gitId":"chunzkok"},"content":"            assert false;","lastModifiedDate":"2023-03-29"},{"lineNumber":382,"author":{"gitId":"chunzkok"},"content":"            return;","lastModifiedDate":"2023-03-29"},{"lineNumber":383,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":384,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":385,"author":{"gitId":"chunzkok"},"content":"        ChartFrame frame \u003d new ChartFrame(title, chart);","lastModifiedDate":"2023-03-29"},{"lineNumber":386,"author":{"gitId":"chunzkok"},"content":"        frame.pack();","lastModifiedDate":"2023-03-29"},{"lineNumber":387,"author":{"gitId":"chunzkok"},"content":"        frame.setVisible(true);","lastModifiedDate":"2023-03-29"},{"lineNumber":388,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":389,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":390,"author":{"gitId":"WilliamHaiweiGu"},"content":"    //Solution below adapted from ChatGPT","lastModifiedDate":"2023-04-08"},{"lineNumber":391,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":392,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String listAlarms() {","lastModifiedDate":"2023-04-08"},{"lineNumber":393,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (AlarmList.getAlarmCount() \u003d\u003d 0) {","lastModifiedDate":"2023-04-08"},{"lineNumber":394,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return \"There is no alarm as of now.\";","lastModifiedDate":"2023-04-08"},{"lineNumber":395,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":396,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return this.alarmList.list();","lastModifiedDate":"2023-04-08"},{"lineNumber":397,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":398,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":399,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":400,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void deleteAlarm(int index) {","lastModifiedDate":"2023-04-08"},{"lineNumber":401,"author":{"gitId":"WilliamHaiweiGu"},"content":"        AlarmList.deleteTheAlarm(index);","lastModifiedDate":"2023-04-08"},{"lineNumber":402,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":403,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":404,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":405,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-04-08"},{"lineNumber":406,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // short circuit if same object","lastModifiedDate":"2023-04-08"},{"lineNumber":407,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-04-08"},{"lineNumber":408,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return true;","lastModifiedDate":"2023-04-08"},{"lineNumber":409,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":410,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":411,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-04-08"},{"lineNumber":412,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":413,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":414,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":415,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":416,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // state check","lastModifiedDate":"2023-04-08"},{"lineNumber":417,"author":{"gitId":"WilliamHaiweiGu"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2023-04-08"},{"lineNumber":418,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return classList.equals(other.classList)","lastModifiedDate":"2023-04-08"},{"lineNumber":419,"author":{"gitId":"WilliamHaiweiGu"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2023-04-08"},{"lineNumber":420,"author":{"gitId":"WilliamHaiweiGu"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2023-04-08"},{"lineNumber":421,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":422,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":423,"author":{"gitId":"chunzkok"},"content":"    private JFreeChart generateGradeDistribution(String assignmentName)","lastModifiedDate":"2023-03-30"},{"lineNumber":424,"author":{"gitId":"chunzkok"},"content":"            throws AssignmentNotFoundException, NoSubmissionsFoundException, NoGradeVarianceException {","lastModifiedDate":"2023-03-30"},{"lineNumber":425,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":426,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":427,"author":{"gitId":"chunzkok"},"content":"        final int numStdToShow \u003d 4;","lastModifiedDate":"2023-03-30"},{"lineNumber":428,"author":{"gitId":"chunzkok"},"content":"        final int numPointsToSample \u003d 300;","lastModifiedDate":"2023-03-30"},{"lineNumber":429,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":430,"author":{"gitId":"chunzkok"},"content":"        IntStatistics statistics \u003d getGradeStatistics(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":431,"author":{"gitId":"chunzkok"},"content":"        double mean \u003d statistics.getMean();","lastModifiedDate":"2023-03-30"},{"lineNumber":432,"author":{"gitId":"chunzkok"},"content":"        double std \u003d statistics.getStdDev();","lastModifiedDate":"2023-03-30"},{"lineNumber":433,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":434,"author":{"gitId":"chunzkok"},"content":"        if (std \u003d\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":435,"author":{"gitId":"chunzkok"},"content":"            // No variance, don\u0027t need bell curve","lastModifiedDate":"2023-03-30"},{"lineNumber":436,"author":{"gitId":"chunzkok"},"content":"            throw new NoGradeVarianceException(assignmentName, mean);","lastModifiedDate":"2023-03-30"},{"lineNumber":437,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":438,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":439,"author":{"gitId":"chunzkok"},"content":"        Function2D bellCurve \u003d new NormalDistributionFunction2D(mean, std);","lastModifiedDate":"2023-03-30"},{"lineNumber":440,"author":{"gitId":"chunzkok"},"content":"        XYDataset dataset \u003d DatasetUtils.sampleFunction2D(","lastModifiedDate":"2023-03-30"},{"lineNumber":441,"author":{"gitId":"chunzkok"},"content":"                bellCurve,","lastModifiedDate":"2023-03-30"},{"lineNumber":442,"author":{"gitId":"chunzkok"},"content":"                mean - numStdToShow * std,","lastModifiedDate":"2023-03-30"},{"lineNumber":443,"author":{"gitId":"chunzkok"},"content":"                mean + numStdToShow * std,","lastModifiedDate":"2023-03-30"},{"lineNumber":444,"author":{"gitId":"chunzkok"},"content":"                numPointsToSample,","lastModifiedDate":"2023-03-30"},{"lineNumber":445,"author":{"gitId":"chunzkok"},"content":"                \"Normal\"","lastModifiedDate":"2023-03-30"},{"lineNumber":446,"author":{"gitId":"chunzkok"},"content":"        );","lastModifiedDate":"2023-03-30"},{"lineNumber":447,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":448,"author":{"gitId":"chunzkok"},"content":"        JFreeChart result \u003d ChartFactory.createXYLineChart(","lastModifiedDate":"2023-03-30"},{"lineNumber":449,"author":{"gitId":"chunzkok"},"content":"                \"Grade Distribution for Assignment \" + assignmentName,","lastModifiedDate":"2023-03-30"},{"lineNumber":450,"author":{"gitId":"chunzkok"},"content":"                \"Score\",","lastModifiedDate":"2023-03-30"},{"lineNumber":451,"author":{"gitId":"chunzkok"},"content":"                \"Probability\",","lastModifiedDate":"2023-03-30"},{"lineNumber":452,"author":{"gitId":"chunzkok"},"content":"                dataset,","lastModifiedDate":"2023-03-30"},{"lineNumber":453,"author":{"gitId":"chunzkok"},"content":"                PlotOrientation.VERTICAL,","lastModifiedDate":"2023-03-30"},{"lineNumber":454,"author":{"gitId":"chunzkok"},"content":"                true,","lastModifiedDate":"2023-03-30"},{"lineNumber":455,"author":{"gitId":"chunzkok"},"content":"                true,","lastModifiedDate":"2023-03-30"},{"lineNumber":456,"author":{"gitId":"chunzkok"},"content":"                false","lastModifiedDate":"2023-03-30"},{"lineNumber":457,"author":{"gitId":"chunzkok"},"content":"        );","lastModifiedDate":"2023-03-30"},{"lineNumber":458,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":459,"author":{"gitId":"chunzkok"},"content":"        double maxY \u003d result.getXYPlot().getRangeAxis().getRange().getUpperBound();","lastModifiedDate":"2023-03-30"},{"lineNumber":460,"author":{"gitId":"chunzkok"},"content":"        final Marker meanInfo \u003d new ValueMarker(maxY);","lastModifiedDate":"2023-03-30"},{"lineNumber":461,"author":{"gitId":"chunzkok"},"content":"        meanInfo.setLabel(String.format(\"Mean: %.2f\", mean));","lastModifiedDate":"2023-03-30"},{"lineNumber":462,"author":{"gitId":"chunzkok"},"content":"        meanInfo.setLabelPaint(Color.blue);","lastModifiedDate":"2023-03-30"},{"lineNumber":463,"author":{"gitId":"chunzkok"},"content":"        meanInfo.setLabelAnchor(RectangleAnchor.BOTTOM_LEFT);","lastModifiedDate":"2023-03-30"},{"lineNumber":464,"author":{"gitId":"chunzkok"},"content":"        meanInfo.setLabelTextAnchor(TextAnchor.TOP_LEFT);","lastModifiedDate":"2023-03-30"},{"lineNumber":465,"author":{"gitId":"chunzkok"},"content":"        meanInfo.setLabelFont(new Font(\"Arial\", 0, 24));","lastModifiedDate":"2023-03-30"},{"lineNumber":466,"author":{"gitId":"chunzkok"},"content":"        result.getXYPlot().addRangeMarker(meanInfo);","lastModifiedDate":"2023-03-30"},{"lineNumber":467,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":468,"author":{"gitId":"chunzkok"},"content":"        final Marker stdInfo \u003d new ValueMarker(0.95 * maxY);","lastModifiedDate":"2023-03-30"},{"lineNumber":469,"author":{"gitId":"chunzkok"},"content":"        stdInfo.setLabel(String.format(\"Std. Dev: %.4f\", std));","lastModifiedDate":"2023-03-30"},{"lineNumber":470,"author":{"gitId":"chunzkok"},"content":"        stdInfo.setLabelPaint(Color.blue);","lastModifiedDate":"2023-03-30"},{"lineNumber":471,"author":{"gitId":"chunzkok"},"content":"        stdInfo.setLabelAnchor(RectangleAnchor.BOTTOM_LEFT);","lastModifiedDate":"2023-03-30"},{"lineNumber":472,"author":{"gitId":"chunzkok"},"content":"        stdInfo.setLabelTextAnchor(TextAnchor.TOP_LEFT);","lastModifiedDate":"2023-03-30"},{"lineNumber":473,"author":{"gitId":"chunzkok"},"content":"        stdInfo.setLabelFont(new Font(\"Arial\", 0, 24));","lastModifiedDate":"2023-03-30"},{"lineNumber":474,"author":{"gitId":"chunzkok"},"content":"        result.getXYPlot().addRangeMarker(stdInfo);","lastModifiedDate":"2023-03-30"},{"lineNumber":475,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":476,"author":{"gitId":"chunzkok"},"content":"        return result;","lastModifiedDate":"2023-03-30"},{"lineNumber":477,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":478,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":479,"author":{"gitId":"chunzkok"},"content":"    private JFreeChart generateAttendanceDistribution() {","lastModifiedDate":"2023-03-29"},{"lineNumber":480,"author":{"gitId":"chunzkok"},"content":"        JFreeChart result;","lastModifiedDate":"2023-03-30"},{"lineNumber":481,"author":{"gitId":"chunzkok"},"content":"        DefaultCategoryDataset attendanceData \u003d new DefaultCategoryDataset();","lastModifiedDate":"2023-03-29"},{"lineNumber":482,"author":{"gitId":"chunzkok"},"content":"        int[] studentAttendance \u003d countStudentAttendance();","lastModifiedDate":"2023-03-29"},{"lineNumber":483,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":484,"author":{"gitId":"chunzkok"},"content":"        for (int i \u003d 0; i \u003c studentAttendance.length; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":485,"author":{"gitId":"chunzkok"},"content":"            attendanceData.setValue(","lastModifiedDate":"2023-03-29"},{"lineNumber":486,"author":{"gitId":"chunzkok"},"content":"                    studentAttendance[i],","lastModifiedDate":"2023-03-29"},{"lineNumber":487,"author":{"gitId":"chunzkok"},"content":"                    \"Present\",","lastModifiedDate":"2023-03-29"},{"lineNumber":488,"author":{"gitId":"chunzkok"},"content":"                    String.format(\"W%d\", i + 1));","lastModifiedDate":"2023-03-29"},{"lineNumber":489,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":490,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":491,"author":{"gitId":"chunzkok"},"content":"        result \u003d ChartFactory.createBarChart(","lastModifiedDate":"2023-03-30"},{"lineNumber":492,"author":{"gitId":"chunzkok"},"content":"                \"Attendance\",","lastModifiedDate":"2023-03-30"},{"lineNumber":493,"author":{"gitId":"chunzkok"},"content":"                \"Week\",","lastModifiedDate":"2023-03-30"},{"lineNumber":494,"author":{"gitId":"chunzkok"},"content":"                \"Number of Students\",","lastModifiedDate":"2023-03-30"},{"lineNumber":495,"author":{"gitId":"chunzkok"},"content":"                attendanceData,","lastModifiedDate":"2023-03-30"},{"lineNumber":496,"author":{"gitId":"chunzkok"},"content":"                PlotOrientation.VERTICAL,","lastModifiedDate":"2023-03-30"},{"lineNumber":497,"author":{"gitId":"chunzkok"},"content":"                true,","lastModifiedDate":"2023-03-30"},{"lineNumber":498,"author":{"gitId":"chunzkok"},"content":"                true,","lastModifiedDate":"2023-03-30"},{"lineNumber":499,"author":{"gitId":"chunzkok"},"content":"                false","lastModifiedDate":"2023-03-30"},{"lineNumber":500,"author":{"gitId":"chunzkok"},"content":"        );","lastModifiedDate":"2023-03-29"},{"lineNumber":501,"author":{"gitId":"chunzkok"},"content":"        ValueAxis axis \u003d result.getCategoryPlot().getRangeAxis();","lastModifiedDate":"2023-03-30"},{"lineNumber":502,"author":{"gitId":"chunzkok"},"content":"        axis.setRange(0, filteredStudents.size());","lastModifiedDate":"2023-03-30"},{"lineNumber":503,"author":{"gitId":"chunzkok"},"content":"        axis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());","lastModifiedDate":"2023-03-30"},{"lineNumber":504,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":505,"author":{"gitId":"chunzkok"},"content":"        return result;","lastModifiedDate":"2023-03-30"},{"lineNumber":506,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":507,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":508,"author":{"gitId":"chunzkok"},"content":"    private int[] countStudentAttendance() {","lastModifiedDate":"2023-03-29"},{"lineNumber":509,"author":{"gitId":"chunzkok"},"content":"        int[] result \u003d new int[Attendance.NUM_WEEKS];","lastModifiedDate":"2023-03-29"},{"lineNumber":510,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":511,"author":{"gitId":"chunzkok"},"content":"        for (Student student : filteredStudents) {","lastModifiedDate":"2023-03-29"},{"lineNumber":512,"author":{"gitId":"chunzkok"},"content":"            student.updateAttendanceCounter(result);","lastModifiedDate":"2023-03-29"},{"lineNumber":513,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":514,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":515,"author":{"gitId":"chunzkok"},"content":"        return result;","lastModifiedDate":"2023-03-29"},{"lineNumber":516,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":517,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":518,"author":{"gitId":"chunzkok"},"content":"    private IntStatistics getGradeStatistics(String assignmentName)","lastModifiedDate":"2023-03-30"},{"lineNumber":519,"author":{"gitId":"chunzkok"},"content":"            throws AssignmentNotFoundException, NoSubmissionsFoundException {","lastModifiedDate":"2023-03-30"},{"lineNumber":520,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":521,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":522,"author":{"gitId":"chunzkok"},"content":"        List\u003cInteger\u003e grades \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":523,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":524,"author":{"gitId":"chunzkok"},"content":"        for (Student student : filteredStudents) {","lastModifiedDate":"2023-03-30"},{"lineNumber":525,"author":{"gitId":"chunzkok"},"content":"            student.getGradesForAssignment(assignmentName).ifPresent(grades::add);","lastModifiedDate":"2023-03-30"},{"lineNumber":526,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":527,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":528,"author":{"gitId":"chunzkok"},"content":"        if (grades.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":529,"author":{"gitId":"chunzkok"},"content":"            throw new NoSubmissionsFoundException(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":530,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":531,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":532,"author":{"gitId":"chunzkok"},"content":"        return new IntStatistics(grades);","lastModifiedDate":"2023-03-30"},{"lineNumber":533,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":534,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":234,"cyli133":76,"-":79,"WilliamHaiweiGu":107,"TamKengHong":38}},{"path":"src/main/java/taa/model/ReadOnlyStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" * Unmodifiable view of a student list.","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"public interface ReadOnlyStudentList {","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"     * Returns an unmodifiable view of a student list.","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"chunzkok":18}},{"path":"src/main/java/taa/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    Path getTaaDataFilePath();","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"chunzkok":3,"-":13}},{"path":"src/main/java/taa/model/Tutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"import taa.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"import taa.model.student.UniqueStudentList;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":" * Represents a tutor in the TAA application","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"public class Tutor implements ReadOnlyStudentList {","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    private static int lastId;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"    // Identity fields","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"    private final Name name;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"    private final int id;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"    private final UniqueClassLists classLists;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"    // Data fields","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"    public Tutor(Name name, Set\u003cTag\u003e tags, UniqueClassLists classes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"        CollectionUtil.requireAllNonNull(name, tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"        this.id \u003d ++lastId;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"        this.classLists \u003d classes;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"    public int getId() {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"        return this.id;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"        return name;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"cyli133"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"cyli133"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"cyli133"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"cyli133"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"cyli133"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"cyli133"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 otherStudent.getClassTags().equals(getTags());","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"cyli133"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"cyli133"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"cyli133"},"content":"        return Objects.hash(name, tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"cyli133"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"cyli133"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"cyli133"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"cyli133"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"cyli133"},"content":"                .append(\"; Email: \");","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"cyli133"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"cyli133"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"cyli133"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"cyli133"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"cyli133"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"cyli133"},"content":"    private UniqueStudentList getAllStudents() {","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"cyli133"},"content":"        UniqueStudentList students \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"cyli133"},"content":"        for (ClassList classList: this.classLists) {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"cyli133"},"content":"            students.appendList(classList.getUniqueStudentList());","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"cyli133"},"content":"        return students;","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"cyli133"},"content":"    public boolean containsClassList(ClassList tocheck) {","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"cyli133"},"content":"        return this.classLists.contains(tocheck);","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"cyli133"},"content":"    public void addClass(ClassList toAdd) {","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"cyli133"},"content":"        this.classLists.add(toAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"cyli133"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"cyli133"},"content":"        return this.getAllStudents().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"cyli133"},"content":"    public ObservableList\u003cClassList\u003e getClassList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"cyli133"},"content":"        return classLists.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"cyli133"},"content":"    public void addStudentToClass(Student student, String className) {","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"cyli133"},"content":"        this.classLists.addStudent(student, className);","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"chunzkok":3,"cyli133":119}},{"path":"src/main/java/taa/model/UniqueClassLists.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"import taa.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"import taa.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"import taa.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":" * Represents a list of classes under the same tutor.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"public class UniqueClassLists implements Iterable\u003cClassList\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"    private final ObservableList\u003cClassList\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"    private final ObservableList\u003cClassList\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"    public UniqueClassLists(ClassList classList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"        this.internalList.add(classList);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"    public UniqueClassLists() {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"    public boolean contains(ClassList toCheck) {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClassList);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"     * Adds a student to the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"    public void add(ClassList toAdd) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"     * The student must exist in the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"cyli133"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"cyli133"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"cyli133"},"content":"     * Adds a student to a class.","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"cyli133"},"content":"     * @param student The student to be added.","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"     * @param className The name of the class that the student joins.","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"cyli133"},"content":"    public void addStudent(Student student, String className) {","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"cyli133"},"content":"        for (ClassList lst: this.internalList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"            if (lst.getClassId().equals(className) \u0026\u0026 !lst.hasStudent(student)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"cyli133"},"content":"                lst.addStudent(student);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"                return;","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"cyli133"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"        // If we are here, then no such class with the specified className exists.","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"        // We shall then proceed to create a new Class List to store this student.","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"        ClassList newClassList \u003d new ClassList(className);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"        newClassList.addStudent(student);","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        this.internalList.add(newClassList);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"cyli133"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"cyli133"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"cyli133"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"cyli133"},"content":"    public void setClassLists(ClassList target, ClassList editedClassList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"cyli133"},"content":"        CollectionUtil.requireAllNonNull(target, editedClassList);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"cyli133"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"cyli133"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"cyli133"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"cyli133"},"content":"        if (!target.isSameClassList(editedClassList) \u0026\u0026 contains(editedClassList)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"cyli133"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"cyli133"},"content":"        internalList.set(index, editedClassList);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"cyli133"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"cyli133"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"cyli133"},"content":"    public void setClassLists(taa.model.UniqueClassLists replacement) {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"cyli133"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"cyli133"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"cyli133"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"cyli133"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"cyli133"},"content":"    public void setClassLists(List\u003cClassList\u003e classLists) {","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"cyli133"},"content":"        CollectionUtil.requireAllNonNull(classLists);","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"cyli133"},"content":"        if (!classListsAreUnqiue(classLists)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"cyli133"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"cyli133"},"content":"        internalList.setAll(classLists);","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"cyli133"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"cyli133"},"content":"    private boolean classListsAreUnqiue(List\u003cClassList\u003e classLists) {","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"cyli133"},"content":"        for (int i \u003d 0; i \u003c classLists.size() - 1; i++) {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"cyli133"},"content":"            for (int j \u003d i + 1; j \u003c classLists.size(); j++) {","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"cyli133"},"content":"                if (classLists.get(i).isSameClassList(classLists.get(j))) {","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"cyli133"},"content":"                    return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"cyli133"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"cyli133"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"cyli133"},"content":"        return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"cyli133"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"cyli133"},"content":"    public ObservableList\u003cClassList\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"cyli133"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"cyli133"},"content":"    public Iterator\u003cClassList\u003e iterator() {","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"cyli133"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"cyli133"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"cyli133"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"cyli133"},"content":"                || (other instanceof taa.model.UniqueClassLists // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"cyli133"},"content":"                \u0026\u0026 internalList.equals(((taa.model.UniqueClassLists) other).internalList));","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"cyli133"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"cyli133"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"chunzkok":8,"cyli133":153}},{"path":"src/main/java/taa/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    private Path taaDataFilePath \u003d Paths.get(\"data\", \"taaData.json\");","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        setTaaDataFilePath(newUserPrefs.getTaaDataFilePath());","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"    public Path getTaaDataFilePath() {","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        return taaDataFilePath;","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"    public void setTaaDataFilePath(Path taaDataFilePath) {","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(taaDataFilePath);","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        this.taaDataFilePath \u003d taaDataFilePath;","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 taaDataFilePath.equals(o.taaDataFilePath);","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"        return Objects.hash(guiSettings, taaDataFilePath);","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"        sb.append(\"Gui Settings : \").append(guiSettings);","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"        sb.append(\"\\nLocal data file location : \").append(taaDataFilePath);","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":13,"-":74}},{"path":"src/main/java/taa/model/alarm/Alarm.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.model.alarm;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import java.math.RoundingMode;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":" * Defines the Alarm class","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"public class Alarm {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"    private final int minutes;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    private final String message;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    private final int hashCode;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    private Timeline timeline;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"     * Construct an alarm instance with the specified minutes and message","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"     * @param minutes the minutes","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"     * @param message the message","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"    public Alarm(int minutes, String message) {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"        this.minutes \u003d minutes;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"        this.hashCode \u003d Objects.hash(this);","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"        this.timeline \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"     * Return the preset time of the alarm","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"     * @return the preset time of the alarm in integer minutes","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"    public int getTime() {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"        return this.minutes;","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"    //credits: adapted from chatGPT3.5 codes","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"    public double getRemainingTime() {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"#.##\");","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"        df.setRoundingMode(RoundingMode.HALF_UP);","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"        Double timeLeft \u003d this.timeline.getTotalDuration()","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"                        .subtract(this.timeline.getCurrentTime()).toMinutes();","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"        return Double.parseDouble(df.format(timeLeft));","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"     * Stops the timeline of the alarm","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"    public void stopTimeLine() {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"        this.timeline.stop();","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"cyli133"},"content":"     * Return the message of the alarm","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"cyli133"},"content":"     * @return the message of the alarm","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"    public String getMessage() {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"cyli133"},"content":"        return this.message;","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"cyli133"},"content":"     * Add the new timeline to the alarm","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"cyli133"},"content":"     * @param timeline the timeline to add","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"cyli133"},"content":"    public void addTimeline(Timeline timeline) {","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"cyli133"},"content":"        this.timeline \u003d timeline;","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"cyli133"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"cyli133"},"content":"        return this.hashCode;","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"cyli133"},"content":"    public String toString() {","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"cyli133"},"content":"        return \"Time left: \" + this.getRemainingTime()","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"cyli133"},"content":"                + \" mins | Note: \" + this.message;","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"cyli133"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"cyli133"},"content":"        if (other instanceof Alarm) {","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"cyli133"},"content":"            return ((Alarm) other).hashCode \u003d\u003d this.hashCode;","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"cyli133"},"content":"        return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"cyli133":88}},{"path":"src/main/java/taa/model/alarm/AlarmList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.model.alarm;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":" * Defines the list of alarms","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"public class AlarmList {","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"    private static final List\u003cAlarm\u003e alarms \u003d new ArrayList\u003cAlarm\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    //// alarm-level operation","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    public void addAlarm(Alarm alarm) {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        alarms.add(alarm);","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"     * Delete the alarm specified from the alarm list, stop the counting down as well","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"     * @param alarm the alarm to be deleted","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"    public static void deleteTheAlarm(Alarm alarm) {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"        for (int i \u003d 0; i \u003c alarms.size(); i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"            if (alarms.get(i) \u003d\u003d alarm) {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"                alarms.remove(i);","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"     * Delete the alarm specified in index by the user from the alarm list","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"     * @param i the index of the alarm to be deleted","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"    public static void deleteTheAlarm(int i) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"cyli133"},"content":"        alarms.get(i - 1).stopTimeLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"cyli133"},"content":"        alarms.remove(i - 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"     * Returns the alarm that has the least remaining time","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"cyli133"},"content":"     * @return the alarm that has the least remaining time","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"cyli133"},"content":"    public static Alarm getSoonestAlarm() {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"cyli133"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"        double maxRemainingTime \u003d Double.MAX_VALUE;","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"cyli133"},"content":"        int maxIndex \u003d -1;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"        for (Alarm a : alarms) {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"            if (a.getRemainingTime() \u003c maxRemainingTime) {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"cyli133"},"content":"                maxIndex \u003d i;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"cyli133"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"            i++;","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"cyli133"},"content":"        return alarms.get(maxIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"cyli133"},"content":"     * Returns the alarm message of the specified alarm","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"cyli133"},"content":"     * @param alarm whose message is to be retrieved","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"     * @return the message of the specified alarm","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"cyli133"},"content":"    public static String getAlarmAlert(Alarm alarm) {","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"cyli133"},"content":"        for (Alarm a : alarms) {","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"            if (a.equals(alarm)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"cyli133"},"content":"                return a.getMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"cyli133"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"cyli133"},"content":"        return null;","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"cyli133"},"content":"     * Return the total number of alarms","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"cyli133"},"content":"     * @return the total number of alarms","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"cyli133"},"content":"    public static int getAlarmCount() {","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"cyli133"},"content":"        return alarms.size();","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"cyli133"},"content":"     * @return A list of all alarms, including the messages and remaining time","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"cyli133"},"content":"    public String list() {","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"cyli133"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"cyli133"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"cyli133"},"content":"        for (Alarm a : alarms) {","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"cyli133"},"content":"            sb.append(\"Alarm\").append(i).append(\" \u003e\u003e\u003e\u003e\u003e \").append(a).append(\"\\n\");","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"cyli133"},"content":"            i++;","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"cyli133"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"cyli133":91}},{"path":"src/main/java/taa/model/assignment/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.InvalidGradeException;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.SubmissionNotFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":" * Assignment class, contains a list of student submissions.","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"public class Assignment {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"    private final String name;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"    private final int totalMarks;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"    private final ArrayList\u003cSubmission\u003e submissions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    private final HashMap\u003cStudent, Submission\u003e submissionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"     * Creates an assignment with specified totalMarks.","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"     * This is used when creating from storage.","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"     * @param name","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"     * @param totalMarks","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"    public Assignment(String name, int totalMarks) {","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"        this.totalMarks \u003d totalMarks;","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"     * Creates an assignment with specified totalMarks,","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"     * and then for every student in the student list: creates a new submission for them.","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"     * @param name name of the assignment","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"TamKengHong"},"content":"     * @param sl   the student list.","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"     * @param totalMarks","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"    public Assignment(String name, FilteredList\u003cStudent\u003e sl, int totalMarks) {","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"        this.totalMarks \u003d totalMarks;","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"TamKengHong"},"content":"        for (Student stu : sl) {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"TamKengHong"},"content":"            addStudent(stu);","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"TamKengHong"},"content":"    public int getTotalMarks() {","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"TamKengHong"},"content":"        return this.totalMarks;","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"TamKengHong"},"content":"    public String getName() {","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"TamKengHong"},"content":"        return this.name;","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"TamKengHong"},"content":"    public ArrayList\u003cSubmission\u003e getSubmissions() {","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"TamKengHong"},"content":"        return this.submissions;","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"TamKengHong"},"content":"     * Adds a new assignment to a student.","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"TamKengHong"},"content":"     * @param stu","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"TamKengHong"},"content":"    public void addStudent(Student stu) {","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"TamKengHong"},"content":"        Submission sub \u003d new Submission(stu, this);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"TamKengHong"},"content":"        submissions.add(sub);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"TamKengHong"},"content":"        stu.addSubmission(sub);","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"TamKengHong"},"content":"        submissionMap.put(stu, sub);","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"TamKengHong"},"content":"     * Adds a student submission using the submission string from storage.","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"TamKengHong"},"content":"     * @param stu","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"TamKengHong"},"content":"     * @param submissionString","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"TamKengHong"},"content":"    public void addStudentSubmission(Student stu, String submissionString) {","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"        String[] words \u003d submissionString.split(Submission.STR_SEP);","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"TamKengHong"},"content":"        boolean isGraded \u003d Integer.parseInt(words[1]) \u003d\u003d 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"TamKengHong"},"content":"        boolean isLateSubmission \u003d Integer.parseInt(words[2]) \u003d\u003d 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"TamKengHong"},"content":"        Submission sub \u003d new Submission(stu, this, isGraded, isLateSubmission, Integer.parseInt(words[3]));","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"TamKengHong"},"content":"        submissions.add(sub);","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"TamKengHong"},"content":"        submissionMap.put(stu, sub);","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"TamKengHong"},"content":"        stu.addSubmission(sub);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"TamKengHong"},"content":"     * Grades a student submission of an assignment.","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"     * @param student","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"TamKengHong"},"content":"     * @param marks","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"TamKengHong"},"content":"     * @param isLateSubmission","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"TamKengHong"},"content":"     * @throws SubmissionNotFoundException if there is no submission for that student.","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"TamKengHong"},"content":"     * @throws InvalidGradeException if given marks \u003c 0 or \u003e totalMarks.","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"TamKengHong"},"content":"    public void gradeSubmission(Student student, int marks, boolean isLateSubmission)","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"            throws SubmissionNotFoundException, InvalidGradeException {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"        if (submissionMap.containsKey(student)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"TamKengHong"},"content":"            submissionMap.get(student).grade(marks, isLateSubmission);","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"TamKengHong"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"            throw new SubmissionNotFoundException(student.getName().fullName);","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"TamKengHong"},"content":"     * Resets the marks and late status of a student submission.","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"TamKengHong"},"content":"     * @param student","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"TamKengHong"},"content":"     * @throws SubmissionNotFoundException if there is no submission for that student.","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"    public void ungradeSubmission(Student student) throws SubmissionNotFoundException {","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"TamKengHong"},"content":"        if (submissionMap.containsKey(student)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"TamKengHong"},"content":"            submissionMap.get(student).ungrade();","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"TamKengHong"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"            throw new SubmissionNotFoundException(student.getName().fullName);","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"chunzkok"},"content":"     * Ties up loose end to prepare this Assignment for deletion.","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"    public void delete() {","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"WilliamHaiweiGu"},"content":"        submissionMap.forEach(Student::deleteSubmission);","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"TamKengHong"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"TamKengHong"},"content":"        return this.name;","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"TamKengHong"},"content":"     * Deletes a student submission from the submission list.","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"TamKengHong"},"content":"     * @param s the student","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"TamKengHong"},"content":"    public void deleteStudentSubmission(Student s) {","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"TamKengHong"},"content":"        Submission toDelete \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"TamKengHong"},"content":"        for (Submission sub : submissions) {","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"TamKengHong"},"content":"            if (sub.getStudent().equals(s)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"TamKengHong"},"content":"                toDelete \u003d sub; // this is ok as a student can only have at most 1 submission per assignment.","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"TamKengHong"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"TamKengHong"},"content":"        if (toDelete !\u003d null) { // if student doesn\u0027t have submission for that assignment.","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"TamKengHong"},"content":"            submissions.remove(toDelete);","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":15,"WilliamHaiweiGu":2,"TamKengHong":124}},{"path":"src/main/java/taa/model/assignment/AssignmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Collection;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.parser.ParserUtil;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.InvalidGradeException;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.SubmissionNotFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":" * List of assignments. This is the singleton class that the model uses to do all things related to assignments and","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":" * submissions.","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class AssignmentList {","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final AssignmentList INSTANCE \u003d new AssignmentList();","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"    private final ArrayList\u003cAssignment\u003e assignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"    private final HashMap\u003cString, Assignment\u003e assignmentMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final Consumer\u003cAssignment\u003e addAsgnToRecords \u003d asgn -\u003e {","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignments.add(asgn);","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignmentMap.put(asgn.getName(), asgn);","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"    };","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * For all submission strings of one student, check whether they are length 5 and contains the correct input","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * format.","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param moreAsngNameTests Function that returns error msg if err occurs or null if no error","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private void testStuSubmitStorageStrs(","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"            ArrayList\u003cString\u003e subStorageStrs, ParseException.Consumer\u003cString\u003e moreAsngNameTests) throws ParseException {","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final HashSet\u003cString\u003e studentAssignment \u003d new HashSet\u003c\u003e(); // checks if a student has the same assignment.","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (String sub : subStorageStrs) {","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final String[] words \u003d sub.split(\",\");","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (words.length !\u003d 4) {","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throw new ParseException(\"Submission storage string \\\"\" + sub + \"\\\" must have 4 fields in order: assign\"","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"                        + \"ment name, is graded, is late, and marks.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"            // Try to parse the input to make sure they are valid.","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final String assignmentName \u003d ParserUtil.parseName(words[0]).toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final Assignment assignment \u003d assignmentMap.get(assignmentName);","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (assignment \u003d\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throw new ParseException(\"Unknown assignment \\\"\" + assignmentName + \"\\\" in storage string\");","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"            moreAsngNameTests.accept(assignmentName);","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final String isGradedStr \u003d words[1].trim();","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (!ParserUtil.IS_BIN_INT.test(isGradedStr)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throw new ParseException(\"Invalid isGraded value \\\"\" + isGradedStr + \"\\\" in storage string\");","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final String isLateStr \u003d words[2].trim();","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (!ParserUtil.IS_BIN_INT.test(isLateStr)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throw new ParseException(\"Invalid isLate value \\\"\" + isLateStr + \"\\\" in storage string\");","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final String marksStr \u003d words[3].trim();","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final int marks \u003d ParserUtil.parseInt(marksStr);","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (marks \u003c 0 || marks \u003e assignment.getTotalMarks()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throw new ParseException(\"Invalid value \\\"\" + marksStr + \"\\\" for marks in storage string\");","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"            // Checks for duplicate assignment for the student.","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (!studentAssignment.add(assignmentName)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throw new ParseException(\"Duplicate assignment for a student found\");","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Checks whether all the submission storage strings in the json file are valid.","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param sl","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @throws ParseException","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void checkValidStorage(Collection\u003cStudent\u003e sl) throws ParseException {","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final HashMap\u003cString, Integer\u003e assignmentCount \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final ParseException.Consumer\u003cString\u003e incAsgnCnt \u003d assignmentName -\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"WilliamHaiweiGu"},"content":"                assignmentCount.put(assignmentName, assignmentCount.getOrDefault(assignmentName, 0) + 1);","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // Step 2. Adds it to the assignmentCount.","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (Student stu : sl) {","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"WilliamHaiweiGu"},"content":"            testStuSubmitStorageStrs(stu.getSubmissionStorageStrings(), incAsgnCnt);","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // Step 3. Checks for whether all students have that assignment.","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int nStu \u003d sl.size();","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (assignmentCount.values().stream().anyMatch(v -\u003e v !\u003d nStu)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new ParseException(\"An assignment is not shared by all students.\");","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Checks whether the submission strings are valid for CSV import.","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param submissionStrs The submission strings of a student parsed from CSV file. Missing submissions will be added","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *                       into.","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @throws ParseException if error exists in string","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void testValidCsvSubmissions(ArrayList\u003cString\u003e submissionStrs) throws ParseException {","lastModifiedDate":"2023-04-06"},{"lineNumber":111,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final HashSet\u003cString\u003e unsubmittedAsgns \u003d new HashSet\u003c\u003e(assignmentMap.keySet());","lastModifiedDate":"2023-04-06"},{"lineNumber":112,"author":{"gitId":"WilliamHaiweiGu"},"content":"        testStuSubmitStorageStrs(submissionStrs, asgnNames -\u003e {","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (!unsubmittedAsgns.remove(asgnNames)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"WilliamHaiweiGu"},"content":"                throw new ParseException(\"Unknown assignment: \" + asgnNames + \". Use \"","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"WilliamHaiweiGu"},"content":"                        + AddAssignmentCommand.COMMAND_WORD + \" to add the assignment if needed.\");","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"WilliamHaiweiGu"},"content":"        });","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"WilliamHaiweiGu"},"content":"        unsubmittedAsgns.forEach(asgnNames -\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"WilliamHaiweiGu"},"content":"                submissionStrs.add(new Submission(null, assignmentMap.get(asgnNames)).toStorageString()));","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"TamKengHong"},"content":"     * Adds an assignment to the AssignmentList.","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"TamKengHong"},"content":"     * @param assignmentName","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"TamKengHong"},"content":"     * @param sl","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"TamKengHong"},"content":"     * @param totalMarks","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"TamKengHong"},"content":"     * @throws DuplicateAssignmentException if an assignment with assignmentName already exists","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"TamKengHong"},"content":"    public void add(String assignmentName, FilteredList\u003cStudent\u003e sl, int totalMarks)","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"chunzkok"},"content":"            throws DuplicateAssignmentException {","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"TamKengHong"},"content":"        if (assignmentMap.containsKey(assignmentName)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"chunzkok"},"content":"            throw new DuplicateAssignmentException(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"TamKengHong"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"TamKengHong"},"content":"            Assignment a \u003d new Assignment(assignmentName, sl, totalMarks);","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"WilliamHaiweiGu"},"content":"            addAsgnToRecords.accept(a);","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"TamKengHong"},"content":"     * Deletes an assignment from the AssignmentList.","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":144,"author":{"gitId":"TamKengHong"},"content":"     * @param assignmentName","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"TamKengHong"},"content":"     * @throws AssignmentNotFoundException if an assignment with assignmentName does not exist in the AssignmentList","lastModifiedDate":"2023-04-04"},{"lineNumber":146,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"TamKengHong"},"content":"    public void delete(String assignmentName) throws AssignmentNotFoundException {","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"TamKengHong"},"content":"        if (!assignmentMap.containsKey(assignmentName)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"chunzkok"},"content":"            throw new AssignmentNotFoundException(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"TamKengHong"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"chunzkok"},"content":"            Assignment removed \u003d assignmentMap.remove(assignmentName);","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"chunzkok"},"content":"            removed.delete();","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"chunzkok"},"content":"            assignments.remove(removed);","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Grades a student submission for an assignment of assignmentName. The submission will be updated according to the","lastModifiedDate":"2023-04-06"},{"lineNumber":159,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * marks given and whether it is a late submission.","lastModifiedDate":"2023-04-06"},{"lineNumber":160,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":161,"author":{"gitId":"TamKengHong"},"content":"     * @param assignmentName","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"chunzkok"},"content":"     * @param student","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"TamKengHong"},"content":"     * @param marks","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"TamKengHong"},"content":"     * @param isLateSubmission","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"TamKengHong"},"content":"     * @throws AssignmentNotFoundException","lastModifiedDate":"2023-04-04"},{"lineNumber":166,"author":{"gitId":"TamKengHong"},"content":"     * @throws SubmissionNotFoundException","lastModifiedDate":"2023-04-04"},{"lineNumber":167,"author":{"gitId":"TamKengHong"},"content":"     * @throws InvalidGradeException","lastModifiedDate":"2023-04-04"},{"lineNumber":168,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"TamKengHong"},"content":"    public void grade(String assignmentName, Student student, int marks, boolean isLateSubmission)","lastModifiedDate":"2023-03-25"},{"lineNumber":170,"author":{"gitId":"chunzkok"},"content":"            throws AssignmentNotFoundException, SubmissionNotFoundException, InvalidGradeException {","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"TamKengHong"},"content":"        if (!assignmentMap.containsKey(assignmentName)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"chunzkok"},"content":"            throw new AssignmentNotFoundException(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"TamKengHong"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"TamKengHong"},"content":"            assignmentMap.get(assignmentName).gradeSubmission(student, marks, isLateSubmission);","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"TamKengHong"},"content":"     * Resets the marks and late status of a student submission for an assignment of assignmentName","lastModifiedDate":"2023-04-04"},{"lineNumber":180,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":181,"author":{"gitId":"TamKengHong"},"content":"     * @param assignmentName","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"TamKengHong"},"content":"     * @param student","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"TamKengHong"},"content":"     * @throws AssignmentNotFoundException","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"chunzkok"},"content":"     * @throws SubmissionNotFoundException","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"TamKengHong"},"content":"    public void ungrade(String assignmentName, Student student) throws AssignmentNotFoundException,","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"chunzkok"},"content":"            SubmissionNotFoundException {","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"TamKengHong"},"content":"        if (!assignmentMap.containsKey(assignmentName)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"chunzkok"},"content":"            throw new AssignmentNotFoundException(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"TamKengHong"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"TamKengHong"},"content":"            assignmentMap.get(assignmentName).ungradeSubmission(student);","lastModifiedDate":"2023-03-22"},{"lineNumber":192,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":193,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":195,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"TamKengHong"},"content":"     * Lists out all the assignments and student submissions to the command line interface.","lastModifiedDate":"2023-04-04"},{"lineNumber":197,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":198,"author":{"gitId":"TamKengHong"},"content":"     * @return A string, which is the list of all assignments and submissions.","lastModifiedDate":"2023-04-04"},{"lineNumber":199,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"TamKengHong"},"content":"    public String list() {","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"TamKengHong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"TamKengHong"},"content":"        for (Assignment a : assignments) {","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"chunzkok"},"content":"            sb.append(\"Assignment \").append(a).append(\":\\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"TamKengHong"},"content":"            for (Submission s : a.getSubmissions()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"chunzkok"},"content":"                sb.append(\"  \").append(s).append(\"\\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"TamKengHong"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"TamKengHong"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * When a student is deleted, all the student\u0027s submissions must be deleted as well. This deletes all of a student\u0027s","lastModifiedDate":"2023-04-06"},{"lineNumber":213,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * submissions from the AssignmentList.","lastModifiedDate":"2023-04-06"},{"lineNumber":214,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":215,"author":{"gitId":"TamKengHong"},"content":"     * @param s the student","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"TamKengHong"},"content":"    public void deleteStudent(Student s) {","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignments.forEach(a -\u003e a.deleteStudentSubmission(s));","lastModifiedDate":"2023-04-06"},{"lineNumber":219,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * When a student is added, all the existing assignments should be linked to the new student as well. This creates","lastModifiedDate":"2023-04-06"},{"lineNumber":223,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * new submissions for an added student for all the existing assignments.","lastModifiedDate":"2023-04-06"},{"lineNumber":224,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":225,"author":{"gitId":"TamKengHong"},"content":"     * @param s the student","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"TamKengHong"},"content":"    public void addStudent(Student s) {","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignments.forEach(a -\u003e a.addStudent(s));","lastModifiedDate":"2023-04-06"},{"lineNumber":229,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":230,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":231,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * On startup, this will populate the assignment list and submissions from the submission storage string data held","lastModifiedDate":"2023-04-06"},{"lineNumber":233,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * by each student. This is also called when we edit a student.","lastModifiedDate":"2023-04-06"},{"lineNumber":234,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":235,"author":{"gitId":"TamKengHong"},"content":"     * @param sl the student list","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void initFromStorage(FilteredList\u003cStudent\u003e sl, Assignment[] asgnArr) {","lastModifiedDate":"2023-04-07"},{"lineNumber":238,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignments.clear();","lastModifiedDate":"2023-04-08"},{"lineNumber":239,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assignmentMap.clear();","lastModifiedDate":"2023-04-08"},{"lineNumber":240,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":241,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // Step 0: populate the assignment list and hashmap from data.","lastModifiedDate":"2023-04-08"},{"lineNumber":242,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Arrays.stream(asgnArr).forEach(addAsgnToRecords);","lastModifiedDate":"2023-04-08"},{"lineNumber":243,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":244,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // Step 1: check validity of student data","lastModifiedDate":"2023-04-08"},{"lineNumber":245,"author":{"gitId":"TamKengHong"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":246,"author":{"gitId":"TamKengHong"},"content":"            checkValidStorage(sl);","lastModifiedDate":"2023-04-06"},{"lineNumber":247,"author":{"gitId":"TamKengHong"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":248,"author":{"gitId":"TamKengHong"},"content":"            // Wipe everything \u003e:) They naughty","lastModifiedDate":"2023-04-06"},{"lineNumber":249,"author":{"gitId":"TamKengHong"},"content":"            for (Student stu : sl) {","lastModifiedDate":"2023-04-06"},{"lineNumber":250,"author":{"gitId":"TamKengHong"},"content":"                stu.getSubmissionStorageStrings().clear();","lastModifiedDate":"2023-04-06"},{"lineNumber":251,"author":{"gitId":"TamKengHong"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":252,"author":{"gitId":"TamKengHong"},"content":"            System.out.println(\"Parsing of submission storage string error: \" + e.getMessage());","lastModifiedDate":"2023-04-06"},{"lineNumber":253,"author":{"gitId":"WilliamHaiweiGu"},"content":"            /* TODO Calling logger here seems sus, what is a better design?","lastModifiedDate":"2023-04-08"},{"lineNumber":254,"author":{"gitId":"WilliamHaiweiGu"},"content":"            Also is this the best design to do the checking? */","lastModifiedDate":"2023-04-08"},{"lineNumber":255,"author":{"gitId":"TamKengHong"},"content":"            return;","lastModifiedDate":"2023-04-06"},{"lineNumber":256,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":257,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":258,"author":{"gitId":"TamKengHong"},"content":"        // Step 2: populate each assignment with each student submission.","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"TamKengHong"},"content":"        for (Student stu : sl) {","lastModifiedDate":"2023-03-30"},{"lineNumber":260,"author":{"gitId":"TamKengHong"},"content":"            for (String submissionString : stu.getSubmissionStorageStrings()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":261,"author":{"gitId":"WilliamHaiweiGu"},"content":"                String assignmentName \u003d submissionString.split(Submission.STR_SEP)[0];","lastModifiedDate":"2023-04-08"},{"lineNumber":262,"author":{"gitId":"TamKengHong"},"content":"                Assignment toAdd \u003d assignmentMap.get(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":263,"author":{"gitId":"TamKengHong"},"content":"                toAdd.addStudentSubmission(stu, submissionString);","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"TamKengHong"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":268,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"TamKengHong"},"content":"     * @param name","lastModifiedDate":"2023-04-04"},{"lineNumber":270,"author":{"gitId":"TamKengHong"},"content":"     * @return true if an assignment with the provided name exists.","lastModifiedDate":"2023-04-04"},{"lineNumber":271,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"chunzkok"},"content":"    public boolean contains(String name) {","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"chunzkok"},"content":"        return this.assignmentMap.containsKey(name);","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":276,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":277,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public Assignment[] getAssignments() {","lastModifiedDate":"2023-04-07"},{"lineNumber":278,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return assignments.toArray(new Assignment[0]);","lastModifiedDate":"2023-04-07"},{"lineNumber":279,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":280,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":18,"WilliamHaiweiGu":137,"TamKengHong":125}},{"path":"src/main/java/taa/model/assignment/Submission.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.InvalidGradeException;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":" * An assignment submission for a particular student.","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"public class Submission {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String STR_SEP \u003d \",\";","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final Assignment assignment;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final Student student;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"    private boolean isGraded \u003d false;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"    private boolean isLateSubmission \u003d false;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"    private int marks \u003d 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"     * Constructor for our submission.","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"     * @param student","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"     * @param assignment","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    public Submission(Student student, Assignment assignment) {","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"        this.student \u003d student;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"     * Creates a Submission, this is used when creating from storage.","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"     * @param student","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"     * @param assignment","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"TamKengHong"},"content":"     * @param isGraded","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"     * @param isLateSubmission","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"     * @param marks","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"    public Submission(Student student, Assignment assignment, boolean isGraded,","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"                      boolean isLateSubmission, int marks) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"TamKengHong"},"content":"        this.student \u003d student;","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"TamKengHong"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"        this.isGraded \u003d isGraded;","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"TamKengHong"},"content":"        this.isLateSubmission \u003d isLateSubmission;","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"TamKengHong"},"content":"        this.marks \u003d marks;","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"TamKengHong"},"content":"    public Student getStudent() {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"TamKengHong"},"content":"        return this.student;","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"TamKengHong"},"content":"     * Grades a students submission with the given marks.","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"TamKengHong"},"content":"     * @param marks","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"TamKengHong"},"content":"     * @throws InvalidGradeException when marks is out of range 0-totalMarks.","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"TamKengHong"},"content":"    public void grade(int marks, boolean isLateSubmission) throws InvalidGradeException {","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"TamKengHong"},"content":"        if (marks \u003c 0) {","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"TamKengHong"},"content":"            throw new InvalidGradeException(\"Student marks is less than 0\");","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"TamKengHong"},"content":"        int totalMarks \u003d this.assignment.getTotalMarks();","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"TamKengHong"},"content":"        if (marks \u003e totalMarks) {","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"TamKengHong"},"content":"            throw new InvalidGradeException(\"Student marks is more than assignment total marks of \" + totalMarks);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"TamKengHong"},"content":"        isGraded \u003d true;","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"TamKengHong"},"content":"        this.marks \u003d marks;","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"TamKengHong"},"content":"        this.isLateSubmission \u003d isLateSubmission;","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"TamKengHong"},"content":"        student.updateSubmission(this);","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"TamKengHong"},"content":"     * Resets the marks, and late status of a student submission.","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"TamKengHong"},"content":"    public void ungrade() {","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"TamKengHong"},"content":"        this.isGraded \u003d false;","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"TamKengHong"},"content":"        this.isLateSubmission \u003d false;","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"TamKengHong"},"content":"        this.marks \u003d 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"TamKengHong"},"content":"        student.updateSubmission(this);","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"     * Describes the assignment this submission belongs to, along with details of this submission.","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"TamKengHong"},"content":"     * @return the details of the submission","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"    public String describeSubmission() {","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"TamKengHong"},"content":"        String gradeStatus \u003d this.isGraded ? marks + \"/\" + assignment.getTotalMarks() : \"Ungraded\";","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"TamKengHong"},"content":"        String late \u003d this.isLateSubmission ? \"(*Late Submission*)\" : \"\";","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"TamKengHong"},"content":"        return String.format(\"%s (Grade: %s) %s\", this.assignment.toString(), gradeStatus, late);","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"TamKengHong"},"content":"     * @param assignmentName","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"TamKengHong"},"content":"     * @return true if this submission belongs to an assignment with the given name.","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"    public boolean isForAssignment(String assignmentName) {","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"        return this.assignment.toString().equals(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"TamKengHong"},"content":"     * @return Returns the score of this submission, if graded. Otherwise, an Optional.empty() is returned.","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"    public Optional\u003cInteger\u003e getScore() {","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"chunzkok"},"content":"        if (isGraded) {","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"            return Optional.of(this.marks);","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"TamKengHong"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"TamKengHong"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"TamKengHong"},"content":"        char gradeChar \u003d isGraded ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"TamKengHong"},"content":"        String late \u003d this.isLateSubmission ? \"(*Late Submission*)\" : \"\";","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"TamKengHong"},"content":"        return String.format(\"[%c] %s: %d/%d marks. %s\", gradeChar, student.getName(),","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"TamKengHong"},"content":"                marks, assignment.getTotalMarks(), late);","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Creates a string for a submission to store into our storage. The data given is separated by commas, in the","lastModifiedDate":"2023-04-05"},{"lineNumber":122,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * following format: \"assignmentName,isGraded,isLate,marks\"","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":124,"author":{"gitId":"TamKengHong"},"content":"     * @return The storage string","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"TamKengHong"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String assignmentName \u003d assignment.getName();","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int graded \u003d isGraded ? 1 : 0;","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int late \u003d isLateSubmission ? 1 : 0;","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return assignmentName + STR_SEP + graded + STR_SEP + late + STR_SEP + marks;","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":29,"WilliamHaiweiGu":14,"TamKengHong":89}},{"path":"src/main/java/taa/model/assignment/exceptions/AssignmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment.exceptions;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.Assignment;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":" * Represents an error which occurs during execution involving an {@link Assignment}.","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"public class AssignmentException extends Exception {","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    public AssignmentException(String message) {","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"        super(message);","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    public AssignmentException(String message, Throwable cause) {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"chunzkok":15,"TamKengHong":4}},{"path":"src/main/java/taa/model/assignment/exceptions/AssignmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment.exceptions;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":" * An exception where the assignment is not found.","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"public class AssignmentNotFoundException extends AssignmentException {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"    public AssignmentNotFoundException(String assignmentName) {","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"        super(String.format(\"Assignment %s could not be found\", assignmentName));","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"chunzkok":3,"TamKengHong":7}},{"path":"src/main/java/taa/model/assignment/exceptions/DuplicateAssignmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment.exceptions;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * Signals that this operation will result in a duplicate Assignment being added.","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"public class DuplicateAssignmentException extends AssignmentException {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"    public DuplicateAssignmentException(String assignmentName) {","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"        super(\"Duplicate assignment name:  \" + assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"chunzkok":9,"TamKengHong":1}},{"path":"src/main/java/taa/model/assignment/exceptions/InvalidGradeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment.exceptions;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":" * Exception where the grade has marks \u003c 0 or \u003e totalMarks.","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"public class InvalidGradeException extends AssignmentException {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"    public InvalidGradeException(String message) {","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"        super(message);","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"chunzkok":1,"TamKengHong":9}},{"path":"src/main/java/taa/model/assignment/exceptions/NoGradeVarianceException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment.exceptions;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * Signals that a normal distribution curve cannot be drawn due to variance being 0.","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"public class NoGradeVarianceException extends Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"     * @param assignmentName Name of the assignment with no variance in submission grades.","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"     * @param mean Mean of the grade submissions.","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    public NoGradeVarianceException(String assignmentName, double mean) {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"        super(String.format(\"No variance found for assignment %s! \\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"                + \"All graded submissions have a score of %.2f\", assignmentName, mean));","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"chunzkok":14,"TamKengHong":1}},{"path":"src/main/java/taa/model/assignment/exceptions/NoSubmissionsFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment.exceptions;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * Signals that there are submissions to display statistics for.","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"public class NoSubmissionsFoundException extends Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"     * @param assignmentName Name of the assignment with no submissions.","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"    public NoSubmissionsFoundException(String assignmentName) {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"        super(String.format(","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"                \"No submissions found for assignment %s in the current class list!\",","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"                assignmentName));","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"chunzkok":15,"TamKengHong":1}},{"path":"src/main/java/taa/model/assignment/exceptions/SubmissionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment.exceptions;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":" * Exception where the submission is not found.","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"public class SubmissionNotFoundException extends AssignmentException {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"    public SubmissionNotFoundException(String studentName) {","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"        super(\"Submission of \" + studentName + \" not found\");","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"chunzkok":8,"TamKengHong":2}},{"path":"src/main/java/taa/model/student/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.AppUtil;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.logic.parser.ParserUtil;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":" * Attendance class, manages attendance and class participation points","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"public class Attendance {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final int NUM_WEEKS \u003d 12;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final int MAX_PP \u003d 700;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String WEEK_ERROR_MSG \u003d \"Week number invalid. Must be integer between 1-\" + NUM_WEEKS + \" (incl\"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"            + \"usive).\";","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String ATD_ERROR_MSG \u003d \"Attendance marks invalid. Must be exactly \" + NUM_WEEKS + \" integers ei\"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"            + \"ther 0 or 1.\";","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String POINTS_ERROR_MSG \u003d \"Participation points invalid. Must be exactly \" + NUM_WEEKS + \" inte\"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"            + \"gers between 0-\" + MAX_PP + \" (inclusive)\";","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String PP_UNACCEPTABLE_MSG \u003d \"Participation points invalid. Must be exactly \" + NUM_WEEKS + \" i\"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"            + \"ntegers between -1 and \" + MAX_PP + \" (inclusive)\";","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    public static final String ORIGINAL_ATD \u003d \"0;0;0;0;0;0;0;0;0;0;0;0\";","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    public static final String ORIGINAL_PP \u003d \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\";","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Checks if points is a valid value or -1","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param points String version of points to be checked","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return boolean if points is valid or not","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final Predicate\u003cString\u003e IS_ACCEPTABLE_PARTICIPATION_POINT \u003d","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"            points -\u003e \"-1\".equals(points) || isValidParticipationPoints(points);","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final boolean[] attendanceList \u003d new boolean[NUM_WEEKS];","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"    private final int[] participationPoint \u003d new int[NUM_WEEKS];","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"     * constructor for attendance class","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"    public Attendance(String atd, String pp) {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"        requireNonNull(atd);","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"        AppUtil.checkArgument(isValidAtdStr(atd), ATD_ERROR_MSG);","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"        requireNonNull(pp);","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"        AppUtil.checkArgument(isAcceptablePpStr(pp), POINTS_ERROR_MSG);","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"        String[] atdArr \u003d atd.split(\";\");","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"        String[] ppArr \u003d pp.split(\";\");","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"        for (int i \u003d 0; i \u003c atdArr.length; i++) {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.attendanceList[i] \u003d \"1\".equals(atdArr[i].trim());","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.participationPoint[i] \u003d Integer.parseInt(ppArr[i].trim());","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Checks if points is a valid value","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param points String version of points to be checked","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return boolean if points is valid or not","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static boolean isValidParticipationPoints(String points) {","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int pp;","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"            pp \u003d Integer.parseInt(points);","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return false;","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return pp \u003e\u003d 0 \u0026\u0026 pp \u003c\u003d MAX_PP;","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"     * Checks if the week is valid","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"     * @param week String value of week","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"     * @return true if week is valid and otherwise","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"bojie3"},"content":"    public static boolean isValidWeek(String week) {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int intWeek;","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"            intWeek \u003d Integer.parseInt(week);","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"bojie3"},"content":"            return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"        if (intWeek \u003c\u003d 0 || intWeek \u003e NUM_WEEKS) {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"bojie3"},"content":"            System.out.println(week);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"bojie3"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"bojie3"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Convert string value of week into int, called after ensuring {@code week} is valid","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param week String value of week","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return int value of week","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static int convertToIntegerWeek(String week) {","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Integer.parseInt(week);","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static boolean isValidArgStr(String argStr, Predicate\u003cString\u003e p) {","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String[] args \u003d argStr.split(\";\");","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return args.length \u003d\u003d NUM_WEEKS \u0026\u0026 Arrays.stream(args).map(String::trim).allMatch(p);","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static boolean isAcceptablePpStr(String ppStr) {","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return isValidArgStr(ppStr, IS_ACCEPTABLE_PARTICIPATION_POINT);","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static boolean isValidAtdStr(String atdStr) {","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return isValidArgStr(atdStr, ParserUtil.IS_BIN_INT);","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"bojie3"},"content":"     * @return number of weeks marked present","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"bojie3"},"content":"    public int getNumWeeksPresent() {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"bojie3"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"        for (int i \u003d 0; i \u003c NUM_WEEKS; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"bojie3"},"content":"            if (this.attendanceList[i]) {","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"bojie3"},"content":"                count++;","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"bojie3"},"content":"        return count;","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"bojie3"},"content":"     * Marks attendance as true","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":130,"author":{"gitId":"bojie3"},"content":"     * @param week week that is to be marked","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"bojie3"},"content":"    public void markAttendance(int week) {","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"bojie3"},"content":"        this.attendanceList[week] \u003d true;","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"bojie3"},"content":"        this.participationPoint[week] \u003d 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"bojie3"},"content":"     * Checks if the week have been marked","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"bojie3"},"content":"     * @param week week to be checked","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"bojie3"},"content":"     * @return true if week is marked else false","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"bojie3"},"content":"    public boolean isMarkedWeek(int week) {","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"bojie3"},"content":"        return this.attendanceList[week];","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"bojie3"},"content":"     * Function to unmark attendance","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"bojie3"},"content":"     * @param week index to unmark","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"bojie3"},"content":"    public void unmarkAttendance(int week) {","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"bojie3"},"content":"        this.attendanceList[week] \u003d false;","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"bojie3"},"content":"        this.participationPoint[week] \u003d -1;","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Inserts participation points to the specified week. Called only after ensuring points and week is valid","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"bojie3"},"content":"     * @param week   week to add points","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"bojie3"},"content":"     * @param points value of points to add","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"bojie3"},"content":"    public void insertParticipationPoints(int week, int points) {","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"bojie3"},"content":"        this.participationPoint[week] \u003d points;","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"bojie3"},"content":"     * Calculate average points of student. Only consider weeks where attendance is marked","lastModifiedDate":"2023-04-04"},{"lineNumber":169,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":170,"author":{"gitId":"bojie3"},"content":"     * @return the average participation points of student","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"bojie3"},"content":"    public float getAveragePP() {","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"bojie3"},"content":"        int pt \u003d 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"bojie3"},"content":"        int weeks \u003d 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"chunzkok"},"content":"        for (int i \u003d 0; i \u003c NUM_WEEKS; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"bojie3"},"content":"            if (this.attendanceList[i]) {","lastModifiedDate":"2023-04-04"},{"lineNumber":177,"author":{"gitId":"bojie3"},"content":"                pt +\u003d this.participationPoint[i];","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"bojie3"},"content":"                weeks +\u003d 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"bojie3"},"content":"        if (weeks \u003d\u003d 0) {","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"bojie3"},"content":"            return 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"bojie3"},"content":"        return (float) pt / weeks;","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"bojie3"},"content":"     * @return string version of attendancelist to be stored in json file","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"bojie3"},"content":"    public String atdStrorageStr() {","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"WilliamHaiweiGu"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":192,"author":{"gitId":"bojie3"},"content":"        for (boolean atd : this.attendanceList) {","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"WilliamHaiweiGu"},"content":"            res.append(atd ? \"1;\" : \"0;\");","lastModifiedDate":"2023-03-31"},{"lineNumber":194,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"bojie3"},"content":"        return res.substring(0, 23);","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"bojie3"},"content":"     * @return returns string version of participation points to be stored in json file","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"bojie3"},"content":"    public String partPointsStorageStr() {","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"WilliamHaiweiGu"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":203,"author":{"gitId":"bojie3"},"content":"        for (int val : this.participationPoint) {","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"WilliamHaiweiGu"},"content":"            res.append(val).append(\";\");","lastModifiedDate":"2023-03-31"},{"lineNumber":205,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"bojie3"},"content":"        return res.substring(0, res.length() - 1);","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"chunzkok"},"content":"     * Updates the attendance counter for the entire class list.","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"chunzkok"},"content":"    public void updateAttendanceCounter(int[] counter) {","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"chunzkok"},"content":"        for (int i \u003d 0; i \u003c NUM_WEEKS; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"chunzkok"},"content":"            counter[i] +\u003d attendanceList[i] ? 1 : 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"bojie3"},"content":"     * @return String version of participation points for list command","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"bojie3"},"content":"    public String listAtdString() {","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"WilliamHaiweiGu"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":223,"author":{"gitId":"bojie3"},"content":"        for (int i \u003d 0; i \u003c this.attendanceList.length; i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"WilliamHaiweiGu"},"content":"            res.append(String.format(\"Week %d: [%s]\\n\", i + 1, this.attendanceList[i] ? \"X\" : \" \"));","lastModifiedDate":"2023-03-31"},{"lineNumber":225,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return res.toString();","lastModifiedDate":"2023-03-31"},{"lineNumber":227,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"bojie3"},"content":"     * @return String version of participation points for list command","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"bojie3"},"content":"    public String listPpString() {","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"WilliamHaiweiGu"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":234,"author":{"gitId":"bojie3"},"content":"        for (int i \u003d 0; i \u003c this.participationPoint.length; i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"WilliamHaiweiGu"},"content":"            res.append(String.format(\"Week %d: [%d]\\n\", i + 1, this.participationPoint[i]));","lastModifiedDate":"2023-03-31"},{"lineNumber":236,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return res.toString();","lastModifiedDate":"2023-03-31"},{"lineNumber":238,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":240,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":241,"author":{"gitId":"bojie3"},"content":"     * @param str Attendance string from json file","lastModifiedDate":"2023-04-06"},{"lineNumber":242,"author":{"gitId":"bojie3"},"content":"     * @return true if string is valid and false otherwise","lastModifiedDate":"2023-04-06"},{"lineNumber":243,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":244,"author":{"gitId":"bojie3"},"content":"    public static boolean isValidAttendanceStorageString(String str) {","lastModifiedDate":"2023-04-06"},{"lineNumber":245,"author":{"gitId":"bojie3"},"content":"        String[] arr \u003d str.split(\";\");","lastModifiedDate":"2023-04-06"},{"lineNumber":246,"author":{"gitId":"bojie3"},"content":"        if (arr.length !\u003d 12) {","lastModifiedDate":"2023-04-06"},{"lineNumber":247,"author":{"gitId":"bojie3"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":248,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":249,"author":{"gitId":"bojie3"},"content":"        for (String val : arr) {","lastModifiedDate":"2023-04-06"},{"lineNumber":250,"author":{"gitId":"bojie3"},"content":"            if (!val.equals(\"0\") \u0026\u0026 !val.equals(\"1\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":251,"author":{"gitId":"bojie3"},"content":"                return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":252,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":253,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":254,"author":{"gitId":"bojie3"},"content":"        return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":255,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":256,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":257,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":258,"author":{"gitId":"bojie3"},"content":"     * @param str Participation points string from storage","lastModifiedDate":"2023-04-06"},{"lineNumber":259,"author":{"gitId":"bojie3"},"content":"     * @return true if string is valid and false otherwise","lastModifiedDate":"2023-04-06"},{"lineNumber":260,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":261,"author":{"gitId":"bojie3"},"content":"    public static boolean isValidPpStorageString(String str) {","lastModifiedDate":"2023-04-06"},{"lineNumber":262,"author":{"gitId":"bojie3"},"content":"        String[] arr \u003d str.split(\";\");","lastModifiedDate":"2023-04-06"},{"lineNumber":263,"author":{"gitId":"bojie3"},"content":"        if (arr.length !\u003d 12) {","lastModifiedDate":"2023-04-06"},{"lineNumber":264,"author":{"gitId":"bojie3"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":265,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":266,"author":{"gitId":"bojie3"},"content":"        for (String val : arr) {","lastModifiedDate":"2023-04-06"},{"lineNumber":267,"author":{"gitId":"bojie3"},"content":"            try {","lastModifiedDate":"2023-04-06"},{"lineNumber":268,"author":{"gitId":"bojie3"},"content":"                int convertedPoint \u003d Integer.parseInt(val);","lastModifiedDate":"2023-04-06"},{"lineNumber":269,"author":{"gitId":"bojie3"},"content":"                if (convertedPoint \u003c -1 || convertedPoint \u003e 700) {","lastModifiedDate":"2023-04-06"},{"lineNumber":270,"author":{"gitId":"bojie3"},"content":"                    return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":271,"author":{"gitId":"bojie3"},"content":"                }","lastModifiedDate":"2023-04-06"},{"lineNumber":272,"author":{"gitId":"bojie3"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":273,"author":{"gitId":"bojie3"},"content":"                return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":274,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":275,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":276,"author":{"gitId":"bojie3"},"content":"        return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":277,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":278,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chunzkok":14,"bojie3":174,"WilliamHaiweiGu":90}},{"path":"src/main/java/taa/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.AppUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * Represents a Student\u0027s name in the class list.","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"            \"Names should only contain letters and spaces, and it should not be blank\";","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final int hashcode;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"        hashcode \u003d fullName.hashCode();","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return hashcode;","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":6,"-":52,"WilliamHaiweiGu":3}},{"path":"src/main/java/taa/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.StringUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chunzkok":6,"-":25}},{"path":"src/main/java/taa/model/student/SameStudentPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"public class SameStudentPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"    private final ClassList classList;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    public SameStudentPredicate(ClassList classList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"        this.classList \u003d classList;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"        return classList.hasStudent(student);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"cyli133":22}},{"path":"src/main/java/taa/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.Submission;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":" * Represents a Student in TAA.","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"public class Student {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    private static int lastId;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    private final int id;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    private final Attendance atd;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    private final Set\u003cTag\u003e classTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"    private final Submissions submissions \u003d new Submissions(new ArrayList\u003c\u003e(), this);","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"    private final ArrayList\u003cString\u003e submissionStringArr;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final int hashcode;","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"    public Student(Name name, String atd, String pp, ArrayList\u003cString\u003e submissionStrArr, Set\u003cTag\u003e classTags) {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        CollectionUtil.requireAllNonNull(name, classTags);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"        this.id \u003d ++lastId;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"        this.atd \u003d new Attendance(atd, pp);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        this.classTags.addAll(classTags);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"        this.submissionStringArr \u003d submissionStrArr;","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"        hashcode \u003d Objects.hash(name, this.classTags);","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"    public int getId() {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"        return this.id;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"     * @return number of week student attended class","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"    public int getNumWeeksPresent() {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"        return this.atd.getNumWeeksPresent();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"     * @return the average participation points of student in all classes attended so far","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"    public float getPartPoints() {","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"        return this.atd.getAveragePP();","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"    public Attendance getAtd() {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"        return this.atd;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"     * Returns an immutable class tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"    public Set\u003cTag\u003e getClassTags() {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"        return Collections.unmodifiableSet(classTags);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"TamKengHong"},"content":"     * Adds a new submission to this student.","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"    public void addSubmission(Submission submission) {","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"        this.submissions.addSubmission(submission);","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"TamKengHong"},"content":"        if (!submissionStringArr.contains(submission.toStorageString())) { // if doesn\u0027t exist in storage.","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"TamKengHong"},"content":"            submissionStringArr.add(submission.toStorageString());","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"     * Removes a submission attributed to this student.","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"    public void deleteSubmission(Submission submission) {","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"        this.submissions.deleteSubmission(submission);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"TamKengHong"},"content":"        submissionStringArr.remove(submission.toStorageString());","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"TamKengHong"},"content":"     * Updates the submission storage string when grading/ungrading a student submission.","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"TamKengHong"},"content":"     * @param submission","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"TamKengHong"},"content":"    public void updateSubmission(Submission submission) {","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"TamKengHong"},"content":"        int idx \u003d submissions.getSubmissionIndex(submission);","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"TamKengHong"},"content":"        submissionStringArr.set(idx, submission.toStorageString());","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"     * Returns the latest submission by this student.","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"    public Submission getLatestSubmission() {","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"        return this.submissions.getLatestSubmission();","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"TamKengHong"},"content":"    public ArrayList\u003cString\u003e getSubmissionStorageStrings() {","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"TamKengHong"},"content":"        return this.submissionStringArr;","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String getSubmissionStorageString() {","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"WilliamHaiweiGu"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (String sub : submissionStringArr) {","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"WilliamHaiweiGu"},"content":"            ans.append(sub).append(\u0027;\u0027);","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":123,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return ans.toString();","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":125,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Returns true if both persons have the same name. This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-03-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"chunzkok"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 otherStudent.getName().equals(getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"chunzkok"},"content":"     * Returns the grade obtained by the student, if it exists.","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"chunzkok"},"content":"     * Otherwise, an Optional.empty() is returned.","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"chunzkok"},"content":"     * @throws AssignmentNotFoundException if the assignment does not exist.","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"chunzkok"},"content":"    public Optional\u003cInteger\u003e getGradesForAssignment(String assignmentName)","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"chunzkok"},"content":"            throws AssignmentNotFoundException {","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"chunzkok"},"content":"        return this.submissions.getSubmissionScore(assignmentName);","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"chunzkok"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"chunzkok"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"chunzkok"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 otherStudent.getClassTags().equals(getClassTags());","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return hashcode;","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"chunzkok"},"content":"        builder.append(getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"chunzkok"},"content":"        Set\u003cTag\u003e classes \u003d getClassTags();","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"chunzkok"},"content":"        if (!classes.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"chunzkok"},"content":"            builder.append(\"; Classes: \");","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"chunzkok"},"content":"            classes.forEach(builder::append);","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"chunzkok"},"content":"     * Updates the attendance counter for the entire class list.","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"chunzkok"},"content":"    public void updateAttendanceCounter(int[] counter) {","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"chunzkok"},"content":"        this.atd.updateAttendanceCounter(counter);","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":72,"bojie3":19,"-":59,"WilliamHaiweiGu":14,"TamKengHong":28}},{"path":"src/main/java/taa/model/student/Submissions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.Submission;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" * A list of Submissions belonging to a Student.","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"public class Submissions {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"    private final ArrayList\u003cSubmission\u003e submissions;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"    private final Student student;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     * @param submissions A list containing Submissions.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"    public Submissions(ArrayList\u003cSubmission\u003e submissions, Student student) {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        this.submissions \u003d submissions;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        this.student \u003d student;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     * Adds a submission.","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    public void addSubmission(Submission submission) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        this.submissions.add(submission);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"     * Removes a submission.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    public void deleteSubmission(Submission submission) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        this.submissions.remove(submission);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"    public int getSubmissionIndex(Submission s) {","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"        return this.submissions.indexOf(s);","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"     * Returns the latest submission.","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"    public Submission getLatestSubmission() {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"TamKengHong"},"content":"        if (submissions.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"TamKengHong"},"content":"            return null;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"TamKengHong"},"content":"        return submissions.get(submissions.size() - 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Storage string representation for the submissions","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String getStorageString() {","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"TamKengHong"},"content":"        for (Submission sub : this.submissions) {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"            ans.append(sub.toStorageString()).append(\u0027;\u0027);","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return ans.toString();","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"     * Returns the score for the student\u0027s submission for the given assignment name.","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"     * If the submission is not graded yet, an Optional.empty() is returned.","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"     * @throws AssignmentNotFoundException if an assignment with the specified name cannot be found.","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"    public Optional\u003cInteger\u003e getSubmissionScore(String assignmentName) throws AssignmentNotFoundException {","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        Submission submission \u003d getSubmissionByAssignmentName(assignmentName)","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"                .orElseThrow(() -\u003e new AssignmentNotFoundException(assignmentName));","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"        return submission.getScore();","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"     * Returns this Student\u0027s submission for a given assignment name.","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"     * If it does not exist, an Optional.empty() is returned.","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"    private Optional\u003cSubmission\u003e getSubmissionByAssignmentName(String assignmentName) {","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"        Submission result \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"        for (Submission submission : this.submissions) {","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"            if (submission.isForAssignment(assignmentName)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"                result \u003d submission;","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"        return Optional.ofNullable(result);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"chunzkok":67,"WilliamHaiweiGu":5,"TamKengHong":18}},{"path":"src/main/java/taa/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":" * A student is considered unique by comparing using {@code Student#isSamePerson(Student)}.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":" * As such, adding and updating of persons uses Student#isSamePerson(Student) for equality","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":" * so as to ensure that the student being added or updated is unique in terms of identity","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":" * in the UniqueStudentList. However, the removal of a student uses Student#equals(Object) so","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":" * as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"     * Adds a student to the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"        CollectionUtil.requireAllNonNull(target, editedStudent);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"     * The student must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"     * Updates the student list to propagate change to the rest of the model.","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"     * @param student The student to be refreshed.","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"    public void update(Student student) {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"        int index \u003d internalList.indexOf(student);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"        internalList.add(index, internalList.remove(index));","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"cyli133"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"cyli133"},"content":"     * Append the list of students to the list of students","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"cyli133"},"content":"     * @param list","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"cyli133"},"content":"     * @return","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"cyli133"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"cyli133"},"content":"    public UniqueStudentList appendList(UniqueStudentList list) {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"cyli133"},"content":"        this.internalList.addAll(list.internalList);","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"cyli133"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"cyli133"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"cyli133"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"cyli133"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"chunzkok"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"        CollectionUtil.requireAllNonNull(students);","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"chunzkok"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"chunzkok"},"content":"        internalList.setAll(students);","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"chunzkok"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"chunzkok"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"chunzkok"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"chunzkok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"chunzkok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"chunzkok"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"chunzkok"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"chunzkok"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"chunzkok"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static HashMap\u003cName, Student\u003e getNameToStuMap(List\u003cStudent\u003e stuList) {","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final HashMap\u003cName, Student\u003e ans \u003d new HashMap\u003c\u003e(stuList.size() \u003c\u003c 1);","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (Student stu : stuList) {","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"WilliamHaiweiGu"},"content":"            ans.put(stu.getName(), stu);","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return ans;","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"chunzkok"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"chunzkok"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return getNameToStuMap(students).size() \u003e\u003d students.size();","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"chunzkok":138,"cyli133":16,"WilliamHaiweiGu":10}},{"path":"src/main/java/taa/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student.exceptions;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"chunzkok":3,"-":8}},{"path":"src/main/java/taa/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student.exceptions;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"chunzkok":6}},{"path":"src/main/java/taa/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.AppUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * Represents a Tag in the class list.","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should only contain alphanumeric characters,\"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"        + \" \u0027-\u0027 and \u0027_\u0027\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}-_]+\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"        AppUtil.checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunzkok":8,"-":47}},{"path":"src/main/java/taa/storage/JsonAdaptedAssignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"package taa.storage;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.Assignment;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"/** Jackson-friendly version of {@link Assignment}.*/","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class JsonAdaptedAssignment {","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final String name;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final String totalMarks;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Constructs a {@link JsonAdaptedAssignment} with the given fields in JSON file. Called when reading from JSON. */","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @JsonCreator","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public JsonAdaptedAssignment(@JsonProperty(\"name\") String name, @JsonProperty(\"totalMarks\") String totalMarks) {","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.totalMarks \u003d totalMarks;","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Constructs a {@link JsonAdaptedAssignment} from assignment object fields. Called when saving to JSON. */","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public JsonAdaptedAssignment(Assignment assignment) {","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"        name \u003d assignment.getName();","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"        totalMarks \u003d Integer.toString(assignment.getTotalMarks());","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@link Assignment} object.","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public Assignment toModelType() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new IllegalValueException(\"An assignment in JSON file has name value missing.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (totalMarks \u003d\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new IllegalValueException(\"An assignment in JSON file has totalMarks value missing.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return new Assignment(name, Integer.parseInt(totalMarks));","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new IllegalValueException(\"Invalid total marks value \\\"\" + totalMarks + \"\\\" in JSON file.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"WilliamHaiweiGu":45}},{"path":"src/main/java/taa/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"/** Jackson-friendly version of {@link Student}. */","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    private final String pp;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    private final String attendance;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"    private final ArrayList\u003cString\u003e submissionStrArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Constructs a {@link JsonAdaptedStudent} with the given student details. Called when reading from JSON. */","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"attendance\") String attendance,","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"                              @JsonProperty(\"pp\") String pp, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"                              @JsonProperty(\"submissionStrArr\") List\u003cString\u003e submissionStrArr) {","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"        this.pp \u003d pp;","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (submissionStrArr !\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.submissionStrArr.addAll(submissionStrArr);","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Converts a given {@link Student} into this class for Jackson use. Called when saving to JSON. */","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"        attendance \u003d source.getAtd().atdStrorageStr();","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"        pp \u003d source.getAtd().partPointsStorageStr();","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"TamKengHong"},"content":"        submissionStrArr.addAll(source.getSubmissionStorageStrings());","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        tagged.addAll(source.getClassTags().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@link Student} object.","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"        if (pp \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Participation Points\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"bojie3"},"content":"        if (!Attendance.isValidPpStorageString(pp)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new IllegalValueException(\"Invalid participation value \\\"\" + pp + \"\\\" in JSON file\");","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"bojie3"},"content":"        if (attendance \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"bojie3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Attendance\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"bojie3"},"content":"        if (!Attendance.isValidAttendanceStorageString(attendance)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new IllegalValueException(\"Invalid attendance value \\\"\" + attendance + \"\\\" in JSON file\");","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"TamKengHong"},"content":"        return new Student(modelName, attendance, pp, submissionStrArr, modelTags);","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chunzkok":11,"bojie3":17,"-":48,"WilliamHaiweiGu":11,"TamKengHong":4}},{"path":"src/main/java/taa/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chunzkok":3,"-":45}},{"path":"src/main/java/taa/storage/JsonSerializableTaaData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.Assignment;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":" * An Immutable ClassList that is serializable to JSON format.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"@JsonRootName(value \u003d \"taaData\")","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"class JsonSerializableTaaData {","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"JSON student list contains duplicate student(s).\";","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String MESSAGE_DUPLICATE_ASGN \u003d \"JSON assignment list contains duplicate student(s).\";","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final List\u003cJsonAdaptedAssignment\u003e assignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons. Called when reading from JSON.","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public JsonSerializableTaaData(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students,","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"                                   @JsonProperty(\"assignments\") List\u003cJsonAdaptedAssignment\u003e assignments) {","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (students !\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"            this.students.addAll(students);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (assignments !\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.assignments.addAll(assignments);","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Converts a given {@code ReadOnlyStudentList} into this class for Jackson use. Called when saving to JSON.","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public JsonSerializableTaaData(TaaData source) {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"        source.studentList.getStudentList().stream().map(JsonAdaptedStudent::new).forEach(students::add);","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Arrays.stream(source.asgnArr).map(JsonAdaptedAssignment::new).forEach(assignments::add);","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Converts this TAA data into the model\u0027s {@link TaaData} object.","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public TaaData toModelType() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final ClassList classList \u003d new ClassList();","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"cyli133"},"content":"            if (classList.hasStudent(student)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"cyli133"},"content":"            classList.addStudent(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final ArrayList\u003cAssignment\u003e asgns \u003d new ArrayList\u003c\u003e(assignments.size());","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (JsonAdaptedAssignment jsonAssignment : assignments) {","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"            asgns.add(jsonAssignment.toModelType());","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (asgns.stream().map(Assignment::getName).distinct().count() \u003c assignments.size()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new IllegalValueException(MESSAGE_DUPLICATE_ASGN);","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new TaaData(classList, asgns.toArray(new Assignment[0]));","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chunzkok":10,"cyli133":4,"-":34,"WilliamHaiweiGu":29}},{"path":"src/main/java/taa/storage/JsonTaaStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.FileUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.JsonUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":" * A class to access ClassList data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"public class JsonTaaStorage implements TaaStorage {","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaaStorage.class);","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    public JsonTaaStorage(Path filePath) {","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    public Path getTaaDataFilePath() {","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public Optional\u003cTaaData\u003e readTaaData() throws DataConversionException {","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        return readTaaData(filePath);","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"     * Similar to {@link #readTaaData()}.","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public Optional\u003cTaaData\u003e readTaaData(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"        Optional\u003cJsonSerializableTaaData\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"                filePath, JsonSerializableTaaData.class);","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void saveTaaData(TaaData taaData) throws IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"        saveTaaData(taaData, filePath);","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Similar to {@link #saveTaaData(TaaData)}.","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void saveTaaData(TaaData taaData, Path filePath) throws IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"        requireNonNull(taaData);","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaaData(taaData), filePath);","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chunzkok":15,"cyli133":1,"-":55,"WilliamHaiweiGu":8}},{"path":"src/main/java/taa/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.JsonUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chunzkok":6,"-":41}},{"path":"src/main/java/taa/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"public interface Storage extends TaaStorage, UserPrefsStorage {","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    Path getTaaDataFilePath();","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"    Optional\u003cTaaData\u003e readTaaData() throws DataConversionException, IOException;","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    void saveTaaData(TaaData taaData) throws IOException;","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chunzkok":6,"-":23,"WilliamHaiweiGu":2}},{"path":"src/main/java/taa/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":" * Manages storage of ClassList data in local storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    private final TaaStorage taaStorage;","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    public StorageManager(TaaStorage taaStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"        this.taaStorage \u003d taaStorage;","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"cyli133"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ClassList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"    public Path getTaaDataFilePath() {","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"        return taaStorage.getTaaDataFilePath();","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public Optional\u003cTaaData\u003e readTaaData() throws DataConversionException, IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"        return readTaaData(taaStorage.getTaaDataFilePath());","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public Optional\u003cTaaData\u003e readTaaData(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"        return taaStorage.readTaaData(filePath);","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void saveTaaData(TaaData taaData) throws IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"        saveTaaData(taaData, taaStorage.getTaaDataFilePath());","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void saveTaaData(TaaData taaData, Path filePath) throws IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"        taaStorage.saveTaaData(taaData, filePath);","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":13,"cyli133":2,"-":56,"WilliamHaiweiGu":6}},{"path":"src/main/java/taa/storage/TaaData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"package taa.storage;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Objects;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.ReadOnlyStudentList;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.Assignment;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"/** A container that takes a snapshot of the student list and the assignment list. */","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class TaaData {","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final ReadOnlyStudentList studentList;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final Assignment[] asgnArr;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Creates a {@link TaaData} with specified student list and assignments. */","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public TaaData(ReadOnlyStudentList studentList, Assignment[] asgnArr) {","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.studentList \u003d studentList;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.asgnArr \u003d asgnArr;","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Creates a {@link TaaData} with specified student list and a new empty assignment array. */","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public TaaData(ReadOnlyStudentList studentList) {","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this(studentList, new Assignment[0]);","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /** Creates a {@link TaaData} with a new empty student list and a new empty assignment array. */","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public TaaData() {","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this(new ClassList(), new Assignment[0]);","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (!(o instanceof TaaData)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final TaaData other \u003d ((TaaData) o);","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Objects.equals(other.studentList, studentList) \u0026\u0026 Arrays.equals(other.asgnArr, asgnArr);","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"WilliamHaiweiGu":42}},{"path":"src/main/java/taa/storage/TaaStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.ReadOnlyStudentList;","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.AssignmentList;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Represents a storage for {@link ClassList} and {@link AssignmentList}.`","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"public interface TaaStorage {","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return the file path of the data file.","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    Path getTaaDataFilePath();","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return {@link ClassList} and {@link AssignmentList} data as a {@link TaaData}} or {@code Optional.empty()} if","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *         storage file is not found.","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"    Optional\u003cTaaData\u003e readTaaData() throws DataConversionException, IOException;","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"     * @see #getTaaDataFilePath()","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"    Optional\u003cTaaData\u003e readTaaData(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"     * Saves the given {@link ReadOnlyStudentList} to the storage.","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param taaData cannot be null.","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"    void saveTaaData(TaaData taaData) throws IOException;","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @see #saveTaaData(TaaData)","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"    void saveTaaData(TaaData taaData, Path filePath) throws IOException;","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chunzkok":7,"cyli133":1,"-":28,"WilliamHaiweiGu":12}},{"path":"src/main/java/taa/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chunzkok":6,"-":30}},{"path":"src/main/java/taa/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.logic.Logic;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.CommandResult;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public CommandBox(CommandExecutor commandExecutor, Supplier\u003cString\u003e prevCmdFetcher, Supplier\u003cString\u003e nextCmdFetcher","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"    ) {","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // Set navigation keys","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"        commandTextField.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final String newCmd;","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"            switch (event.getCode()) {","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"            case UP:","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"                newCmd \u003d prevCmdFetcher.get();","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"                break;","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"            case DOWN:","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"                newCmd \u003d nextCmdFetcher.get();","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"                break;","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"            default:","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"                return;","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (newCmd !\u003d null) {","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"                setCommand(newCmd);","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"                commandTextField.positionCaret(newCmd.length());","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"        });","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"        if (\"\".equals(commandText)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void setCommand(String cmd) {","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"WilliamHaiweiGu"},"content":"        commandTextField.setText(cmd);","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"chunzkok":7,"-":78,"WilliamHaiweiGu":25}},{"path":"src/main/java/taa/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Welcome to TAA!!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    public static final String MESSAGE \u003d \"The following table contains a summary of TAA\u0027s commands\";","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    public static final String COMMAND_SUMMARY \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"            \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"                    + \"| Action                      | Format                                            |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"                    + \"| Add a student               | add_student n/STUDENT_NAME cl/CLASS_NAME          |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"                    + \"| Delete a student            | delete_student STUDENT_INDEX                      |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"                    + \"| Edit student                | edit_student STD_INDEX [n/STD_NAME] [cl/CLS_NAME] |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"                    + \"| Create ClassList            | create_class LIST_NAME [STUDENT_NAMES]            |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"                    + \"| Group student               | rand_grp CLASS_LIST GROUP_SIZE                    |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"                    + \"| Create an alarm             | add_alarm t/TIME c/COMMENT                        |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"                    + \"| Delete an alarm             | delete_alarm INDEX                                |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"                    + \"| List alarms                 | list_alarms                                       |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"                    + \"| View class statistics       | class_stats st/FIELD [as/ASSIGNMENT_NAME]         |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"                    + \"| List all student            | list                                              |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"                    + \"| Find a student              | find KEYWORD [MORE_KEYWORDS]                      |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"                    + \"| Mark Attendance             | markAtd STUDENT_ID w/WEEK_NUMBER                  |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"                    + \"| Unmark Attendance           | unmarkAtd STUDENT_ID w/WEEK_NUMBER                |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"                    + \"| Insert participation points | insertPP STUDENT_ID w/WEEK_NUMBER pp/POINTS       |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"                    + \"| Add Assignment              | add_asgn n/NAME [m/TOTAL_MARKS]                   |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"                    + \"| Delete Assignment           | delete n/ASSIGNMENT_ID                            |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"                    + \"| Grade Assignment            | grade n/NAME i/STUDENT_ID m/SCORE [late/]         |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"                    + \"| Ungrade Assignment          | ungrade n/ASSIGNMENT_ID i/STUDENT_ID              |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"                    + \"| List Assignment             | list_asgn                                         |\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    + \"| Import CSV data             | import [-force] FILE_PATH                         |\\n\"","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    + \"| Export CSV data             | export [-force] FILE_PATH                         |\\n\"","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"                    + \"+-----------------------------+---------------------------------------------------+\\n\";","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t14-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"    public static final String HELP_MESSAGE \u003d \"For more Information, \"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"            + \"please refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":79,"author":{"gitId":"bojie3"},"content":"    private Label message;","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //@@author AY2223S1-CS2103T-W17-4","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private Label welcomeMessage;","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Label userGuideMessage;","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Label commandSummary;","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        message.setText(MESSAGE);","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        userGuideMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        commandSummary.setText(COMMAND_SUMMARY);","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        welcomeMessage.setText(WELCOME_MESSAGE);","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        setKeys();","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        getRoot().setHeight(650);","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        getRoot().setMaxWidth(900);","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        //getRoot().setMaximized(true);","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Bind keys as shortcuts for help window.","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setKeys() {","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        //Bind ESC to minimized help window","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        getRoot().addEventHandler(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            if (KeyCode.ESCAPE \u003d\u003d event.getCode()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                hide();","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        //Bind C to copy user guide url","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        getRoot().addEventHandler(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            if (KeyCode.C \u003d\u003d event.getCode()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                copyUrl();","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chunzkok":3,"bojie3":52,"-":133,"WilliamHaiweiGu":2}},{"path":"src/main/java/taa/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.logic.Logic;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.CommandResult;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":" * The Main Window. Provides the basic application layout containing a menu bar and space where other JavaFX elements","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":" * can be placed.","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTaaDataFilePath());","lastModifiedDate":"2023-04-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"WilliamHaiweiGu"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, logic::getPrevCmd, logic::getNextCmd);","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":165,"author":{"gitId":"chunzkok"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"chunzkok"},"content":"        return studentListPanel;","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"chunzkok"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chunzkok":17,"-":173,"WilliamHaiweiGu":5}},{"path":"src/main/java/taa/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chunzkok":1,"-":27}},{"path":"src/main/java/taa/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":1,"-":27}},{"path":"src/main/java/taa/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.Submission;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on ClassList level 4\u003c/a\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    public final Student student;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"    private Label attendance;","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"    private Label assignment;","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"    private Label groups;","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"     * Creates a {@code PersonCode} with the given {@code Student} and index to display.","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        this.student \u003d student;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        Submission latestSubmission \u003d student.getLatestSubmission();","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"        attendance.setText(String.format(\"Attendance: %d/12, Participation points: %.2f\",","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"                this.student.getNumWeeksPresent(), this.student.getPartPoints()));","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        assignment.setText(\"Latest assignment: \"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"                + (latestSubmission \u003d\u003d null ? \"None\" : latestSubmission.describeSubmission()));","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"        groups.setText(\"Groups: None\");","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"        student.getClassTags().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"                .sorted(Comparator.comparing(classTag -\u003e classTag.tagName))","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"                .forEach(classTag -\u003e tags.getChildren().add(new Label(classTag.tagName)));","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chunzkok":23,"bojie3":2,"cyli133":1,"-":54,"TamKengHong":1}},{"path":"src/main/java/taa/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"                setText(null);","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"            } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"chunzkok":49}},{"path":"src/main/java/taa/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chunzkok":1,"-":12}},{"path":"src/main/java/taa/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.MainApp;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.StringUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.logic.Logic;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chunzkok":6,"-":82}},{"path":"src/main/java/taa/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.MainApp;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chunzkok":2,"-":86}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"#copyButton, #userGuideMessage, #welcomeMessage, #commandSummary, #message, #commandSummaryIntro {","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"#message, #welcomeMessage {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"    fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    -fx-font-size: 20;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"#commandSummary {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    -fx-font-family: monospace;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"#helpMessageContainer, #helpResultContainer {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":".scroll-bar {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"bojie3":40,"-":17}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"\u003cfx:root title\u003d\"Help\" resizable\u003d\"false\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" minWidth\u003d\"800\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    \u003cScene fx:id\u003d\"scene\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"      \u003cScrollPane fx:id\u003d\"myScrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" pannable\u003d\"true\" vbarPolicy\u003d\"ALWAYS\" hbarPolicy\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"        \u003cVBox alignment\u003d\"CENTER\" fx:id\u003d\"helpResultContainer\" minHeight\u003d\"800.0\" minWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"            \u003cLabel fx:id\u003d\"welcomeMessage\" text\u003d\"Label\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"                \u003cInsets right\u003d\"5\" bottom\u003d\"10.0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"            \u003cLabel fx:id\u003d\"message\" text\u003d\"Label\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"                \u003cInsets right\u003d\"5\" bottom\u003d\"10.0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"            \u003cLabel fx:id\u003d\"commandSummary\" text\u003d\"Label\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\" minHeight\u003d\"30.0\" minWidth\u003d\"500.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"              \u003cLabel fx:id\u003d\"userGuideMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"                  \u003cInsets top\u003d\"5.0\" right\u003d\"5.0\" bottom\u003d\"5.0\" left\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"                  \u003cInsets top\u003d\"5.0\" right\u003d\"5.0\" bottom\u003d\"5.0\" left\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"bojie3":32,"-":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"         title\u003d\"Teaching Assistant Assistant\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    \u003cScene fx:id\u003d\"mainScene\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"          \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"chunzkok":3,"-":56,"WilliamHaiweiGu":1}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"      \u003cLabel fx:id\u003d\"attendance\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$attendance\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"      \u003cLabel fx:id\u003d\"assignment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$assignment\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"      \u003cLabel fx:id\u003d\"groups\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$groups\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":3,"cyli133":1,"-":33}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":1,"-":7}},{"path":"src/test/java/taa/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"        private final Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"chunzkok":2,"-":56}},{"path":"src/test/java/taa/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.core;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"chunzkok":1,"-":26}},{"path":"src/test/java/taa/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.core;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":3,"-":133}},{"path":"src/test/java/taa/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.core.index;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"chunzkok":4,"-":57}},{"path":"src/test/java/taa/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalArgumentException.class, errorMessage, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"                -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"chunzkok":6,"-":32}},{"path":"src/test/java/taa/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"        CollectionUtil.requireAllNonNull(objects);","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"        CollectionUtil.requireAllNonNull(collection);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"chunzkok":6,"-":102}},{"path":"src/test/java/taa/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Config;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chunzkok":8,"-":108}},{"path":"src/test/java/taa/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":3,"-":21}},{"path":"src/test/java/taa/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TestUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":3,"-":42}},{"path":"src/test/java/taa/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chunzkok":8,"-":137}},{"path":"src/test/java/taa/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.AddStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.CommandResult;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.ListCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"import taa.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"import taa.storage.JsonTaaStorage;","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"import taa.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"import taa.storage.StorageManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"        JsonTaaStorage addressBookStorage \u003d","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"                new JsonTaaStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"        String deleteCommand \u003d \"delete_student 9\";","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        assertCommandException(deleteCommand, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"        JsonTaaStorage addressBookStorage \u003d","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"                new JsonTaaIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"        String addCommand \u003d AddStudentCommand.COMMAND_WORD + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"        Student expectedStudent \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Executes the command and confirms that - no exceptions are thrown \u003cbr\u003e - the feedback message is equal to {@code","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * expectedMessage} \u003cbr\u003e - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"chunzkok"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaaData(), new UserPrefs());","lastModifiedDate":"2023-04-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Executes the command and confirms that - the {@code expectedException} is thrown \u003cbr\u003e - the resulting error","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * message is equal to {@code expectedMessage} \u003cbr\u003e - the internal model manager state is the same as that in {@code","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"chunzkok"},"content":"    private static class JsonTaaIoExceptionThrowingStub extends JsonTaaStorage {","lastModifiedDate":"2023-04-03"},{"lineNumber":148,"author":{"gitId":"chunzkok"},"content":"        private JsonTaaIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-04-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void saveTaaData(TaaData taaData, Path filePath) throws IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chunzkok":34,"-":111,"WilliamHaiweiGu":12}},{"path":"src/test/java/taa/logic/commands/AddStudentCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":" * Contains integration tests (interaction with the Model) for {@code AddStudentCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"public class AddStudentCommandIntegrationTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"        model \u003d new ModelManager(new TaaData(TypicalPersons.getTypicalTaaData()), new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaaData(), new UserPrefs());","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandSuccess(new AddStudentCommand(validStudent), model,","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"                String.format(AddStudentCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Student studentInList \u003d model.getTaaData().studentList.getStudentList().get(0);","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandFailure(","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"                new AddStudentCommand(studentInList), model, AddStudentCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"chunzkok":16,"-":25,"WilliamHaiweiGu":3}},{"path":"src/test/java/taa/logic/commands/AddStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.enums.ChartType;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"import taa.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"import taa.model.alarm.Alarm;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.assignment.Assignment;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"public class AddStudentCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddStudentCommand(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"        CommandResult commandResult \u003d new AddStudentCommand(validStudent).execute(modelStub);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        assertEquals(String.format(AddStudentCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.personsAdded);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        AddStudentCommand addStudentCommand \u003d new AddStudentCommand(validStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validStudent);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"                CommandException.class, AddStudentCommand.MESSAGE_DUPLICATE_STUDENT, ()","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"                        -\u003e addStudentCommand.execute(modelStub));","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"        Student alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"        Student bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"        AddStudentCommand addAliceCommand \u003d new AddStudentCommand(alice);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"        AddStudentCommand addBobCommand \u003d new AddStudentCommand(bob);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        AddStudentCommand addAliceCommandCopy \u003d new AddStudentCommand(alice);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"        public Path getTaaDataFilePath() {","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"        public void setTaaDataFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-04-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public TaaData getTaaData() {","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void setTaaData(TaaData newData) {","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public boolean hasClassList(ClassList tocheck) {","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"chunzkok"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public int getClassListSize() {","lastModifiedDate":"2023-04-08"},{"lineNumber":138,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-08"},{"lineNumber":139,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"chunzkok"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void addClassList(ClassList toAdd) {","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void updateStudent(Student target) {","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"cyli133"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-04-08"},{"lineNumber":163,"author":{"gitId":"cyli133"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"WilliamHaiweiGu"},"content":"        @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":167,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"cyli133"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"cyli133"},"content":"        public ObservableList\u003cStudent\u003e getFilteredClassList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"cyli133"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"cyli133"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2023-04-08"},{"lineNumber":179,"author":{"gitId":"cyli133"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"TamKengHong"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void updateFilteredClassLists(Predicate\u003cClassList\u003e predicate) {","lastModifiedDate":"2023-04-08"},{"lineNumber":184,"author":{"gitId":"TamKengHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"TamKengHong"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void addStudentToTaggedClasses(Student student) {","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"WilliamHaiweiGu"},"content":"            requireNonNull(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":191,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"TamKengHong"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public boolean hasAssignment(String assignmentName) {","lastModifiedDate":"2023-04-08"},{"lineNumber":195,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-08"},{"lineNumber":196,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"cyli133"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void addAssignment(String toAdd, int totalMarks) {","lastModifiedDate":"2023-04-08"},{"lineNumber":200,"author":{"gitId":"cyli133"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"chunzkok"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void deleteAssignment(String assignmentName) {","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":206,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"TamKengHong"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"TamKengHong"},"content":"        public void grade(String assignmentName, int studentId, int marks, boolean isLateSubmission) {","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"TamKengHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":213,"author":{"gitId":"WilliamHaiweiGu"},"content":"        @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":214,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public String listAssignments() {","lastModifiedDate":"2023-04-08"},{"lineNumber":215,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":216,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":217,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":218,"author":{"gitId":"TamKengHong"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"TamKengHong"},"content":"        public void ungrade(String assignmentName, int studentId) {","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"TamKengHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":222,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"cyli133"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"cyli133"},"content":"        public void addAlarm(Alarm alarm) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"cyli133"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"TamKengHong"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"TamKengHong"},"content":"        public void deleteStudentSubmission(Student studentToDelete) {","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"TamKengHong"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void initAssignmentsFromStorage(Assignment[] asgnArr) {","lastModifiedDate":"2023-04-07"},{"lineNumber":234,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"TamKengHong"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"TamKengHong"},"content":"        public void addStudentAssignment(Student stu) {","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"TamKengHong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"chunzkok"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public void displayChart(ChartType chart, String... args) {","lastModifiedDate":"2023-04-08"},{"lineNumber":242,"author":{"gitId":"chunzkok"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public String listAlarms() {","lastModifiedDate":"2023-04-08"},{"lineNumber":246,"author":{"gitId":"chunzkok"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"cyli133"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"cyli133"},"content":"        public void deleteAlarm(int index) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"cyli133"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-30"},{"lineNumber":252,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"cyli133"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"chunzkok"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2023-03-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"chunzkok"},"content":"        private final Student student;","lastModifiedDate":"2023-03-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"chunzkok"},"content":"        ModelStubWithPerson(Student student) {","lastModifiedDate":"2023-03-09"},{"lineNumber":263,"author":{"gitId":"chunzkok"},"content":"            requireNonNull(student);","lastModifiedDate":"2023-03-09"},{"lineNumber":264,"author":{"gitId":"chunzkok"},"content":"            this.student \u003d student;","lastModifiedDate":"2023-03-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"chunzkok"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-09"},{"lineNumber":269,"author":{"gitId":"chunzkok"},"content":"            requireNonNull(student);","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"chunzkok"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2023-03-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"chunzkok"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2023-03-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"chunzkok"},"content":"        final ArrayList\u003cStudent\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"chunzkok"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2023-03-09"},{"lineNumber":282,"author":{"gitId":"chunzkok"},"content":"            requireNonNull(student);","lastModifiedDate":"2023-03-09"},{"lineNumber":283,"author":{"gitId":"chunzkok"},"content":"            personsAdded.add(student);","lastModifiedDate":"2023-03-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":287,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public TaaData getTaaData() {","lastModifiedDate":"2023-04-07"},{"lineNumber":288,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return new TaaData();","lastModifiedDate":"2023-04-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":290,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":291,"author":{"gitId":"WilliamHaiweiGu"},"content":"        @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":292,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2023-04-08"},{"lineNumber":293,"author":{"gitId":"WilliamHaiweiGu"},"content":"            requireNonNull(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":294,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return personsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2023-04-08"},{"lineNumber":295,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":296,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"chunzkok":53,"cyli133":35,"-":135,"WilliamHaiweiGu":44,"TamKengHong":32}},{"path":"src/test/java/taa/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"public class ClearCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    public void execute_emptyTaaData_success() {","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    public void execute_nonEmptyTaaData_success() {","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Model model \u003d new ModelManager(new TaaData(TypicalPersons.getTypicalTaaData()), new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Model expectedModel \u003d new ModelManager(new TaaData(TypicalPersons.getTypicalTaaData()), new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"        expectedModel.setTaaData(new TaaData());","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":26,"WilliamHaiweiGu":4}},{"path":"src/test/java/taa/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"cyli133"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"chunzkok":1,"cyli133":5,"-":48}},{"path":"src/test/java/taa/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + CliSyntax.PREFIX_CLASS_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + CliSyntax.PREFIX_CLASS_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + CliSyntax.PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"            + CliSyntax.PREFIX_CLASS_TAG","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"            + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"    public static final EditStudentCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"    public static final EditStudentCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"WilliamHaiweiGu"},"content":"        ClassList expectedClassList \u003d new ClassList(actualModel.getTaaData().studentList);","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertEquals(expectedClassList, actualModel.getTaaData().studentList);","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"chunzkok":30,"cyli133":1,"-":75,"WilliamHaiweiGu":2}},{"path":"src/test/java/taa/logic/commands/DeleteStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code DeleteStudentCommand}.","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"public class DeleteStudentCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final Model model \u003d new ModelManager(new TaaData(TypicalPersons.getTypicalTaaData()), new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaaData(), new UserPrefs());","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"        //assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        assertCommandFailure(deleteStudentCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaaData(), new UserPrefs());","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"TamKengHong"},"content":"        // assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaaData().studentList.getStudentList().size());","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"        assertCommandFailure(deleteStudentCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"        DeleteStudentCommand deleteFirstCommand \u003d new DeleteStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"        DeleteStudentCommand deleteSecondCommand \u003d new DeleteStudentCommand(TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"        DeleteStudentCommand deleteFirstCommandCopy \u003d new DeleteStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"chunzkok":36,"-":59,"WilliamHaiweiGu":11,"TamKengHong":2}},{"path":"src/test/java/taa/logic/commands/EditStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditStudentCommand.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"public class EditStudentCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final Model model \u003d new ModelManager(new TaaData(TypicalPersons.getTypicalTaaData()), new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        Student editedStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand editStudentCommand \u003d new EditStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        String expectedMessage \u003d String.format(EditStudentCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Model expectedModel \u003d new ModelManager(new TaaData(new ClassList(model.getTaaData().studentList)),","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"                new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandSuccess(editStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastStudent);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        Student editedStudent \u003d personInList.withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand editStudentCommand \u003d new EditStudentCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"        String expectedMessage \u003d String.format(EditStudentCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Model expectedModel \u003d new ModelManager(new TaaData(new ClassList(model.getTaaData().studentList)),","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"                new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandSuccess(editStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand editStudentCommand \u003d new EditStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"                new EditStudentCommand.EditStudentDescriptor());","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"        String expectedMessage \u003d String.format(EditStudentCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Model expectedModel \u003d new ModelManager(new TaaData(new ClassList(model.getTaaData().studentList)),","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"                new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandSuccess(editStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList()","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"        Student editedStudent \u003d new PersonBuilder(studentInFilteredList)","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand editStudentCommand \u003d new EditStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"                new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"        String expectedMessage \u003d String.format(EditStudentCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Model expectedModel \u003d new ModelManager(new TaaData(new ClassList(model.getTaaData().studentList)),","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"WilliamHaiweiGu"},"content":"                new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandSuccess(editStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand editStudentCommand \u003d new EditStudentCommand(TypicalIndexes.INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandFailure(editStudentCommand, model, EditStudentCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"        // edit student in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"WilliamHaiweiGu"},"content":"        Student studentInList \u003d model.getTaaData().studentList.getStudentList()","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"                .get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand editStudentCommand \u003d new EditStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"                new EditPersonDescriptorBuilder(studentInList).build());","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandFailure(editStudentCommand, model, EditStudentCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"chunzkok"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"chunzkok"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"chunzkok"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand editStudentCommand \u003d new EditStudentCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandFailure(editStudentCommand,","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"chunzkok"},"content":"                model,","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"chunzkok"},"content":"                Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Edit filtered list where index is larger than size of filtered list, but smaller than size of address book","lastModifiedDate":"2023-04-08"},{"lineNumber":137,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"chunzkok"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"chunzkok"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"chunzkok"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaaData().studentList.getStudentList().size());","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand editStudentCommand \u003d new EditStudentCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"chunzkok"},"content":"                new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"chunzkok"},"content":"        CommandTestUtil.assertCommandFailure(editStudentCommand,","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"chunzkok"},"content":"                model,","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"chunzkok"},"content":"                Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"chunzkok"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"chunzkok"},"content":"        final EditStudentCommand standardCommand \u003d new EditStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"chunzkok"},"content":"                CommandTestUtil.DESC_AMY);","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"chunzkok"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor copyDescriptor \u003d new EditStudentCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"chunzkok"},"content":"                .EditStudentDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand commandWithSameValues \u003d new EditStudentCommand(","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"chunzkok"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"chunzkok"},"content":"                copyDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"chunzkok"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"chunzkok"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"chunzkok"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"chunzkok"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(standardCommand, new EditStudentCommand(TypicalIndexes.INDEX_SECOND_PERSON,","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"WilliamHaiweiGu"},"content":"                CommandTestUtil.DESC_AMY));","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"chunzkok"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(standardCommand, new EditStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"WilliamHaiweiGu"},"content":"                CommandTestUtil.DESC_BOB));","lastModifiedDate":"2023-04-08"},{"lineNumber":182,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":160,"cyli133":1,"WilliamHaiweiGu":23}},{"path":"src/test/java/taa/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.EditStudentCommand.EditStudentDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"                .EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        EditStudentDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"chunzkok":11,"-":33}},{"path":"src/test/java/taa/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"                false, true, false);","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chunzkok":6,"cyli133":2,"-":12}},{"path":"src/test/java/taa/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final Model model \u003d new ModelManager(new TaaData(TypicalPersons.getTypicalTaaData()), new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final Model expectedModel \u003d new ModelManager(new TaaData(TypicalPersons.getTypicalTaaData()),","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"            new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(1, findFirstCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(null, findFirstCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"        assertEquals(Arrays.asList(TypicalPersons.CARL, TypicalPersons.ELLE, TypicalPersons.FIONA),","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"                model.getFilteredStudentList());","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chunzkok":16,"-":56,"WilliamHaiweiGu":10}},{"path":"src/test/java/taa/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpCommand.SHOWING_HELP_MESSAGE,","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"                true, false, false);","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chunzkok":6,"cyli133":2,"-":12}},{"path":"src/test/java/taa/logic/commands/ListAlarmsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"class ListAlarmsCommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"    void execute() {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"cyli133":10}},{"path":"src/test/java/taa/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"        model \u003d new ModelManager(new TaaData(TypicalPersons.getTypicalTaaData()), new UserPrefs());","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        expectedModel \u003d new ModelManager(model.getTaaData(), new UserPrefs());","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"chunzkok":10,"cyli133":1,"-":28,"WilliamHaiweiGu":2}},{"path":"src/test/java/taa/logic/parser/AddAlarmCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.AddAlarmCommand;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"import taa.model.alarm.Alarm;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"class AddAlarmCommandParserTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"    private final AddAlarmCommandParser parser \u003d new AddAlarmCommandParser();","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    void parse() throws ParseException {","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"        String input \u003d \" t/12 c/finish\";","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        AddAlarmCommand expectedCommand \u003d new AddAlarmCommand(new Alarm(12, \"finish\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"        assertEquals(expectedCommand, parser.parse(input));","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"cyli133":19}},{"path":"src/test/java/taa/logic/parser/AddStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.AddStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"public class AddStudentCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    private final AddStudentCommandParser parser \u003d new AddStudentCommandParser();","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"        Student expectedStudent \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"                .withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"                CommandTestUtil.PREAMBLE_WHITESPACE + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        Student expectedStudentMultipleTags \u003d new PersonBuilder(TypicalPersons.BOB).withTags(","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"                CommandTestUtil.VALID_TAG_FRIEND, CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND, new AddStudentCommand(expectedStudentMultipleTags));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        // zero tags","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        Student expectedStudent \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.NAME_DESC_AMY,","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"                new AddStudentCommand(expectedStudent));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"                Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"                AddStudentCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"        // missing name prefix","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_BOB,","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_BOB,","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"        // invalid name","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"        // invalid tag","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.INVALID_TAG_DESC + CommandTestUtil.VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC,","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        // non-empty preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.PREAMBLE_NON_EMPTY","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"                        + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":85}},{"path":"src/test/java/taa/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"chunzkok":1,"-":149}},{"path":"src/test/java/taa/logic/parser/ClassListParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.AddStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.EditStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.FindCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.ListCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"cyli133"},"content":"public class ClassListParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    private final TaaParser parser \u003d new TaaParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        AddStudentCommand command \u003d (AddStudentCommand) parser.parseCommand(PersonUtil.getAddCommand(student));","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        assertEquals(new AddStudentCommand(student), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        DeleteStudentCommand command \u003d (DeleteStudentCommand) parser.parseCommand(","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"                DeleteStudentCommand.COMMAND_WORD + \" \" + TypicalIndexes.INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        assertEquals(new DeleteStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder(student).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand command \u003d (EditStudentCommand) parser.parseCommand(EditStudentCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"                + TypicalIndexes.INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"                + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"        assertEquals(new EditStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(ParseException.class,","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                        -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(ParseException.class, Messages.MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"                -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"chunzkok":35,"cyli133":1,"-":66}},{"path":"src/test/java/taa/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.Command;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"            Assertions.assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"chunzkok":6,"-":35}},{"path":"src/test/java/taa/logic/parser/CreateClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.CreateClassCommand;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"class CreateClassCommandParserTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"    private final CreateClassCommandParser parser \u003d new CreateClassCommandParser();","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    void parse() throws ParseException {","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"        String input \u003d \"create_class T02\";","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        CreateClassCommand expectedCommand \u003d new CreateClassCommand(new ClassList(\"T02\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"        assertEquals(expectedCommand, parser.parse(input));","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"cyli133":19}},{"path":"src/test/java/taa/logic/parser/DeleteAlarmCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.DeleteAlarmCommand;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"class DeleteAlarmCommandParserTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"    private final DeleteAlarmCommandParser parser \u003d new DeleteAlarmCommandParser();","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    void parse() throws ParseException {","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"        String input \u003d \" 1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        DeleteAlarmCommand expectedCommand \u003d new DeleteAlarmCommand(1);","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"        assertEquals(expectedCommand, parser.parse(input));","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"cyli133":19}},{"path":"src/test/java/taa/logic/parser/DeleteStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" * outside of the DeleteStudentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":" * same path through the DeleteStudentCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"public class DeleteStudentCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    private final DeleteStudentCommandParser parser \u003d new DeleteStudentCommandParser();","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"                \"1\", new DeleteStudentCommand(TypicalIndexes.INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"                \"a\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"chunzkok":12,"cyli133":1,"-":19}},{"path":"src/test/java/taa/logic/parser/EditStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.EditStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"public class EditStudentCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    private static final String TAG_EMPTY \u003d \" \" + CliSyntax.PREFIX_CLASS_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditStudentCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    private final EditStudentCommandParser parser \u003d new EditStudentCommandParser();","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"        // no index specified","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        // no field specified","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\", EditStudentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        // no index and no field specified","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        // negative index","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"                \"-5\" + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"        // zero index","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"                \"0\" + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"                \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"                + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"                + TAG_EMPTY","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"                + TAG_EMPTY + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"                .withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND, CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"        // name","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"                .withName(CommandTestUtil.VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"        // tags","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"        expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"                .withTags(CommandTestUtil.VALID_TAG_FRIEND, CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"chunzkok"},"content":"                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"chunzkok"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"chunzkok"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"chunzkok"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"chunzkok"},"content":"        EditStudentCommand expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":131}},{"path":"src/test/java/taa/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.FindCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"                \"     \",","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":33}},{"path":"src/test/java/taa/logic/parser/InsertParticipationParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"public class InsertParticipationParserTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    private static final String MISSING_WEEK \u003d \" 1 pp/120\";","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"    private static final String MISSING_PP \u003d \" 1 w/1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    public void parse() {","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"        InsertParticipationParser parser \u003d new InsertParticipationParser();","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"        CommandParserTestUtil.assertParseFailure(parser, MISSING_WEEK, Attendance.WEEK_ERROR_MSG);","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"        CommandParserTestUtil.assertParseFailure(parser, MISSING_PP, Attendance.POINTS_ERROR_MSG);","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"bojie3":17}},{"path":"src/test/java/taa/logic/parser/ListByClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"import taa.logic.commands.ListByClassCommand;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassIdMatchesPredicate;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"class ListByClassCommandParserTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"    private final ListByClassCommandParser parser \u003d new ListByClassCommandParser();","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    void parse() throws ParseException {","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        String input \u003d \"T02\";","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"        ListByClassCommand expectedCommand \u003d new ListByClassCommand(new ClassIdMatchesPredicate(\"T02\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"        assertEquals(expectedCommand, parser.parse(input));","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"cyli133":20}},{"path":"src/test/java/taa/logic/parser/MarkAttendanceParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"public class MarkAttendanceParserTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    private static final String MISSING_WEEK \u003d \" 1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    public void parse() {","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"        MarkAttendanceParser parser \u003d new MarkAttendanceParser();","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"        CommandParserTestUtil.assertParseFailure(parser, MISSING_WEEK, Attendance.WEEK_ERROR_MSG);","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"bojie3":15}},{"path":"src/test/java/taa/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(ParseException.class, ParserUtil.MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"chunzkok":21,"-":102}},{"path":"src/test/java/taa/logic/parser/UnmarkAttendanceParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.logic.parser;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"public class UnmarkAttendanceParserTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    private static final String MISSING_WEEK \u003d \" 1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    public void testParse() {","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"        MarkAttendanceParser parser \u003d new MarkAttendanceParser();","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"        CommandParserTestUtil.assertParseFailure(parser, MISSING_WEEK, Attendance.WEEK_ERROR_MSG);","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"bojie3":15}},{"path":"src/test/java/taa/model/ClassListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"public class ClassListTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"    private final ClassList classList \u003d new ClassList();","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"cyli133"},"content":"        assertEquals(Collections.emptyList(), classList.getStudentList());","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"cyli133"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e classList.resetData(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"        ClassList newData \u003d TypicalPersons.getTypicalTaaData();","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"cyli133"},"content":"        classList.resetData(newData);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"cyli133"},"content":"        assertEquals(newData, classList);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"        Student editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        StudentListStub newData \u003d new StudentListStub(newStudents);","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"cyli133"},"content":"        Assert.assertThrows(DuplicateStudentException.class, () -\u003e classList.resetData(newData));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"cyli133"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e classList.hasStudent(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"cyli133"},"content":"        assertFalse(classList.hasStudent(TypicalPersons.ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"cyli133"},"content":"        classList.addStudent(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"cyli133"},"content":"        assertTrue(classList.hasStudent(TypicalPersons.ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"cyli133"},"content":"        classList.addStudent(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"        Student editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"cyli133"},"content":"        assertTrue(classList.hasStudent(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"cyli133"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e classList.getStudentList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"     * A stub ReadOnlyAddressBook whose students list can violate interface constraints.","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"    private static class StudentListStub implements ReadOnlyStudentList {","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"        StudentListStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"            this.students.setAll(students);","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"            return students;","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"chunzkok":20,"cyli133":14,"-":66}},{"path":"src/test/java/taa/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.storage.TaaData;","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.ClassListBuilder;","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertEquals(new ClassList(), new ClassList(modelManager.getTaaData().studentList));","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"        userPrefs.setTaaDataFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"        userPrefs.setTaaDataFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"    public void setTaaDataFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setTaaDataFilePath(null));","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"    public void setTaaDataFilePath_validPath_setsTaaDataFilePath() {","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"        Path path \u003d Paths.get(\"taa/data/file/path\");","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"        modelManager.setTaaDataFilePath(path);","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"        assertEquals(path, modelManager.getTaaDataFilePath());","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"    public void hasPerson_personNotInStudentList_returnsFalse() {","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"        assertFalse(modelManager.hasStudent(TypicalPersons.ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"    public void hasPerson_personInStudentList_returnsTrue() {","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"        modelManager.addStudent(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"        assertTrue(modelManager.hasStudent(TypicalPersons.ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"        ClassList classList \u003d new ClassListBuilder()","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"                .withPerson(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"                .withPerson(TypicalPersons.BENSON).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"cyli133"},"content":"        ClassList differentClassList \u003d new ClassList();","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"WilliamHaiweiGu"},"content":"        modelManager \u003d new ModelManager(new TaaData(classList), userPrefs);","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"WilliamHaiweiGu"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(new TaaData(classList), userPrefs);","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"cyli133"},"content":"        // different classList -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(modelManager, new ModelManager(new TaaData(differentClassList), userPrefs));","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"chunzkok"},"content":"        String[] keywords \u003d TypicalPersons.ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"chunzkok"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(modelManager, new ModelManager(new TaaData(classList), userPrefs));","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"chunzkok"},"content":"        modelManager.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"chunzkok"},"content":"        differentUserPrefs.setTaaDataFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":133,"author":{"gitId":"WilliamHaiweiGu"},"content":"        assertNotEquals(modelManager, new ModelManager(new TaaData(classList), differentUserPrefs));","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"chunzkok":33,"cyli133":2,"-":88,"WilliamHaiweiGu":12}},{"path":"src/test/java/taa/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    public void setTaaDataFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setTaaDataFilePath(null));","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"chunzkok":6,"-":15}},{"path":"src/test/java/taa/model/assignment/AssignmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.InvalidGradeException;","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.SubmissionNotFoundException;","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"class AssignmentListTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"    private AssignmentList assignmentList;","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"    private FilteredList\u003cStudent\u003e studentList;","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"    void setUp() {","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"        // Initialize a new instance of AssignmentList before each test","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"        assignmentList \u003d new AssignmentList();","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"        studentList \u003d new FilteredList\u003c\u003e(FXCollections.observableArrayList());","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"    @AfterEach","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"    void tearDown() {","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"        // Clean up any resources used by the assignmentList instance after each test","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"        assignmentList \u003d null;","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"        studentList \u003d null;","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"TamKengHong"},"content":"    void checkValidStorage() {","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"TamKengHong"},"content":"        // Add test here.","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(1 \u003d\u003d 1);","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"TamKengHong"},"content":"    void testValidCsvSubmissions() {","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"TamKengHong"},"content":"        // Add test here.","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(1 \u003d\u003d 1);","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"TamKengHong"},"content":"    void add() throws DuplicateAssignmentException {","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"TamKengHong"},"content":"        // Test the method that adds a new assignment to the list","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 1\", studentList, 10);","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignmentList.contains(\"Assignment 1\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(1, assignmentList.getAssignments().length);","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(\"Assignment 1\", assignmentList.getAssignments()[0].getName());","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"TamKengHong"},"content":"        assertThrows(DuplicateAssignmentException.class, () -\u003e assignmentList.add(\"Assignment 1\", studentList, 10));","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"TamKengHong"},"content":"    void delete() throws DuplicateAssignmentException, AssignmentNotFoundException {","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"TamKengHong"},"content":"        // Test the method that deletes an assignment from the list","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 1\", studentList, 10);","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.delete(\"Assignment 1\");","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(assignmentList.contains(\"Assignment 1\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(0, assignmentList.getAssignments().length);","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"TamKengHong"},"content":"        assertThrows(AssignmentNotFoundException.class, () -\u003e assignmentList.delete(\"Assignment 1\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"TamKengHong"},"content":"    void grade() throws DuplicateAssignmentException, InvalidGradeException,","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"TamKengHong"},"content":"            AssignmentNotFoundException, SubmissionNotFoundException {","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"TamKengHong"},"content":"        // Test the method that grades a submission","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"TamKengHong"},"content":"        Student student \u003d new Student(new Name(\"John Doe\"), \"0;0;0;0;0;0;0;0;0;0;0;0\",","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"TamKengHong"},"content":"                \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\", new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 1\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.addStudent(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.grade(\"Assignment 1\", student, 80, false);","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"TamKengHong"},"content":"        assertThrows(AssignmentNotFoundException.class, () -\u003e assignmentList.grade(\"Unknown\", student, 80, false));","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"TamKengHong"},"content":"        assertThrows(InvalidGradeException.class, () -\u003e assignmentList.grade(\"Assignment 1\", student, -1, false));","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"TamKengHong"},"content":"        assertThrows(InvalidGradeException.class, () -\u003e assignmentList.grade(\"Assignment 1\", student, 101, false));","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"TamKengHong"},"content":"    void ungrade() throws DuplicateAssignmentException, InvalidGradeException,","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"TamKengHong"},"content":"            AssignmentNotFoundException, SubmissionNotFoundException {","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"TamKengHong"},"content":"        // Test the method that removes a grade from a submission","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"TamKengHong"},"content":"        Student student \u003d new Student(new Name(\"John Doe\"), \"0;0;0;0;0;0;0;0;0;0;0;0\",","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"TamKengHong"},"content":"                \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\", new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 1\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.addStudent(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.grade(\"Assignment 1\", student, 80, false);","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.ungrade(\"Assignment 1\", student);","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"TamKengHong"},"content":"        assertThrows(AssignmentNotFoundException.class, () -\u003e assignmentList.ungrade(\"Unknown\", student));","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"TamKengHong"},"content":"    void list() throws DuplicateAssignmentException {","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"TamKengHong"},"content":"        // Test case for listing all assignments","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"TamKengHong"},"content":"        Student alice \u003d new Student(new Name(\"Alice\"), \"0;0;0;0;0;0;0;0;0;0;0;0\", \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\",","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"TamKengHong"},"content":"                new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"TamKengHong"},"content":"        Student bob \u003d new Student(new Name(\"Bob\"), \"0;0;0;0;0;0;0;0;0;0;0;0\", \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\",","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"TamKengHong"},"content":"                new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 1\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 2\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.addStudent(alice);","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.addStudent(bob);","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignmentList.list().contains(\"Assignment 1\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignmentList.list().contains(\"Assignment 2\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(assignmentList.list().contains(\"Assignment 3\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignmentList.list().split(\"Alice\").length \u003d\u003d 3);","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignmentList.list().split(\"Bob\").length \u003d\u003d 3);","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"TamKengHong"},"content":"    void deleteStudentTest() throws DuplicateAssignmentException {","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"TamKengHong"},"content":"        Student alice \u003d new Student(new Name(\"Alice\"), \"0;0;0;0;0;0;0;0;0;0;0;0\", \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\",","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"TamKengHong"},"content":"                new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"TamKengHong"},"content":"        Student bob \u003d new Student(new Name(\"Bob\"), \"0;0;0;0;0;0;0;0;0;0;0;0\", \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\",","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"TamKengHong"},"content":"                new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 1\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 2\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.addStudent(alice);","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.addStudent(bob);","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignmentList.getAssignments()[0].getSubmissions().size() \u003d\u003d 2);","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.deleteStudent(alice);","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignmentList.getAssignments()[0].getSubmissions().size() \u003d\u003d 1);","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"TamKengHong"},"content":"    void addStudentTest() throws DuplicateAssignmentException {","lastModifiedDate":"2023-04-08"},{"lineNumber":137,"author":{"gitId":"TamKengHong"},"content":"        Student alice \u003d new Student(new Name(\"Alice\"), \"0;0;0;0;0;0;0;0;0;0;0;0\", \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\",","lastModifiedDate":"2023-04-08"},{"lineNumber":138,"author":{"gitId":"TamKengHong"},"content":"                new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":139,"author":{"gitId":"TamKengHong"},"content":"        Student bob \u003d new Student(new Name(\"Bob\"), \"0;0;0;0;0;0;0;0;0;0;0;0\", \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\",","lastModifiedDate":"2023-04-08"},{"lineNumber":140,"author":{"gitId":"TamKengHong"},"content":"                new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":141,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 1\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":142,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 2\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":143,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.addStudent(alice);","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignmentList.getAssignments()[0].getSubmissions().size() \u003d\u003d 1);","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.addStudent(bob);","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignmentList.getAssignments()[1].getSubmissions().size() \u003d\u003d 2);","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":149,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"TamKengHong"},"content":"    void initFromStorageTest() {","lastModifiedDate":"2023-04-08"},{"lineNumber":151,"author":{"gitId":"TamKengHong"},"content":"        // Add test here.","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(1 \u003d\u003d 1);","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":154,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":155,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"TamKengHong"},"content":"    void containsTest() throws DuplicateAssignmentException {","lastModifiedDate":"2023-04-08"},{"lineNumber":157,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 1\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignmentList.contains(\"Assignment 1\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(assignmentList.contains(\"Unknown\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":161,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":162,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":163,"author":{"gitId":"TamKengHong"},"content":"    void getAssignmentsTest() throws DuplicateAssignmentException {","lastModifiedDate":"2023-04-08"},{"lineNumber":164,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 1\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"TamKengHong"},"content":"        assignmentList.add(\"Assignment 2\", studentList, 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":166,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(2, assignmentList.getAssignments().length);","lastModifiedDate":"2023-04-08"},{"lineNumber":167,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"TamKengHong":168}},{"path":"src/test/java/taa/model/assignment/AssignmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.InvalidGradeException;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.SubmissionNotFoundException;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"class AssignmentTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"    private Assignment assignment;","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"    private Student student;","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"    void setUp() {","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"        // Create a new assignment with total marks of 100.","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"        assignment \u003d new Assignment(\"Test Assignment\", 100);","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"        student \u003d new Student(new Name(\"John Doe\"), \"0;0;0;0;0;0;0;0;0;0;0;0\",","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"                \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\", new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"    @AfterEach","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"    void tearDown() {","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"        // Delete the assignment after each test.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"TamKengHong"},"content":"        assignment.delete();","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"    void testConstructor() {","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"        // Test that the constructor sets the name and totalMarks correctly.","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(\"Test Assignment\", assignment.getName());","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(100, assignment.getTotalMarks());","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"TamKengHong"},"content":"    void testAddStudent() {","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"TamKengHong"},"content":"        // Test that a student is added to the assignment correctly.","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"TamKengHong"},"content":"        assignment.addStudent(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(1, assignment.getSubmissions().size());","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignment.getSubmissions().get(0).toString().contains(\"John Doe\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"TamKengHong"},"content":"    void testAddStudentSubmission() {","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"TamKengHong"},"content":"        // Test that a student submission is added to the assignment correctly.","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"TamKengHong"},"content":"        String submissionString \u003d \"Test submission,1,0,80,100\";","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"TamKengHong"},"content":"        assignment.addStudentSubmission(student, submissionString);","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(1, assignment.getSubmissions().size());","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(assignment.getSubmissions().get(0).toString().contains(\"John Doe\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"TamKengHong"},"content":"    void testGradeSubmission() throws SubmissionNotFoundException, InvalidGradeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"TamKengHong"},"content":"        // Test that a submission can be graded correctly.","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"TamKengHong"},"content":"        assignment.addStudent(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"TamKengHong"},"content":"        assignment.gradeSubmission(student, 80, false);","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(80, assignment.getSubmissions().get(0).getScore().get());","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(assignment.getSubmissions().get(0).toString().contains(\"Late Submission\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"TamKengHong"},"content":"    void testUngradeSubmission() throws SubmissionNotFoundException, InvalidGradeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"TamKengHong"},"content":"        // Test that a submission can be ungraded correctly.","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"TamKengHong"},"content":"        assignment.addStudent(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"TamKengHong"},"content":"        assignment.gradeSubmission(student, 80, false);","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"TamKengHong"},"content":"        assignment.ungradeSubmission(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(assignment.getSubmissions().get(0).getScore().isPresent());","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(assignment.getSubmissions().get(0).toString().contains(\"Ungraded\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"TamKengHong"},"content":"    void testDeleteStudentSubmission() {","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"TamKengHong"},"content":"        // Test that a student submission can be deleted correctly.","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"TamKengHong"},"content":"        assignment.addStudent(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"TamKengHong"},"content":"        assignment.deleteStudentSubmission(student);","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(0, assignment.getSubmissions().size());","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"TamKengHong":88}},{"path":"src/test/java/taa/model/assignment/SubmissionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TamKengHong"},"content":"package taa.model.assignment;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"TamKengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"TamKengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"TamKengHong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"TamKengHong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"TamKengHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"TamKengHong"},"content":"import taa.model.assignment.exceptions.InvalidGradeException;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"TamKengHong"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"TamKengHong"},"content":"class SubmissionTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"TamKengHong"},"content":"    private Student student;","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"TamKengHong"},"content":"    private Assignment assignment;","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"TamKengHong"},"content":"    private Submission submission;","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"TamKengHong"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"TamKengHong"},"content":"    void setUp() {","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"TamKengHong"},"content":"        student \u003d new Student(new Name(\"John Doe\"), \"0;0;0;0;0;0;0;0;0;0;0;0\",","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"TamKengHong"},"content":"                \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\", new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"TamKengHong"},"content":"        assignment \u003d new Assignment(\"Test Assignment\", 10);","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"TamKengHong"},"content":"        submission \u003d new Submission(student, assignment);","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"TamKengHong"},"content":"        student.addSubmission(submission);","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"TamKengHong"},"content":"    void testGetStudent() {","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(student, submission.getStudent());","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"TamKengHong"},"content":"    void testGrade() throws InvalidGradeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"TamKengHong"},"content":"        // test grading with valid marks, no late submission","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"TamKengHong"},"content":"        submission.grade(8, false);","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submission.getScore().isPresent());","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(8, submission.getScore().get());","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submission.toString().contains(\"8/10\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"TamKengHong"},"content":"        // test late submission","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"TamKengHong"},"content":"        submission.grade(10, true);","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(10, submission.getScore().get());","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submission.toString().contains(\"Late Submission\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"TamKengHong"},"content":"        // test grading with invalid marks","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"TamKengHong"},"content":"        assertThrows(InvalidGradeException.class, () -\u003e submission.grade(-1, false));","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"TamKengHong"},"content":"        assertThrows(InvalidGradeException.class, () -\u003e submission.grade(11, true));","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"TamKengHong"},"content":"    void testUngrade() throws InvalidGradeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"TamKengHong"},"content":"        submission.grade(10, true);","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submission.toString().contains(\"Late Submission\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submission.toString().contains(\"10/10\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"TamKengHong"},"content":"        submission.ungrade();","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(submission.getScore().isPresent());","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(submission.toString().contains(\"Late Submission\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(submission.toString().contains(\"10/10\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"TamKengHong"},"content":"    void testDescribeSubmission() throws InvalidGradeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"TamKengHong"},"content":"        // test ungraded submission","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"TamKengHong"},"content":"        String description \u003d submission.describeSubmission();","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(description.contains(\"Test Assignment\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(description.contains(\"Ungraded\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"TamKengHong"},"content":"        // test graded submission","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"TamKengHong"},"content":"        submission.grade(8, false);","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"TamKengHong"},"content":"        description \u003d submission.describeSubmission();","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(description.contains(\"Test Assignment\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(description.contains(\"8/10\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"TamKengHong"},"content":"        // test late submission","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"TamKengHong"},"content":"        submission.grade(8, true);","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"TamKengHong"},"content":"        description \u003d submission.describeSubmission();","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(description.contains(\"(*Late Submission*)\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"TamKengHong"},"content":"    void testIsForAssignment() {","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submission.isForAssignment(\"Test Assignment\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(submission.isForAssignment(\"Other Assignment\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"TamKengHong"},"content":"    void testGetScore() throws InvalidGradeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"TamKengHong"},"content":"        assertFalse(submission.getScore().isPresent());","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"TamKengHong"},"content":"        submission.grade(8, false);","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submission.getScore().isPresent());","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(8, submission.getScore().get());","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"TamKengHong"},"content":"    void testToString() throws InvalidGradeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"TamKengHong"},"content":"        // test ungraded submission","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"TamKengHong"},"content":"        String submissionString \u003d submission.toString();","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submissionString.contains(\"[ ]\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submissionString.contains(\"John Doe\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submissionString.contains(\"0/10 marks\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"TamKengHong"},"content":"        // test graded submission","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"TamKengHong"},"content":"        submission.grade(8, false);","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"TamKengHong"},"content":"        submissionString \u003d submission.toString();","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submissionString.contains(\"[X]\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submissionString.contains(\"John Doe\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submissionString.contains(\"8/10 marks\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"TamKengHong"},"content":"        // test late submission","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"TamKengHong"},"content":"        submission.grade(8, true);","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"TamKengHong"},"content":"        submissionString \u003d submission.toString();","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"TamKengHong"},"content":"        assertTrue(submissionString.contains(\"(*Late Submission*)\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"TamKengHong"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"TamKengHong"},"content":"    void testToStorageString() throws InvalidGradeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"TamKengHong"},"content":"        // test ungraded submission","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"TamKengHong"},"content":"        String storageString \u003d submission.toStorageString();","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(\"Test Assignment,0,0,0\", storageString);","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"TamKengHong"},"content":"        // test graded submission","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"TamKengHong"},"content":"        submission.grade(8, false);","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"TamKengHong"},"content":"        storageString \u003d submission.toStorageString();","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(\"Test Assignment,1,0,8\", storageString);","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"TamKengHong"},"content":"        // test late submission","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"TamKengHong"},"content":"        submission.grade(8, true);","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"TamKengHong"},"content":"        storageString \u003d submission.toStorageString();","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"TamKengHong"},"content":"        assertEquals(\"Test Assignment,1,1,8\", storageString);","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"TamKengHong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"TamKengHong"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"TamKengHong":136}},{"path":"src/test/java/taa/model/student/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package taa.model.student;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"public class AttendanceTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    private static final String INVALID_PP_STORAGE_STRING \u003d \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    private static final String INVALID_ATTENDANCE_STORAGE_STRING \u003d \"0;0;0;0;0;0;0;0;0;0;0;0;0;0;0\";","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    private static final String BASIC_ATTENDANCE_STRING \u003d \"1;1;0;0;0;0;0;0;0;0;0;0\";","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    private static final String BASIC_PP_STRING \u003d \"120;240;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    void isValidParticipationPoints() {","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isValidParticipationPoints(\"0\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isValidParticipationPoints(\"700\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isValidParticipationPoints(\"450\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"        assertFalse(Attendance.isValidParticipationPoints(\"701\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"        assertFalse(Attendance.isValidParticipationPoints(\"-2\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"        assertFalse(Attendance.isValidParticipationPoints(\"abc\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    void isValidWeek() {","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isValidWeek(\"1\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isValidWeek(\"12\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        assertFalse(Attendance.isValidWeek(\"0\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"        assertFalse(Attendance.isValidWeek(\"13\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        assertFalse(Attendance.isValidWeek(\"abc\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"    void convertToIntegerWeek() {","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"        assertEquals(1, Attendance.convertToIntegerWeek(\"1\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"        assertEquals(12, Attendance.convertToIntegerWeek(\"12\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"    void isAcceptablePpStr() {","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isAcceptablePpStr(Attendance.ORIGINAL_PP));","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"        assertFalse(Attendance.isAcceptablePpStr(INVALID_PP_STORAGE_STRING));","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"    void isValidAtdStr() {","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isValidAtdStr(Attendance.ORIGINAL_ATD));","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"        assertFalse(Attendance.isValidAtdStr(INVALID_ATTENDANCE_STORAGE_STRING));","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"    void getNumWeeksPresent() {","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"        Attendance atd \u003d new Attendance(BASIC_ATTENDANCE_STRING, BASIC_PP_STRING);","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"        assertEquals(atd.getNumWeeksPresent(), 2);","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"    void markAttendance() {","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"        Attendance atd \u003d new Attendance(Attendance.ORIGINAL_ATD, Attendance.ORIGINAL_PP);","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"        atd.markAttendance(1);","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"        assertTrue(atd.isMarkedWeek(1));","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"    void isMarkedWeek() {","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"        Attendance attendance \u003d new Attendance(BASIC_ATTENDANCE_STRING, BASIC_PP_STRING);","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"        assertFalse(attendance.isMarkedWeek(4));","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"        assertTrue(attendance.isMarkedWeek(1));","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"    void unmarkAttendance() {","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"        Attendance atd \u003d new Attendance(BASIC_ATTENDANCE_STRING, BASIC_PP_STRING);","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"        atd.unmarkAttendance(1);","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"        assertFalse(atd.isMarkedWeek(1));","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"bojie3"},"content":"    void getAveragePP() {","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"bojie3"},"content":"        Attendance atd \u003d new Attendance(BASIC_ATTENDANCE_STRING, BASIC_PP_STRING);","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"bojie3"},"content":"        assertEquals(atd.getAveragePP(), 180);","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"bojie3"},"content":"    void atdStrorageStr() {","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"bojie3"},"content":"        Attendance atd \u003d new Attendance(BASIC_ATTENDANCE_STRING, BASIC_PP_STRING);","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"bojie3"},"content":"        assertEquals(atd.atdStrorageStr(), BASIC_ATTENDANCE_STRING);","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"bojie3"},"content":"    void partPointsStorageStr() {","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"bojie3"},"content":"        Attendance atd \u003d new Attendance(BASIC_ATTENDANCE_STRING, BASIC_PP_STRING);","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"bojie3"},"content":"        assertEquals(atd.partPointsStorageStr(), BASIC_PP_STRING);","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"bojie3"},"content":"    void listAtdString() {","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"bojie3"},"content":"        Attendance atd \u003d new Attendance(BASIC_ATTENDANCE_STRING, BASIC_PP_STRING);","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"bojie3"},"content":"        String res \u003d \"Week 1: [X]\\nWeek 2: [X]\\nWeek 3: [ ]\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"bojie3"},"content":"                + \"Week 4: [ ]\\nWeek 5: [ ]\\nWeek 6: [ ]\\nWeek 7: [ ]\\nWeek 8: [ ]\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"bojie3"},"content":"                + \"Week 9: [ ]\\nWeek 10: [ ]\\nWeek 11: [ ]\\nWeek 12: [ ]\\n\";","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"bojie3"},"content":"        assertEquals(atd.listAtdString(), res);","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"bojie3"},"content":"    void listPpString() {","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"bojie3"},"content":"        Attendance atd \u003d new Attendance(BASIC_ATTENDANCE_STRING, BASIC_PP_STRING);","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"bojie3"},"content":"        String res \u003d \"Week 1: [120]\\nWeek 2: [240]\\nWeek 3: [-1]\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"bojie3"},"content":"                + \"Week 4: [-1]\\nWeek 5: [-1]\\nWeek 6: [-1]\\nWeek 7: [-1]\\nWeek 8: [-1]\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"bojie3"},"content":"                + \"Week 9: [-1]\\nWeek 10: [-1]\\nWeek 11: [-1]\\nWeek 12: [-1]\\n\";","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"bojie3"},"content":"        assertEquals(atd.listPpString(), res);","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"bojie3"},"content":"    void isValidAttendanceStorageString() {","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isValidAttendanceStorageString(BASIC_ATTENDANCE_STRING));","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isValidAttendanceStorageString(Attendance.ORIGINAL_ATD));","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"bojie3"},"content":"        assertFalse(Attendance.isValidAttendanceStorageString(INVALID_ATTENDANCE_STORAGE_STRING));","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"bojie3"},"content":"    void isValidPpStorageString() {","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isValidPpStorageString(BASIC_PP_STRING));","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"bojie3"},"content":"        assertTrue(Attendance.isValidPpStorageString(Attendance.ORIGINAL_PP));","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"bojie3"},"content":"        assertFalse(Attendance.isValidPpStorageString(INVALID_PP_STORAGE_STRING));","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"bojie3":125}},{"path":"src/test/java/taa/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chunzkok":4,"-":70}},{"path":"src/test/java/taa/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chunzkok":5,"-":36}},{"path":"src/test/java/taa/model/student/SameStudentPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyli133"},"content":"package taa.model.student;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"cyli133"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"cyli133"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"cyli133"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"class SameStudentPredicateTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"cyli133"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"    void test1() {","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        ClassList sampleClass \u003d new ClassList();","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"        SameStudentPredicate predicate \u003d new SameStudentPredicate(sampleClass);","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"cyli133"},"content":"        String sampleAttd \u003d \"0;0;0;0;0;0;0;0;0;0;0;0\";","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"cyli133"},"content":"        String samplePP \u003d \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"        Student sampleStudent \u003d new Student(new Name(\"John\"), sampleAttd, samplePP, new ArrayList\u003cString\u003e(),","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"cyli133"},"content":"                new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"        sampleClass.addStudent(sampleStudent);","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"cyli133"},"content":"        Student sampleStudent2 \u003d new Student(new Name(\"Flora\"), sampleAttd, samplePP, new ArrayList\u003cString\u003e(),","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"                new HashSet\u003c\u003e());","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"cyli133"},"content":"        assertEquals(true, predicate.test(sampleStudent));","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"cyli133"},"content":"        assertEquals(false, predicate.test(sampleStudent2));","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"cyli133"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"cyli133":28}},{"path":"src/test/java/taa/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"public class StudentTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e student.getClassTags().remove(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.isSameStudent(TypicalPersons.ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.isSameStudent(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        Student editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"        Student editedBob \u003d new PersonBuilder(TypicalPersons.BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertFalse(TypicalPersons.BOB.isSameStudent(editedBob));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        editedBob \u003d new PersonBuilder(TypicalPersons.BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertFalse(TypicalPersons.BOB.isSameStudent(editedBob));","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        Student aliceCopy \u003d new PersonBuilder(TypicalPersons.ALICE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.equals(TypicalPersons.ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(5));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(TypicalPersons.BOB));","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"        Student editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":74}},{"path":"src/test/java/taa/model/student/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.student;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        assertFalse(uniqueStudentList.contains(TypicalPersons.ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        assertTrue(uniqueStudentList.contains(TypicalPersons.ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        Student editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(TypicalPersons.ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"                -\u003e uniqueStudentList.setStudent(null, TypicalPersons.ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"                -\u003e uniqueStudentList.setStudent(TypicalPersons.ALICE, null));","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(StudentNotFoundException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"                -\u003e uniqueStudentList.setStudent(TypicalPersons.ALICE, TypicalPersons.ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.setStudent(TypicalPersons.ALICE, TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"        expectedUniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"        Student editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.setStudent(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.setStudent(TypicalPersons.ALICE, TypicalPersons.BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"        expectedUniqueStudentList.add(TypicalPersons.BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(DuplicateStudentException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"                -\u003e uniqueStudentList.setStudent(TypicalPersons.ALICE, TypicalPersons.BOB));","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(TypicalPersons.ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.remove(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"chunzkok"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"chunzkok"},"content":"                -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"chunzkok"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"chunzkok"},"content":"        expectedUniqueStudentList.add(TypicalPersons.BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"chunzkok"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.add(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"chunzkok"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(TypicalPersons.BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"chunzkok"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"chunzkok"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"chunzkok"},"content":"        expectedUniqueStudentList.add(TypicalPersons.BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"chunzkok"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"chunzkok"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(TypicalPersons.ALICE, TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(DuplicateStudentException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"chunzkok"},"content":"                -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":171,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"chunzkok"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"chunzkok":69,"-":105}},{"path":"src/test/java/taa/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.model.tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":6,"-":20}},{"path":"src/test/java/taa/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    private static final String VALID_NAME \u003d TypicalPersons.BENSON.getName().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"    private static final String VALID_ATTENDANCE \u003d \"0;0;0;0;0;0;0;0;0;0;0;0\";","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    private static final String VALID_PART_POINTS \u003d \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\";","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalPersons.BENSON.getClassTags().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static final List\u003cString\u003e VALID_SUBIT_STRS \u003d List.of();","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(TypicalPersons.BENSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        assertEquals(TypicalPersons.BENSON, person.toModelType());","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_ATTENDANCE, VALID_PART_POINTS, VALID_TAGS, VALID_SUBIT_STRS);","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(null, VALID_ATTENDANCE, VALID_PART_POINTS, VALID_TAGS,","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"                VALID_SUBIT_STRS);","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_ATTENDANCE, VALID_PART_POINTS, VALID_TAGS, VALID_SUBIT_STRS);","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chunzkok":15,"bojie3":4,"-":38,"WilliamHaiweiGu":6}},{"path":"src/test/java/taa/storage/JsonClassListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.ReadOnlyStudentList;","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"public class JsonClassListStorageTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"cyli133"},"content":"            \"test\", \"data\", \"JsonClassListStorageTest\");","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    public void readTaaData_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readTaaData(null));","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private Optional\u003cReadOnlyStudentList\u003e readTaaData(String filePath) throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new JsonTaaStorage(Paths.get(filePath)).readTaaData(addToTestDataPathIfNotNull(filePath))","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"                .map(data -\u003e data.studentList);","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        assertFalse(readTaaData(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"                -\u003e readTaaData(\"notJsonFormatTaaData.json\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"    public void readTaaData_invalidPersonTaaData_throwDataConversionException() {","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"                -\u003e readTaaData(\"invalidPersonTaaData.json\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"    public void readTaaData_invalidAndValidPersonTaaData_throwDataConversionException() {","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"                -\u003e readTaaData(\"invalidAndValidPersonTaaData.json\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"    public void readAndSaveTaaData_allInOrder_success() throws Exception {","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaaData.json\");","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        ClassList original \u003d TypicalPersons.getTypicalTaaData();","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"        JsonTaaStorage jsonTaaDataStorage \u003d new JsonTaaStorage(filePath);","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"        jsonTaaDataStorage.saveTaaData(new TaaData(original), filePath);","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"        ReadOnlyStudentList readBack \u003d jsonTaaDataStorage.readTaaData(filePath).get().studentList;","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"cyli133"},"content":"        assertEquals(original, new ClassList(readBack));","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        original.addStudent(TypicalPersons.HOON);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"        original.removeStudent(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"        jsonTaaDataStorage.saveTaaData(new TaaData(original), filePath);","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"WilliamHaiweiGu"},"content":"        readBack \u003d jsonTaaDataStorage.readTaaData(filePath).get().studentList;","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"cyli133"},"content":"        assertEquals(original, new ClassList(readBack));","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"        original.addStudent(TypicalPersons.IDA);","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"WilliamHaiweiGu"},"content":"        jsonTaaDataStorage.saveTaaData(new TaaData(original)); // file path not specified","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"WilliamHaiweiGu"},"content":"        readBack \u003d jsonTaaDataStorage.readTaaData().get().studentList; // file path not specified","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"cyli133"},"content":"        assertEquals(original, new ClassList(readBack));","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"    public void saveTaaData_nullTaaData_throwsNullPointerException() {","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"                -\u003e saveTaaData(null, \"SomeFile.json\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"     * Saves TAA data at the specified {@code filePath}.","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private void saveTaaData(ReadOnlyStudentList studentList, String filePath) {","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"            new JsonTaaStorage(Paths.get(filePath))","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    .saveTaaData(new TaaData(studentList), addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"    public void saveTaaData_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-04-03"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveTaaData(new ClassList(), null));","lastModifiedDate":"2023-04-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chunzkok":31,"cyli133":6,"-":65,"WilliamHaiweiGu":12}},{"path":"src/test/java/taa/storage/JsonSerializableClassListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.commons.util.JsonUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.model.ReadOnlyStudentList;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"cyli133"},"content":"public class JsonSerializableClassListTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"            \"test\", \"data\", \"JsonSerializableClassListTest\");","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsTaaData.json\");","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonTaaData.json\");","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonTaaData.json\");","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        JsonSerializableTaaData dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"                JsonSerializableTaaData.class).get();","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"        ReadOnlyStudentList classListFromFile \u003d dataFromFile.toModelType().studentList;","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        ClassList typicalPersonsClassList \u003d TypicalPersons.getTypicalTaaData();","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"        assertEquals(classListFromFile, typicalPersonsClassList);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        JsonSerializableTaaData dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"                JsonSerializableTaaData.class).get();","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        JsonSerializableTaaData dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"                JsonSerializableTaaData.class).get();","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableTaaData.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chunzkok":18,"cyli133":4,"-":25,"WilliamHaiweiGu":2}},{"path":"src/test/java/taa/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"        userPrefs.setTaaDataFilePath(Paths.get(\"taaData.json\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chunzkok":10,"-":113}},{"path":"src/test/java/taa/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.ReadOnlyStudentList;","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import taa.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        JsonTaaStorage addressBookStorage \u003d new JsonTaaStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"    public void taaDataReadSave() throws Exception {","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"cyli133"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonClassListStorageTest} class.","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"        ClassList original \u003d TypicalPersons.getTypicalTaaData();","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"        storageManager.saveTaaData(new TaaData(original));","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"        ReadOnlyStudentList retrieved \u003d storageManager.readTaaData().get().studentList;","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"cyli133"},"content":"        assertEquals(original, new ClassList(retrieved));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"    public void getTaaDataFilePath() {","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"        assertNotNull(storageManager.getTaaDataFilePath());","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":10,"cyli133":3,"-":53,"WilliamHaiweiGu":2}},{"path":"src/test/java/taa/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"chunzkok":1,"-":33}},{"path":"src/test/java/taa/testutil/ClassListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" * A utility class to help with building ClassList objects.","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" *     {@code ClassList ab \u003d new ClassListBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"public class ClassListBuilder {","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"cyli133"},"content":"    private ClassList classList;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    public ClassListBuilder() {","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"cyli133"},"content":"        classList \u003d new ClassList();","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    public ClassListBuilder(ClassList classList) {","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"cyli133"},"content":"        this.classList \u003d classList;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"cyli133"},"content":"     * Adds a new {@code Student} to the {@code ClassList} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    public ClassListBuilder withPerson(Student student) {","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"cyli133"},"content":"        classList.addStudent(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"cyli133"},"content":"    public ClassList build() {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"cyli133"},"content":"        return classList;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":8,"cyli133":8,"-":18}},{"path":"src/test/java/taa/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.EditStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    private EditStudentCommand.EditStudentDescriptor descriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        descriptor \u003d new EditStudentCommand.EditStudentDescriptor();","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    public EditPersonDescriptorBuilder(EditStudentCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        this.descriptor \u003d new EditStudentCommand.EditStudentDescriptor(descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    public EditPersonDescriptorBuilder(Student student) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        descriptor \u003d new EditStudentCommand.EditStudentDescriptor();","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        descriptor.setTags(student.getClassTags());","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"    public EditStudentCommand.EditStudentDescriptor build() {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"chunzkok":18,"-":39}},{"path":"src/test/java/taa/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"TamKengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"import taa.commons.util.SampleDataUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    public static final String DEFAULT_ATTENDANCE \u003d \"0;0;0;0;0;0;0;0;0;0;0;0\";","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    public static final String DEFAULT_PP \u003d \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\";","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    private Attendance attendance;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"        attendance \u003d new Attendance(DEFAULT_ATTENDANCE, DEFAULT_PP);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"     * Initializes the PersonBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"    public PersonBuilder(Student studentToCopy) {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"        attendance \u003d studentToCopy.getAtd();","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getClassTags());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"     * Sets the {@code Attendance} of the {@code Student} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"    public PersonBuilder withAttendance(Attendance atd) {","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"        this.attendance \u003d atd;","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"TamKengHong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"TamKengHong"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"TamKengHong"},"content":"     * @return built student","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"TamKengHong"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"    public Student build() {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"TamKengHong"},"content":"        return new Student(name, attendance.atdStrorageStr(), attendance.partPointsStorageStr(),","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"TamKengHong"},"content":"                new ArrayList\u003c\u003e(), tags);","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"chunzkok":12,"bojie3":16,"-":42,"WilliamHaiweiGu":1,"TamKengHong":7}},{"path":"src/test/java/taa/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.AddStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import taa.logic.commands.EditStudentCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import taa.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":" * A utility class for Student.","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"public class PersonUtil {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        return AddStudentCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        sb.append(CliSyntax.PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        student.getClassTags().stream().forEach(","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"            s -\u003e sb.append(CliSyntax.PREFIX_CLASS_TAG + s.tagName + \" \")","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        );","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"    public static String getEditPersonDescriptorDetails(EditStudentCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(CliSyntax.PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"                sb.append(CliSyntax.PREFIX_CLASS_TAG);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"                tags.forEach(s -\u003e sb.append(CliSyntax.PREFIX_CLASS_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chunzkok":51}},{"path":"src/test/java/taa/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":1,"-":71}},{"path":"src/test/java/taa/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import taa.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"    public static Student getPerson(Model model, Index index) {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chunzkok":11,"-":44}},{"path":"src/test/java/taa/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import taa.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private TypicalIndexes() {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"chunzkok":5,"-":10}},{"path":"src/test/java/taa/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import static taa.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"cyli133"},"content":"import taa.model.ClassList;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"import taa.model.student.Attendance;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.model.student.Student;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    private static final Attendance atd \u003d new Attendance(\"0;0;0;0;0;0;0;0;0;0;0;0\",","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"            \"-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1\");","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    public static final Student ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withAttendance(atd)","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    public static final Student BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withAttendance(atd)","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    public static final Student CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"                    .withAttendance(atd).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"    public static final Student DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withAttendance(atd)","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"                    .withTags(\"friends\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    public static final Student ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withAttendance(atd).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    public static final Student FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withAttendance(atd).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"    public static final Student GEORGE \u003d new PersonBuilder().withName(\"George Best\").withAttendance(atd).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"    public static final Student HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withAttendance(atd).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"    public static final Student IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withAttendance(atd).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    public static final Student AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"            .withAttendance(atd).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"    public static final Student BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withAttendance(atd)","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"cyli133"},"content":"     * Returns an {@code ClassList} with all the typical persons.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"    public static ClassList getTypicalTaaData() {","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"cyli133"},"content":"        ClassList ab \u003d new ClassList();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        for (Student student : getTypicalPersons()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"            ab.addStudent(student);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"    public static List\u003cStudent\u003e getTypicalPersons() {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"chunzkok":13,"bojie3":17,"cyli133":3,"-":26}},{"path":"src/test/java/taa/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chunzkok":1,"-":34}},{"path":"src/test/java/taa/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package taa.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import taa.MainApp;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import taa.testutil.Assert;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chunzkok":15,"-":99}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"\u003c?import taa.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chunzkok":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"\u003cfx:root type\u003d\"taa.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"chunzkok":1,"-":5}}]
